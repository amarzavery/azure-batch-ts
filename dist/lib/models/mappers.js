"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const ms_rest_azure_js_1 = require("ms-rest-azure-js");
exports.CloudError = ms_rest_azure_js_1.CloudErrorMapper;
exports.BaseResource = ms_rest_azure_js_1.BaseResourceMapper;
exports.PoolUsageMetrics = {
    serializedName: "PoolUsageMetrics",
    type: {
        name: "Composite",
        className: "PoolUsageMetrics",
        modelProperties: {
            poolId: {
                required: true,
                serializedName: "poolId",
                type: {
                    name: "String"
                }
            },
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                required: true,
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            vmSize: {
                required: true,
                serializedName: "vmSize",
                type: {
                    name: "String"
                }
            },
            totalCoreHours: {
                required: true,
                serializedName: "totalCoreHours",
                type: {
                    name: "Number"
                }
            },
            dataIngressGiB: {
                required: true,
                serializedName: "dataIngressGiB",
                type: {
                    name: "Number"
                }
            },
            dataEgressGiB: {
                required: true,
                serializedName: "dataEgressGiB",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.ImageReference = {
    serializedName: "ImageReference",
    type: {
        name: "Composite",
        className: "ImageReference",
        modelProperties: {
            publisher: {
                serializedName: "publisher",
                type: {
                    name: "String"
                }
            },
            offer: {
                serializedName: "offer",
                type: {
                    name: "String"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            },
            virtualMachineImageId: {
                serializedName: "virtualMachineImageId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.NodeAgentSku = {
    serializedName: "NodeAgentSku",
    type: {
        name: "Composite",
        className: "NodeAgentSku",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            verifiedImageReferences: {
                serializedName: "verifiedImageReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ImageReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "ImageReference"
                        }
                    }
                }
            },
            osType: {
                serializedName: "osType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "linux",
                        "windows"
                    ]
                }
            }
        }
    }
};
exports.AuthenticationTokenSettings = {
    serializedName: "AuthenticationTokenSettings",
    type: {
        name: "Composite",
        className: "AuthenticationTokenSettings",
        modelProperties: {
            access: {
                serializedName: "access",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "AccessScopeElementType",
                        type: {
                            name: "Enum",
                            allowedValues: [
                                "job"
                            ]
                        }
                    }
                }
            }
        }
    }
};
exports.UsageStatistics = {
    serializedName: "UsageStatistics",
    type: {
        name: "Composite",
        className: "UsageStatistics",
        modelProperties: {
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            lastUpdateTime: {
                required: true,
                serializedName: "lastUpdateTime",
                type: {
                    name: "DateTime"
                }
            },
            dedicatedCoreTime: {
                required: true,
                serializedName: "dedicatedCoreTime",
                type: {
                    name: "TimeSpan"
                }
            }
        }
    }
};
exports.ResourceStatistics = {
    serializedName: "ResourceStatistics",
    type: {
        name: "Composite",
        className: "ResourceStatistics",
        modelProperties: {
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            lastUpdateTime: {
                required: true,
                serializedName: "lastUpdateTime",
                type: {
                    name: "DateTime"
                }
            },
            avgCPUPercentage: {
                required: true,
                serializedName: "avgCPUPercentage",
                type: {
                    name: "Number"
                }
            },
            avgMemoryGiB: {
                required: true,
                serializedName: "avgMemoryGiB",
                type: {
                    name: "Number"
                }
            },
            peakMemoryGiB: {
                required: true,
                serializedName: "peakMemoryGiB",
                type: {
                    name: "Number"
                }
            },
            avgDiskGiB: {
                required: true,
                serializedName: "avgDiskGiB",
                type: {
                    name: "Number"
                }
            },
            peakDiskGiB: {
                required: true,
                serializedName: "peakDiskGiB",
                type: {
                    name: "Number"
                }
            },
            diskReadIOps: {
                required: true,
                serializedName: "diskReadIOps",
                type: {
                    name: "Number"
                }
            },
            diskWriteIOps: {
                required: true,
                serializedName: "diskWriteIOps",
                type: {
                    name: "Number"
                }
            },
            diskReadGiB: {
                required: true,
                serializedName: "diskReadGiB",
                type: {
                    name: "Number"
                }
            },
            diskWriteGiB: {
                required: true,
                serializedName: "diskWriteGiB",
                type: {
                    name: "Number"
                }
            },
            networkReadGiB: {
                required: true,
                serializedName: "networkReadGiB",
                type: {
                    name: "Number"
                }
            },
            networkWriteGiB: {
                required: true,
                serializedName: "networkWriteGiB",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.PoolStatistics = {
    serializedName: "PoolStatistics",
    type: {
        name: "Composite",
        className: "PoolStatistics",
        modelProperties: {
            url: {
                required: true,
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            lastUpdateTime: {
                required: true,
                serializedName: "lastUpdateTime",
                type: {
                    name: "DateTime"
                }
            },
            usageStats: {
                serializedName: "usageStats",
                type: {
                    name: "Composite",
                    className: "UsageStatistics"
                }
            },
            resourceStats: {
                serializedName: "resourceStats",
                type: {
                    name: "Composite",
                    className: "ResourceStatistics"
                }
            }
        }
    }
};
exports.JobStatistics = {
    serializedName: "JobStatistics",
    type: {
        name: "Composite",
        className: "JobStatistics",
        modelProperties: {
            url: {
                required: true,
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            lastUpdateTime: {
                required: true,
                serializedName: "lastUpdateTime",
                type: {
                    name: "DateTime"
                }
            },
            userCPUTime: {
                required: true,
                serializedName: "userCPUTime",
                type: {
                    name: "TimeSpan"
                }
            },
            kernelCPUTime: {
                required: true,
                serializedName: "kernelCPUTime",
                type: {
                    name: "TimeSpan"
                }
            },
            wallClockTime: {
                required: true,
                serializedName: "wallClockTime",
                type: {
                    name: "TimeSpan"
                }
            },
            readIOps: {
                required: true,
                serializedName: "readIOps",
                type: {
                    name: "Number"
                }
            },
            writeIOps: {
                required: true,
                serializedName: "writeIOps",
                type: {
                    name: "Number"
                }
            },
            readIOGiB: {
                required: true,
                serializedName: "readIOGiB",
                type: {
                    name: "Number"
                }
            },
            writeIOGiB: {
                required: true,
                serializedName: "writeIOGiB",
                type: {
                    name: "Number"
                }
            },
            numSucceededTasks: {
                required: true,
                serializedName: "numSucceededTasks",
                type: {
                    name: "Number"
                }
            },
            numFailedTasks: {
                required: true,
                serializedName: "numFailedTasks",
                type: {
                    name: "Number"
                }
            },
            numTaskRetries: {
                required: true,
                serializedName: "numTaskRetries",
                type: {
                    name: "Number"
                }
            },
            waitTime: {
                required: true,
                serializedName: "waitTime",
                type: {
                    name: "TimeSpan"
                }
            }
        }
    }
};
exports.NameValuePair = {
    serializedName: "NameValuePair",
    type: {
        name: "Composite",
        className: "NameValuePair",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DeleteCertificateError = {
    serializedName: "DeleteCertificateError",
    type: {
        name: "Composite",
        className: "DeleteCertificateError",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            values: {
                serializedName: "values",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "NameValuePairElementType",
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            }
        }
    }
};
exports.Certificate = {
    serializedName: "Certificate",
    type: {
        name: "Composite",
        className: "Certificate",
        modelProperties: {
            thumbprint: {
                serializedName: "thumbprint",
                type: {
                    name: "String"
                }
            },
            thumbprintAlgorithm: {
                serializedName: "thumbprintAlgorithm",
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "active",
                        "deleting",
                        "deletefailed"
                    ]
                }
            },
            stateTransitionTime: {
                serializedName: "stateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            previousState: {
                serializedName: "previousState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "active",
                        "deleting",
                        "deletefailed"
                    ]
                }
            },
            previousStateTransitionTime: {
                serializedName: "previousStateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            publicData: {
                serializedName: "publicData",
                type: {
                    name: "String"
                }
            },
            deleteCertificateError: {
                serializedName: "deleteCertificateError",
                type: {
                    name: "Composite",
                    className: "DeleteCertificateError"
                }
            }
        }
    }
};
exports.ApplicationPackageReference = {
    serializedName: "ApplicationPackageReference",
    type: {
        name: "Composite",
        className: "ApplicationPackageReference",
        modelProperties: {
            applicationId: {
                required: true,
                serializedName: "applicationId",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ApplicationSummary = {
    serializedName: "ApplicationSummary",
    type: {
        name: "Composite",
        className: "ApplicationSummary",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            displayName: {
                required: true,
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            versions: {
                required: true,
                serializedName: "versions",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "stringElementType",
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.CertificateAddParameter = {
    serializedName: "CertificateAddParameter",
    type: {
        name: "Composite",
        className: "CertificateAddParameter",
        modelProperties: {
            thumbprint: {
                required: true,
                serializedName: "thumbprint",
                type: {
                    name: "String"
                }
            },
            thumbprintAlgorithm: {
                required: true,
                serializedName: "thumbprintAlgorithm",
                type: {
                    name: "String"
                }
            },
            data: {
                required: true,
                serializedName: "data",
                type: {
                    name: "String"
                }
            },
            certificateFormat: {
                serializedName: "certificateFormat",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "pfx",
                        "cer"
                    ]
                }
            },
            password: {
                serializedName: "password",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.FileProperties = {
    serializedName: "FileProperties",
    type: {
        name: "Composite",
        className: "FileProperties",
        modelProperties: {
            creationTime: {
                serializedName: "creationTime",
                type: {
                    name: "DateTime"
                }
            },
            lastModified: {
                required: true,
                serializedName: "lastModified",
                type: {
                    name: "DateTime"
                }
            },
            contentLength: {
                required: true,
                serializedName: "contentLength",
                type: {
                    name: "Number"
                }
            },
            contentType: {
                serializedName: "contentType",
                type: {
                    name: "String"
                }
            },
            fileMode: {
                serializedName: "fileMode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.NodeFile = {
    serializedName: "NodeFile",
    type: {
        name: "Composite",
        className: "NodeFile",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            isDirectory: {
                serializedName: "isDirectory",
                type: {
                    name: "Boolean"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "FileProperties"
                }
            }
        }
    }
};
exports.Schedule = {
    serializedName: "Schedule",
    type: {
        name: "Composite",
        className: "Schedule",
        modelProperties: {
            doNotRunUntil: {
                serializedName: "doNotRunUntil",
                type: {
                    name: "DateTime"
                }
            },
            doNotRunAfter: {
                serializedName: "doNotRunAfter",
                type: {
                    name: "DateTime"
                }
            },
            startWindow: {
                serializedName: "startWindow",
                type: {
                    name: "TimeSpan"
                }
            },
            recurrenceInterval: {
                serializedName: "recurrenceInterval",
                type: {
                    name: "TimeSpan"
                }
            }
        }
    }
};
exports.JobConstraints = {
    serializedName: "JobConstraints",
    type: {
        name: "Composite",
        className: "JobConstraints",
        modelProperties: {
            maxWallClockTime: {
                serializedName: "maxWallClockTime",
                type: {
                    name: "TimeSpan"
                }
            },
            maxTaskRetryCount: {
                serializedName: "maxTaskRetryCount",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.ContainerRegistry = {
    serializedName: "ContainerRegistry",
    type: {
        name: "Composite",
        className: "ContainerRegistry",
        modelProperties: {
            registryServer: {
                serializedName: "registryServer",
                type: {
                    name: "String"
                }
            },
            userName: {
                required: true,
                serializedName: "username",
                type: {
                    name: "String"
                }
            },
            password: {
                required: true,
                serializedName: "password",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TaskContainerSettings = {
    serializedName: "TaskContainerSettings",
    type: {
        name: "Composite",
        className: "TaskContainerSettings",
        modelProperties: {
            containerRunOptions: {
                serializedName: "containerRunOptions",
                type: {
                    name: "String"
                }
            },
            imageName: {
                required: true,
                serializedName: "imageName",
                type: {
                    name: "String"
                }
            },
            registry: {
                serializedName: "registry",
                type: {
                    name: "Composite",
                    className: "ContainerRegistry"
                }
            }
        }
    }
};
exports.ResourceFile = {
    serializedName: "ResourceFile",
    type: {
        name: "Composite",
        className: "ResourceFile",
        modelProperties: {
            blobSource: {
                required: true,
                serializedName: "blobSource",
                type: {
                    name: "String"
                }
            },
            filePath: {
                required: true,
                serializedName: "filePath",
                type: {
                    name: "String"
                }
            },
            fileMode: {
                serializedName: "fileMode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.EnvironmentSetting = {
    serializedName: "EnvironmentSetting",
    type: {
        name: "Composite",
        className: "EnvironmentSetting",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ExitOptions = {
    serializedName: "ExitOptions",
    type: {
        name: "Composite",
        className: "ExitOptions",
        modelProperties: {
            jobAction: {
                serializedName: "jobAction",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "none",
                        "disable",
                        "terminate"
                    ]
                }
            },
            dependencyAction: {
                serializedName: "dependencyAction",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "satisfy",
                        "block"
                    ]
                }
            }
        }
    }
};
exports.ExitCodeMapping = {
    serializedName: "ExitCodeMapping",
    type: {
        name: "Composite",
        className: "ExitCodeMapping",
        modelProperties: {
            code: {
                required: true,
                serializedName: "code",
                type: {
                    name: "Number"
                }
            },
            exitOptions: {
                required: true,
                serializedName: "exitOptions",
                type: {
                    name: "Composite",
                    className: "ExitOptions"
                }
            }
        }
    }
};
exports.ExitCodeRangeMapping = {
    serializedName: "ExitCodeRangeMapping",
    type: {
        name: "Composite",
        className: "ExitCodeRangeMapping",
        modelProperties: {
            start: {
                required: true,
                serializedName: "start",
                type: {
                    name: "Number"
                }
            },
            end: {
                required: true,
                serializedName: "end",
                type: {
                    name: "Number"
                }
            },
            exitOptions: {
                required: true,
                serializedName: "exitOptions",
                type: {
                    name: "Composite",
                    className: "ExitOptions"
                }
            }
        }
    }
};
exports.ExitConditions = {
    serializedName: "ExitConditions",
    type: {
        name: "Composite",
        className: "ExitConditions",
        modelProperties: {
            exitCodes: {
                serializedName: "exitCodes",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ExitCodeMappingElementType",
                        type: {
                            name: "Composite",
                            className: "ExitCodeMapping"
                        }
                    }
                }
            },
            exitCodeRanges: {
                serializedName: "exitCodeRanges",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ExitCodeRangeMappingElementType",
                        type: {
                            name: "Composite",
                            className: "ExitCodeRangeMapping"
                        }
                    }
                }
            },
            preProcessingError: {
                serializedName: "preProcessingError",
                type: {
                    name: "Composite",
                    className: "ExitOptions"
                }
            },
            fileUploadError: {
                serializedName: "fileUploadError",
                type: {
                    name: "Composite",
                    className: "ExitOptions"
                }
            },
            default: {
                serializedName: "default",
                type: {
                    name: "Composite",
                    className: "ExitOptions"
                }
            }
        }
    }
};
exports.AutoUserSpecification = {
    serializedName: "AutoUserSpecification",
    type: {
        name: "Composite",
        className: "AutoUserSpecification",
        modelProperties: {
            scope: {
                serializedName: "scope",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "task",
                        "pool"
                    ]
                }
            },
            elevationLevel: {
                serializedName: "elevationLevel",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "nonadmin",
                        "admin"
                    ]
                }
            }
        }
    }
};
exports.UserIdentity = {
    serializedName: "UserIdentity",
    type: {
        name: "Composite",
        className: "UserIdentity",
        modelProperties: {
            userName: {
                serializedName: "username",
                type: {
                    name: "String"
                }
            },
            autoUser: {
                serializedName: "autoUser",
                type: {
                    name: "Composite",
                    className: "AutoUserSpecification"
                }
            }
        }
    }
};
exports.LinuxUserConfiguration = {
    serializedName: "LinuxUserConfiguration",
    type: {
        name: "Composite",
        className: "LinuxUserConfiguration",
        modelProperties: {
            uid: {
                serializedName: "uid",
                type: {
                    name: "Number"
                }
            },
            gid: {
                serializedName: "gid",
                type: {
                    name: "Number"
                }
            },
            sshPrivateKey: {
                serializedName: "sshPrivateKey",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.UserAccount = {
    serializedName: "UserAccount",
    type: {
        name: "Composite",
        className: "UserAccount",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            password: {
                required: true,
                serializedName: "password",
                type: {
                    name: "String"
                }
            },
            elevationLevel: {
                serializedName: "elevationLevel",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "nonadmin",
                        "admin"
                    ]
                }
            },
            linuxUserConfiguration: {
                serializedName: "linuxUserConfiguration",
                type: {
                    name: "Composite",
                    className: "LinuxUserConfiguration"
                }
            }
        }
    }
};
exports.TaskConstraints = {
    serializedName: "TaskConstraints",
    type: {
        name: "Composite",
        className: "TaskConstraints",
        modelProperties: {
            maxWallClockTime: {
                serializedName: "maxWallClockTime",
                type: {
                    name: "TimeSpan"
                }
            },
            retentionTime: {
                serializedName: "retentionTime",
                type: {
                    name: "TimeSpan"
                }
            },
            maxTaskRetryCount: {
                serializedName: "maxTaskRetryCount",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.OutputFileBlobContainerDestination = {
    serializedName: "OutputFileBlobContainerDestination",
    type: {
        name: "Composite",
        className: "OutputFileBlobContainerDestination",
        modelProperties: {
            path: {
                serializedName: "path",
                type: {
                    name: "String"
                }
            },
            containerUrl: {
                required: true,
                serializedName: "containerUrl",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OutputFileDestination = {
    serializedName: "OutputFileDestination",
    type: {
        name: "Composite",
        className: "OutputFileDestination",
        modelProperties: {
            container: {
                serializedName: "container",
                type: {
                    name: "Composite",
                    className: "OutputFileBlobContainerDestination"
                }
            }
        }
    }
};
exports.OutputFileUploadOptions = {
    serializedName: "OutputFileUploadOptions",
    type: {
        name: "Composite",
        className: "OutputFileUploadOptions",
        modelProperties: {
            uploadCondition: {
                required: true,
                serializedName: "uploadCondition",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "tasksuccess",
                        "taskfailure",
                        "taskcompletion"
                    ]
                }
            }
        }
    }
};
exports.OutputFile = {
    serializedName: "OutputFile",
    type: {
        name: "Composite",
        className: "OutputFile",
        modelProperties: {
            filePattern: {
                required: true,
                serializedName: "filePattern",
                type: {
                    name: "String"
                }
            },
            destination: {
                required: true,
                serializedName: "destination",
                type: {
                    name: "Composite",
                    className: "OutputFileDestination"
                }
            },
            uploadOptions: {
                required: true,
                serializedName: "uploadOptions",
                type: {
                    name: "Composite",
                    className: "OutputFileUploadOptions"
                }
            }
        }
    }
};
exports.JobManagerTask = {
    serializedName: "JobManagerTask",
    type: {
        name: "Composite",
        className: "JobManagerTask",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            commandLine: {
                required: true,
                serializedName: "commandLine",
                type: {
                    name: "String"
                }
            },
            containerSettings: {
                serializedName: "containerSettings",
                type: {
                    name: "Composite",
                    className: "TaskContainerSettings"
                }
            },
            resourceFiles: {
                serializedName: "resourceFiles",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ResourceFileElementType",
                        type: {
                            name: "Composite",
                            className: "ResourceFile"
                        }
                    }
                }
            },
            outputFiles: {
                serializedName: "outputFiles",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "OutputFileElementType",
                        type: {
                            name: "Composite",
                            className: "OutputFile"
                        }
                    }
                }
            },
            environmentSettings: {
                serializedName: "environmentSettings",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "EnvironmentSettingElementType",
                        type: {
                            name: "Composite",
                            className: "EnvironmentSetting"
                        }
                    }
                }
            },
            constraints: {
                serializedName: "constraints",
                type: {
                    name: "Composite",
                    className: "TaskConstraints"
                }
            },
            killJobOnCompletion: {
                serializedName: "killJobOnCompletion",
                type: {
                    name: "Boolean"
                }
            },
            userIdentity: {
                serializedName: "userIdentity",
                type: {
                    name: "Composite",
                    className: "UserIdentity"
                }
            },
            runExclusive: {
                serializedName: "runExclusive",
                type: {
                    name: "Boolean"
                }
            },
            applicationPackageReferences: {
                serializedName: "applicationPackageReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ApplicationPackageReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "ApplicationPackageReference"
                        }
                    }
                }
            },
            authenticationTokenSettings: {
                serializedName: "authenticationTokenSettings",
                type: {
                    name: "Composite",
                    className: "AuthenticationTokenSettings"
                }
            },
            allowLowPriorityNode: {
                serializedName: "allowLowPriorityNode",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.JobPreparationTask = {
    serializedName: "JobPreparationTask",
    type: {
        name: "Composite",
        className: "JobPreparationTask",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            commandLine: {
                required: true,
                serializedName: "commandLine",
                type: {
                    name: "String"
                }
            },
            containerSettings: {
                serializedName: "containerSettings",
                type: {
                    name: "Composite",
                    className: "TaskContainerSettings"
                }
            },
            resourceFiles: {
                serializedName: "resourceFiles",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ResourceFileElementType",
                        type: {
                            name: "Composite",
                            className: "ResourceFile"
                        }
                    }
                }
            },
            environmentSettings: {
                serializedName: "environmentSettings",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "EnvironmentSettingElementType",
                        type: {
                            name: "Composite",
                            className: "EnvironmentSetting"
                        }
                    }
                }
            },
            constraints: {
                serializedName: "constraints",
                type: {
                    name: "Composite",
                    className: "TaskConstraints"
                }
            },
            waitForSuccess: {
                serializedName: "waitForSuccess",
                type: {
                    name: "Boolean"
                }
            },
            userIdentity: {
                serializedName: "userIdentity",
                type: {
                    name: "Composite",
                    className: "UserIdentity"
                }
            },
            rerunOnNodeRebootAfterSuccess: {
                serializedName: "rerunOnNodeRebootAfterSuccess",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.JobReleaseTask = {
    serializedName: "JobReleaseTask",
    type: {
        name: "Composite",
        className: "JobReleaseTask",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            commandLine: {
                required: true,
                serializedName: "commandLine",
                type: {
                    name: "String"
                }
            },
            containerSettings: {
                serializedName: "containerSettings",
                type: {
                    name: "Composite",
                    className: "TaskContainerSettings"
                }
            },
            resourceFiles: {
                serializedName: "resourceFiles",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ResourceFileElementType",
                        type: {
                            name: "Composite",
                            className: "ResourceFile"
                        }
                    }
                }
            },
            environmentSettings: {
                serializedName: "environmentSettings",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "EnvironmentSettingElementType",
                        type: {
                            name: "Composite",
                            className: "EnvironmentSetting"
                        }
                    }
                }
            },
            maxWallClockTime: {
                serializedName: "maxWallClockTime",
                type: {
                    name: "TimeSpan"
                }
            },
            retentionTime: {
                serializedName: "retentionTime",
                type: {
                    name: "TimeSpan"
                }
            },
            userIdentity: {
                serializedName: "userIdentity",
                type: {
                    name: "Composite",
                    className: "UserIdentity"
                }
            }
        }
    }
};
exports.TaskSchedulingPolicy = {
    serializedName: "TaskSchedulingPolicy",
    type: {
        name: "Composite",
        className: "TaskSchedulingPolicy",
        modelProperties: {
            nodeFillType: {
                required: true,
                serializedName: "nodeFillType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "spread",
                        "pack"
                    ]
                }
            }
        }
    }
};
exports.StartTask = {
    serializedName: "StartTask",
    type: {
        name: "Composite",
        className: "StartTask",
        modelProperties: {
            commandLine: {
                required: true,
                serializedName: "commandLine",
                type: {
                    name: "String"
                }
            },
            containerSettings: {
                serializedName: "containerSettings",
                type: {
                    name: "Composite",
                    className: "TaskContainerSettings"
                }
            },
            resourceFiles: {
                serializedName: "resourceFiles",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ResourceFileElementType",
                        type: {
                            name: "Composite",
                            className: "ResourceFile"
                        }
                    }
                }
            },
            environmentSettings: {
                serializedName: "environmentSettings",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "EnvironmentSettingElementType",
                        type: {
                            name: "Composite",
                            className: "EnvironmentSetting"
                        }
                    }
                }
            },
            userIdentity: {
                serializedName: "userIdentity",
                type: {
                    name: "Composite",
                    className: "UserIdentity"
                }
            },
            maxTaskRetryCount: {
                serializedName: "maxTaskRetryCount",
                type: {
                    name: "Number"
                }
            },
            waitForSuccess: {
                serializedName: "waitForSuccess",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.CertificateReference = {
    serializedName: "CertificateReference",
    type: {
        name: "Composite",
        className: "CertificateReference",
        modelProperties: {
            thumbprint: {
                required: true,
                serializedName: "thumbprint",
                type: {
                    name: "String"
                }
            },
            thumbprintAlgorithm: {
                required: true,
                serializedName: "thumbprintAlgorithm",
                type: {
                    name: "String"
                }
            },
            storeLocation: {
                serializedName: "storeLocation",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "currentuser",
                        "localmachine"
                    ]
                }
            },
            storeName: {
                serializedName: "storeName",
                type: {
                    name: "String"
                }
            },
            visibility: {
                serializedName: "visibility",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CertificateVisibilityElementType",
                        type: {
                            name: "Enum",
                            allowedValues: [
                                "starttask",
                                "task",
                                "remoteuser"
                            ]
                        }
                    }
                }
            }
        }
    }
};
exports.MetadataItem = {
    serializedName: "MetadataItem",
    type: {
        name: "Composite",
        className: "MetadataItem",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                required: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CloudServiceConfiguration = {
    serializedName: "CloudServiceConfiguration",
    type: {
        name: "Composite",
        className: "CloudServiceConfiguration",
        modelProperties: {
            osFamily: {
                required: true,
                serializedName: "osFamily",
                type: {
                    name: "String"
                }
            },
            targetOSVersion: {
                serializedName: "targetOSVersion",
                type: {
                    name: "String"
                }
            },
            currentOSVersion: {
                readOnly: true,
                serializedName: "currentOSVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OSDisk = {
    serializedName: "OSDisk",
    type: {
        name: "Composite",
        className: "OSDisk",
        modelProperties: {
            caching: {
                serializedName: "caching",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "none",
                        "readonly",
                        "readwrite"
                    ]
                }
            }
        }
    }
};
exports.WindowsConfiguration = {
    serializedName: "WindowsConfiguration",
    type: {
        name: "Composite",
        className: "WindowsConfiguration",
        modelProperties: {
            enableAutomaticUpdates: {
                serializedName: "enableAutomaticUpdates",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.DataDisk = {
    serializedName: "DataDisk",
    type: {
        name: "Composite",
        className: "DataDisk",
        modelProperties: {
            lun: {
                required: true,
                serializedName: "lun",
                type: {
                    name: "Number"
                }
            },
            caching: {
                serializedName: "caching",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "none",
                        "readonly",
                        "readwrite"
                    ]
                }
            },
            diskSizeGB: {
                required: true,
                serializedName: "diskSizeGB",
                type: {
                    name: "Number"
                }
            },
            storageAccountType: {
                serializedName: "storageAccountType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "standard_lrs",
                        "premium_lrs"
                    ]
                }
            }
        }
    }
};
exports.ContainerConfiguration = {
    serializedName: "ContainerConfiguration",
    type: {
        name: "Composite",
        className: "ContainerConfiguration",
        modelProperties: {
            type: {
                required: true,
                isConstant: true,
                serializedName: "type",
                defaultValue: 'docker',
                type: {
                    name: "String"
                }
            },
            containerImageNames: {
                serializedName: "containerImageNames",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "stringElementType",
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            containerRegistries: {
                serializedName: "containerRegistries",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ContainerRegistryElementType",
                        type: {
                            name: "Composite",
                            className: "ContainerRegistry"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineConfiguration = {
    serializedName: "VirtualMachineConfiguration",
    type: {
        name: "Composite",
        className: "VirtualMachineConfiguration",
        modelProperties: {
            imageReference: {
                required: true,
                serializedName: "imageReference",
                type: {
                    name: "Composite",
                    className: "ImageReference"
                }
            },
            osDisk: {
                serializedName: "osDisk",
                type: {
                    name: "Composite",
                    className: "OSDisk"
                }
            },
            nodeAgentSKUId: {
                required: true,
                serializedName: "nodeAgentSKUId",
                type: {
                    name: "String"
                }
            },
            windowsConfiguration: {
                serializedName: "windowsConfiguration",
                type: {
                    name: "Composite",
                    className: "WindowsConfiguration"
                }
            },
            dataDisks: {
                serializedName: "dataDisks",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "DataDiskElementType",
                        type: {
                            name: "Composite",
                            className: "DataDisk"
                        }
                    }
                }
            },
            licenseType: {
                serializedName: "licenseType",
                type: {
                    name: "String"
                }
            },
            containerConfiguration: {
                serializedName: "containerConfiguration",
                type: {
                    name: "Composite",
                    className: "ContainerConfiguration"
                }
            }
        }
    }
};
exports.NetworkSecurityGroupRule = {
    serializedName: "NetworkSecurityGroupRule",
    type: {
        name: "Composite",
        className: "NetworkSecurityGroupRule",
        modelProperties: {
            priority: {
                required: true,
                serializedName: "priority",
                type: {
                    name: "Number"
                }
            },
            access: {
                required: true,
                serializedName: "access",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "allow",
                        "deny"
                    ]
                }
            },
            sourceAddressPrefix: {
                required: true,
                serializedName: "sourceAddressPrefix",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.InboundNATPool = {
    serializedName: "InboundNATPool",
    type: {
        name: "Composite",
        className: "InboundNATPool",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            protocol: {
                required: true,
                serializedName: "protocol",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "tcp",
                        "udp"
                    ]
                }
            },
            backendPort: {
                required: true,
                serializedName: "backendPort",
                type: {
                    name: "Number"
                }
            },
            frontendPortRangeStart: {
                required: true,
                serializedName: "frontendPortRangeStart",
                type: {
                    name: "Number"
                }
            },
            frontendPortRangeEnd: {
                required: true,
                serializedName: "frontendPortRangeEnd",
                type: {
                    name: "Number"
                }
            },
            networkSecurityGroupRules: {
                serializedName: "networkSecurityGroupRules",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "NetworkSecurityGroupRuleElementType",
                        type: {
                            name: "Composite",
                            className: "NetworkSecurityGroupRule"
                        }
                    }
                }
            }
        }
    }
};
exports.PoolEndpointConfiguration = {
    serializedName: "PoolEndpointConfiguration",
    type: {
        name: "Composite",
        className: "PoolEndpointConfiguration",
        modelProperties: {
            inboundNATPools: {
                required: true,
                serializedName: "inboundNATPools",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "InboundNATPoolElementType",
                        type: {
                            name: "Composite",
                            className: "InboundNATPool"
                        }
                    }
                }
            }
        }
    }
};
exports.NetworkConfiguration = {
    serializedName: "NetworkConfiguration",
    type: {
        name: "Composite",
        className: "NetworkConfiguration",
        modelProperties: {
            subnetId: {
                serializedName: "subnetId",
                type: {
                    name: "String"
                }
            },
            endpointConfiguration: {
                serializedName: "endpointConfiguration",
                type: {
                    name: "Composite",
                    className: "PoolEndpointConfiguration"
                }
            }
        }
    }
};
exports.PoolSpecification = {
    serializedName: "PoolSpecification",
    type: {
        name: "Composite",
        className: "PoolSpecification",
        modelProperties: {
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            vmSize: {
                required: true,
                serializedName: "vmSize",
                type: {
                    name: "String"
                }
            },
            cloudServiceConfiguration: {
                serializedName: "cloudServiceConfiguration",
                type: {
                    name: "Composite",
                    className: "CloudServiceConfiguration"
                }
            },
            virtualMachineConfiguration: {
                serializedName: "virtualMachineConfiguration",
                type: {
                    name: "Composite",
                    className: "VirtualMachineConfiguration"
                }
            },
            maxTasksPerNode: {
                serializedName: "maxTasksPerNode",
                type: {
                    name: "Number"
                }
            },
            taskSchedulingPolicy: {
                serializedName: "taskSchedulingPolicy",
                type: {
                    name: "Composite",
                    className: "TaskSchedulingPolicy"
                }
            },
            resizeTimeout: {
                serializedName: "resizeTimeout",
                type: {
                    name: "TimeSpan"
                }
            },
            targetDedicatedNodes: {
                serializedName: "targetDedicatedNodes",
                type: {
                    name: "Number"
                }
            },
            targetLowPriorityNodes: {
                serializedName: "targetLowPriorityNodes",
                type: {
                    name: "Number"
                }
            },
            enableAutoScale: {
                serializedName: "enableAutoScale",
                type: {
                    name: "Boolean"
                }
            },
            autoScaleFormula: {
                serializedName: "autoScaleFormula",
                type: {
                    name: "String"
                }
            },
            autoScaleEvaluationInterval: {
                serializedName: "autoScaleEvaluationInterval",
                type: {
                    name: "TimeSpan"
                }
            },
            enableInterNodeCommunication: {
                serializedName: "enableInterNodeCommunication",
                type: {
                    name: "Boolean"
                }
            },
            networkConfiguration: {
                serializedName: "networkConfiguration",
                type: {
                    name: "Composite",
                    className: "NetworkConfiguration"
                }
            },
            startTask: {
                serializedName: "startTask",
                type: {
                    name: "Composite",
                    className: "StartTask"
                }
            },
            certificateReferences: {
                serializedName: "certificateReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CertificateReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "CertificateReference"
                        }
                    }
                }
            },
            applicationPackageReferences: {
                serializedName: "applicationPackageReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ApplicationPackageReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "ApplicationPackageReference"
                        }
                    }
                }
            },
            applicationLicenses: {
                serializedName: "applicationLicenses",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "stringElementType",
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            userAccounts: {
                serializedName: "userAccounts",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "UserAccountElementType",
                        type: {
                            name: "Composite",
                            className: "UserAccount"
                        }
                    }
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            }
        }
    }
};
exports.AutoPoolSpecification = {
    serializedName: "AutoPoolSpecification",
    type: {
        name: "Composite",
        className: "AutoPoolSpecification",
        modelProperties: {
            autoPoolIdPrefix: {
                serializedName: "autoPoolIdPrefix",
                type: {
                    name: "String"
                }
            },
            poolLifetimeOption: {
                required: true,
                serializedName: "poolLifetimeOption",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "jobschedule",
                        "job"
                    ]
                }
            },
            keepAlive: {
                serializedName: "keepAlive",
                type: {
                    name: "Boolean"
                }
            },
            pool: {
                serializedName: "pool",
                type: {
                    name: "Composite",
                    className: "PoolSpecification"
                }
            }
        }
    }
};
exports.PoolInformation = {
    serializedName: "PoolInformation",
    type: {
        name: "Composite",
        className: "PoolInformation",
        modelProperties: {
            poolId: {
                serializedName: "poolId",
                type: {
                    name: "String"
                }
            },
            autoPoolSpecification: {
                serializedName: "autoPoolSpecification",
                type: {
                    name: "Composite",
                    className: "AutoPoolSpecification"
                }
            }
        }
    }
};
exports.JobSpecification = {
    serializedName: "JobSpecification",
    type: {
        name: "Composite",
        className: "JobSpecification",
        modelProperties: {
            priority: {
                serializedName: "priority",
                type: {
                    name: "Number"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            usesTaskDependencies: {
                serializedName: "usesTaskDependencies",
                type: {
                    name: "Boolean"
                }
            },
            onAllTasksComplete: {
                serializedName: "onAllTasksComplete",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "noaction",
                        "terminatejob"
                    ]
                }
            },
            onTaskFailure: {
                serializedName: "onTaskFailure",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "noaction",
                        "performexitoptionsjobaction"
                    ]
                }
            },
            constraints: {
                serializedName: "constraints",
                type: {
                    name: "Composite",
                    className: "JobConstraints"
                }
            },
            jobManagerTask: {
                serializedName: "jobManagerTask",
                type: {
                    name: "Composite",
                    className: "JobManagerTask"
                }
            },
            jobPreparationTask: {
                serializedName: "jobPreparationTask",
                type: {
                    name: "Composite",
                    className: "JobPreparationTask"
                }
            },
            jobReleaseTask: {
                serializedName: "jobReleaseTask",
                type: {
                    name: "Composite",
                    className: "JobReleaseTask"
                }
            },
            commonEnvironmentSettings: {
                serializedName: "commonEnvironmentSettings",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "EnvironmentSettingElementType",
                        type: {
                            name: "Composite",
                            className: "EnvironmentSetting"
                        }
                    }
                }
            },
            poolInfo: {
                required: true,
                serializedName: "poolInfo",
                defaultValue: {},
                type: {
                    name: "Composite",
                    className: "PoolInformation"
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            }
        }
    }
};
exports.RecentJob = {
    serializedName: "RecentJob",
    type: {
        name: "Composite",
        className: "RecentJob",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobScheduleExecutionInformation = {
    serializedName: "JobScheduleExecutionInformation",
    type: {
        name: "Composite",
        className: "JobScheduleExecutionInformation",
        modelProperties: {
            nextRunTime: {
                serializedName: "nextRunTime",
                type: {
                    name: "DateTime"
                }
            },
            recentJob: {
                serializedName: "recentJob",
                type: {
                    name: "Composite",
                    className: "RecentJob"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
exports.JobScheduleStatistics = {
    serializedName: "JobScheduleStatistics",
    type: {
        name: "Composite",
        className: "JobScheduleStatistics",
        modelProperties: {
            url: {
                required: true,
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            lastUpdateTime: {
                required: true,
                serializedName: "lastUpdateTime",
                type: {
                    name: "DateTime"
                }
            },
            userCPUTime: {
                required: true,
                serializedName: "userCPUTime",
                type: {
                    name: "TimeSpan"
                }
            },
            kernelCPUTime: {
                required: true,
                serializedName: "kernelCPUTime",
                type: {
                    name: "TimeSpan"
                }
            },
            wallClockTime: {
                required: true,
                serializedName: "wallClockTime",
                type: {
                    name: "TimeSpan"
                }
            },
            readIOps: {
                required: true,
                serializedName: "readIOps",
                type: {
                    name: "Number"
                }
            },
            writeIOps: {
                required: true,
                serializedName: "writeIOps",
                type: {
                    name: "Number"
                }
            },
            readIOGiB: {
                required: true,
                serializedName: "readIOGiB",
                type: {
                    name: "Number"
                }
            },
            writeIOGiB: {
                required: true,
                serializedName: "writeIOGiB",
                type: {
                    name: "Number"
                }
            },
            numSucceededTasks: {
                required: true,
                serializedName: "numSucceededTasks",
                type: {
                    name: "Number"
                }
            },
            numFailedTasks: {
                required: true,
                serializedName: "numFailedTasks",
                type: {
                    name: "Number"
                }
            },
            numTaskRetries: {
                required: true,
                serializedName: "numTaskRetries",
                type: {
                    name: "Number"
                }
            },
            waitTime: {
                required: true,
                serializedName: "waitTime",
                type: {
                    name: "TimeSpan"
                }
            }
        }
    }
};
exports.CloudJobSchedule = {
    serializedName: "CloudJobSchedule",
    type: {
        name: "Composite",
        className: "CloudJobSchedule",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            eTag: {
                serializedName: "eTag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "lastModified",
                type: {
                    name: "DateTime"
                }
            },
            creationTime: {
                serializedName: "creationTime",
                type: {
                    name: "DateTime"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "active",
                        "completed",
                        "disabled",
                        "terminating",
                        "deleting"
                    ]
                }
            },
            stateTransitionTime: {
                serializedName: "stateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            previousState: {
                serializedName: "previousState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "active",
                        "completed",
                        "disabled",
                        "terminating",
                        "deleting"
                    ]
                }
            },
            previousStateTransitionTime: {
                serializedName: "previousStateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            schedule: {
                serializedName: "schedule",
                type: {
                    name: "Composite",
                    className: "Schedule"
                }
            },
            jobSpecification: {
                serializedName: "jobSpecification",
                type: {
                    name: "Composite",
                    className: "JobSpecification"
                }
            },
            executionInfo: {
                serializedName: "executionInfo",
                type: {
                    name: "Composite",
                    className: "JobScheduleExecutionInformation"
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            },
            stats: {
                serializedName: "stats",
                type: {
                    name: "Composite",
                    className: "JobScheduleStatistics"
                }
            }
        }
    }
};
exports.JobScheduleAddParameter = {
    serializedName: "JobScheduleAddParameter",
    type: {
        name: "Composite",
        className: "JobScheduleAddParameter",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            schedule: {
                required: true,
                serializedName: "schedule",
                type: {
                    name: "Composite",
                    className: "Schedule"
                }
            },
            jobSpecification: {
                required: true,
                serializedName: "jobSpecification",
                defaultValue: {},
                type: {
                    name: "Composite",
                    className: "JobSpecification"
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            }
        }
    }
};
exports.JobSchedulingError = {
    serializedName: "JobSchedulingError",
    type: {
        name: "Composite",
        className: "JobSchedulingError",
        modelProperties: {
            category: {
                required: true,
                serializedName: "category",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "usererror",
                        "servererror"
                    ]
                }
            },
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "NameValuePairElementType",
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            }
        }
    }
};
exports.JobExecutionInformation = {
    serializedName: "JobExecutionInformation",
    type: {
        name: "Composite",
        className: "JobExecutionInformation",
        modelProperties: {
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            poolId: {
                serializedName: "poolId",
                type: {
                    name: "String"
                }
            },
            schedulingError: {
                serializedName: "schedulingError",
                type: {
                    name: "Composite",
                    className: "JobSchedulingError"
                }
            },
            terminateReason: {
                serializedName: "terminateReason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CloudJob = {
    serializedName: "CloudJob",
    type: {
        name: "Composite",
        className: "CloudJob",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            usesTaskDependencies: {
                serializedName: "usesTaskDependencies",
                type: {
                    name: "Boolean"
                }
            },
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            eTag: {
                serializedName: "eTag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "lastModified",
                type: {
                    name: "DateTime"
                }
            },
            creationTime: {
                serializedName: "creationTime",
                type: {
                    name: "DateTime"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "active",
                        "disabling",
                        "disabled",
                        "enabling",
                        "terminating",
                        "completed",
                        "deleting"
                    ]
                }
            },
            stateTransitionTime: {
                serializedName: "stateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            previousState: {
                serializedName: "previousState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "active",
                        "disabling",
                        "disabled",
                        "enabling",
                        "terminating",
                        "completed",
                        "deleting"
                    ]
                }
            },
            previousStateTransitionTime: {
                serializedName: "previousStateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            priority: {
                serializedName: "priority",
                type: {
                    name: "Number"
                }
            },
            constraints: {
                serializedName: "constraints",
                type: {
                    name: "Composite",
                    className: "JobConstraints"
                }
            },
            jobManagerTask: {
                serializedName: "jobManagerTask",
                type: {
                    name: "Composite",
                    className: "JobManagerTask"
                }
            },
            jobPreparationTask: {
                serializedName: "jobPreparationTask",
                type: {
                    name: "Composite",
                    className: "JobPreparationTask"
                }
            },
            jobReleaseTask: {
                serializedName: "jobReleaseTask",
                type: {
                    name: "Composite",
                    className: "JobReleaseTask"
                }
            },
            commonEnvironmentSettings: {
                serializedName: "commonEnvironmentSettings",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "EnvironmentSettingElementType",
                        type: {
                            name: "Composite",
                            className: "EnvironmentSetting"
                        }
                    }
                }
            },
            poolInfo: {
                serializedName: "poolInfo",
                type: {
                    name: "Composite",
                    className: "PoolInformation"
                }
            },
            onAllTasksComplete: {
                serializedName: "onAllTasksComplete",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "noaction",
                        "terminatejob"
                    ]
                }
            },
            onTaskFailure: {
                serializedName: "onTaskFailure",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "noaction",
                        "performexitoptionsjobaction"
                    ]
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            },
            executionInfo: {
                serializedName: "executionInfo",
                type: {
                    name: "Composite",
                    className: "JobExecutionInformation"
                }
            },
            stats: {
                serializedName: "stats",
                type: {
                    name: "Composite",
                    className: "JobStatistics"
                }
            }
        }
    }
};
exports.JobAddParameter = {
    serializedName: "JobAddParameter",
    type: {
        name: "Composite",
        className: "JobAddParameter",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            priority: {
                serializedName: "priority",
                type: {
                    name: "Number"
                }
            },
            constraints: {
                serializedName: "constraints",
                type: {
                    name: "Composite",
                    className: "JobConstraints"
                }
            },
            jobManagerTask: {
                serializedName: "jobManagerTask",
                type: {
                    name: "Composite",
                    className: "JobManagerTask"
                }
            },
            jobPreparationTask: {
                serializedName: "jobPreparationTask",
                type: {
                    name: "Composite",
                    className: "JobPreparationTask"
                }
            },
            jobReleaseTask: {
                serializedName: "jobReleaseTask",
                type: {
                    name: "Composite",
                    className: "JobReleaseTask"
                }
            },
            commonEnvironmentSettings: {
                serializedName: "commonEnvironmentSettings",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "EnvironmentSettingElementType",
                        type: {
                            name: "Composite",
                            className: "EnvironmentSetting"
                        }
                    }
                }
            },
            poolInfo: {
                required: true,
                serializedName: "poolInfo",
                defaultValue: {},
                type: {
                    name: "Composite",
                    className: "PoolInformation"
                }
            },
            onAllTasksComplete: {
                serializedName: "onAllTasksComplete",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "noaction",
                        "terminatejob"
                    ]
                }
            },
            onTaskFailure: {
                serializedName: "onTaskFailure",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "noaction",
                        "performexitoptionsjobaction"
                    ]
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            },
            usesTaskDependencies: {
                serializedName: "usesTaskDependencies",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.TaskContainerExecutionInformation = {
    serializedName: "TaskContainerExecutionInformation",
    type: {
        name: "Composite",
        className: "TaskContainerExecutionInformation",
        modelProperties: {
            containerId: {
                serializedName: "containerId",
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TaskFailureInformation = {
    serializedName: "TaskFailureInformation",
    type: {
        name: "Composite",
        className: "TaskFailureInformation",
        modelProperties: {
            category: {
                required: true,
                serializedName: "category",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "usererror",
                        "servererror"
                    ]
                }
            },
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "NameValuePairElementType",
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            }
        }
    }
};
exports.JobPreparationTaskExecutionInformation = {
    serializedName: "JobPreparationTaskExecutionInformation",
    type: {
        name: "Composite",
        className: "JobPreparationTaskExecutionInformation",
        modelProperties: {
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            state: {
                required: true,
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "running",
                        "completed"
                    ]
                }
            },
            taskRootDirectory: {
                serializedName: "taskRootDirectory",
                type: {
                    name: "String"
                }
            },
            taskRootDirectoryUrl: {
                serializedName: "taskRootDirectoryUrl",
                type: {
                    name: "String"
                }
            },
            exitCode: {
                serializedName: "exitCode",
                type: {
                    name: "Number"
                }
            },
            containerInfo: {
                serializedName: "containerInfo",
                type: {
                    name: "Composite",
                    className: "TaskContainerExecutionInformation"
                }
            },
            failureInfo: {
                serializedName: "failureInfo",
                type: {
                    name: "Composite",
                    className: "TaskFailureInformation"
                }
            },
            retryCount: {
                required: true,
                serializedName: "retryCount",
                type: {
                    name: "Number"
                }
            },
            lastRetryTime: {
                serializedName: "lastRetryTime",
                type: {
                    name: "DateTime"
                }
            },
            result: {
                serializedName: "result",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "success",
                        "failure"
                    ]
                }
            }
        }
    }
};
exports.JobReleaseTaskExecutionInformation = {
    serializedName: "JobReleaseTaskExecutionInformation",
    type: {
        name: "Composite",
        className: "JobReleaseTaskExecutionInformation",
        modelProperties: {
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            state: {
                required: true,
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "running",
                        "completed"
                    ]
                }
            },
            taskRootDirectory: {
                serializedName: "taskRootDirectory",
                type: {
                    name: "String"
                }
            },
            taskRootDirectoryUrl: {
                serializedName: "taskRootDirectoryUrl",
                type: {
                    name: "String"
                }
            },
            exitCode: {
                serializedName: "exitCode",
                type: {
                    name: "Number"
                }
            },
            containerInfo: {
                serializedName: "containerInfo",
                type: {
                    name: "Composite",
                    className: "TaskContainerExecutionInformation"
                }
            },
            failureInfo: {
                serializedName: "failureInfo",
                type: {
                    name: "Composite",
                    className: "TaskFailureInformation"
                }
            },
            result: {
                serializedName: "result",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "success",
                        "failure"
                    ]
                }
            }
        }
    }
};
exports.JobPreparationAndReleaseTaskExecutionInformation = {
    serializedName: "JobPreparationAndReleaseTaskExecutionInformation",
    type: {
        name: "Composite",
        className: "JobPreparationAndReleaseTaskExecutionInformation",
        modelProperties: {
            poolId: {
                serializedName: "poolId",
                type: {
                    name: "String"
                }
            },
            nodeId: {
                serializedName: "nodeId",
                type: {
                    name: "String"
                }
            },
            nodeUrl: {
                serializedName: "nodeUrl",
                type: {
                    name: "String"
                }
            },
            jobPreparationTaskExecutionInfo: {
                serializedName: "jobPreparationTaskExecutionInfo",
                type: {
                    name: "Composite",
                    className: "JobPreparationTaskExecutionInformation"
                }
            },
            jobReleaseTaskExecutionInfo: {
                serializedName: "jobReleaseTaskExecutionInfo",
                type: {
                    name: "Composite",
                    className: "JobReleaseTaskExecutionInformation"
                }
            }
        }
    }
};
exports.TaskCounts = {
    serializedName: "TaskCounts",
    type: {
        name: "Composite",
        className: "TaskCounts",
        modelProperties: {
            active: {
                required: true,
                serializedName: "active",
                type: {
                    name: "Number"
                }
            },
            running: {
                required: true,
                serializedName: "running",
                type: {
                    name: "Number"
                }
            },
            completed: {
                required: true,
                serializedName: "completed",
                type: {
                    name: "Number"
                }
            },
            succeeded: {
                required: true,
                serializedName: "succeeded",
                type: {
                    name: "Number"
                }
            },
            failed: {
                required: true,
                serializedName: "failed",
                type: {
                    name: "Number"
                }
            },
            validationStatus: {
                required: true,
                serializedName: "validationStatus",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "validated",
                        "unvalidated"
                    ]
                }
            }
        }
    }
};
exports.AutoScaleRunError = {
    serializedName: "AutoScaleRunError",
    type: {
        name: "Composite",
        className: "AutoScaleRunError",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            values: {
                serializedName: "values",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "NameValuePairElementType",
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            }
        }
    }
};
exports.AutoScaleRun = {
    serializedName: "AutoScaleRun",
    type: {
        name: "Composite",
        className: "AutoScaleRun",
        modelProperties: {
            timestamp: {
                required: true,
                serializedName: "timestamp",
                type: {
                    name: "DateTime"
                }
            },
            results: {
                serializedName: "results",
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "AutoScaleRunError"
                }
            }
        }
    }
};
exports.ResizeError = {
    serializedName: "ResizeError",
    type: {
        name: "Composite",
        className: "ResizeError",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            values: {
                serializedName: "values",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "NameValuePairElementType",
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            }
        }
    }
};
exports.CloudPool = {
    serializedName: "CloudPool",
    type: {
        name: "Composite",
        className: "CloudPool",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            eTag: {
                serializedName: "eTag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "lastModified",
                type: {
                    name: "DateTime"
                }
            },
            creationTime: {
                serializedName: "creationTime",
                type: {
                    name: "DateTime"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "active",
                        "deleting",
                        "upgrading"
                    ]
                }
            },
            stateTransitionTime: {
                serializedName: "stateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            allocationState: {
                serializedName: "allocationState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "steady",
                        "resizing",
                        "stopping"
                    ]
                }
            },
            allocationStateTransitionTime: {
                serializedName: "allocationStateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            vmSize: {
                serializedName: "vmSize",
                type: {
                    name: "String"
                }
            },
            cloudServiceConfiguration: {
                serializedName: "cloudServiceConfiguration",
                type: {
                    name: "Composite",
                    className: "CloudServiceConfiguration"
                }
            },
            virtualMachineConfiguration: {
                serializedName: "virtualMachineConfiguration",
                type: {
                    name: "Composite",
                    className: "VirtualMachineConfiguration"
                }
            },
            resizeTimeout: {
                serializedName: "resizeTimeout",
                type: {
                    name: "TimeSpan"
                }
            },
            resizeErrors: {
                serializedName: "resizeErrors",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ResizeErrorElementType",
                        type: {
                            name: "Composite",
                            className: "ResizeError"
                        }
                    }
                }
            },
            currentDedicatedNodes: {
                serializedName: "currentDedicatedNodes",
                type: {
                    name: "Number"
                }
            },
            currentLowPriorityNodes: {
                serializedName: "currentLowPriorityNodes",
                type: {
                    name: "Number"
                }
            },
            targetDedicatedNodes: {
                serializedName: "targetDedicatedNodes",
                type: {
                    name: "Number"
                }
            },
            targetLowPriorityNodes: {
                serializedName: "targetLowPriorityNodes",
                type: {
                    name: "Number"
                }
            },
            enableAutoScale: {
                serializedName: "enableAutoScale",
                type: {
                    name: "Boolean"
                }
            },
            autoScaleFormula: {
                serializedName: "autoScaleFormula",
                type: {
                    name: "String"
                }
            },
            autoScaleEvaluationInterval: {
                serializedName: "autoScaleEvaluationInterval",
                type: {
                    name: "TimeSpan"
                }
            },
            autoScaleRun: {
                serializedName: "autoScaleRun",
                type: {
                    name: "Composite",
                    className: "AutoScaleRun"
                }
            },
            enableInterNodeCommunication: {
                serializedName: "enableInterNodeCommunication",
                type: {
                    name: "Boolean"
                }
            },
            networkConfiguration: {
                serializedName: "networkConfiguration",
                type: {
                    name: "Composite",
                    className: "NetworkConfiguration"
                }
            },
            startTask: {
                serializedName: "startTask",
                type: {
                    name: "Composite",
                    className: "StartTask"
                }
            },
            certificateReferences: {
                serializedName: "certificateReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CertificateReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "CertificateReference"
                        }
                    }
                }
            },
            applicationPackageReferences: {
                serializedName: "applicationPackageReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ApplicationPackageReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "ApplicationPackageReference"
                        }
                    }
                }
            },
            applicationLicenses: {
                serializedName: "applicationLicenses",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "stringElementType",
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            maxTasksPerNode: {
                serializedName: "maxTasksPerNode",
                type: {
                    name: "Number"
                }
            },
            taskSchedulingPolicy: {
                serializedName: "taskSchedulingPolicy",
                type: {
                    name: "Composite",
                    className: "TaskSchedulingPolicy"
                }
            },
            userAccounts: {
                serializedName: "userAccounts",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "UserAccountElementType",
                        type: {
                            name: "Composite",
                            className: "UserAccount"
                        }
                    }
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            },
            stats: {
                serializedName: "stats",
                type: {
                    name: "Composite",
                    className: "PoolStatistics"
                }
            }
        }
    }
};
exports.PoolAddParameter = {
    serializedName: "PoolAddParameter",
    type: {
        name: "Composite",
        className: "PoolAddParameter",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            vmSize: {
                required: true,
                serializedName: "vmSize",
                type: {
                    name: "String"
                }
            },
            cloudServiceConfiguration: {
                serializedName: "cloudServiceConfiguration",
                type: {
                    name: "Composite",
                    className: "CloudServiceConfiguration"
                }
            },
            virtualMachineConfiguration: {
                serializedName: "virtualMachineConfiguration",
                type: {
                    name: "Composite",
                    className: "VirtualMachineConfiguration"
                }
            },
            resizeTimeout: {
                serializedName: "resizeTimeout",
                type: {
                    name: "TimeSpan"
                }
            },
            targetDedicatedNodes: {
                serializedName: "targetDedicatedNodes",
                type: {
                    name: "Number"
                }
            },
            targetLowPriorityNodes: {
                serializedName: "targetLowPriorityNodes",
                type: {
                    name: "Number"
                }
            },
            enableAutoScale: {
                serializedName: "enableAutoScale",
                type: {
                    name: "Boolean"
                }
            },
            autoScaleFormula: {
                serializedName: "autoScaleFormula",
                type: {
                    name: "String"
                }
            },
            autoScaleEvaluationInterval: {
                serializedName: "autoScaleEvaluationInterval",
                type: {
                    name: "TimeSpan"
                }
            },
            enableInterNodeCommunication: {
                serializedName: "enableInterNodeCommunication",
                type: {
                    name: "Boolean"
                }
            },
            networkConfiguration: {
                serializedName: "networkConfiguration",
                type: {
                    name: "Composite",
                    className: "NetworkConfiguration"
                }
            },
            startTask: {
                serializedName: "startTask",
                type: {
                    name: "Composite",
                    className: "StartTask"
                }
            },
            certificateReferences: {
                serializedName: "certificateReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CertificateReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "CertificateReference"
                        }
                    }
                }
            },
            applicationPackageReferences: {
                serializedName: "applicationPackageReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ApplicationPackageReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "ApplicationPackageReference"
                        }
                    }
                }
            },
            applicationLicenses: {
                serializedName: "applicationLicenses",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "stringElementType",
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            maxTasksPerNode: {
                serializedName: "maxTasksPerNode",
                type: {
                    name: "Number"
                }
            },
            taskSchedulingPolicy: {
                serializedName: "taskSchedulingPolicy",
                type: {
                    name: "Composite",
                    className: "TaskSchedulingPolicy"
                }
            },
            userAccounts: {
                serializedName: "userAccounts",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "UserAccountElementType",
                        type: {
                            name: "Composite",
                            className: "UserAccount"
                        }
                    }
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            }
        }
    }
};
exports.AffinityInformation = {
    serializedName: "AffinityInformation",
    type: {
        name: "Composite",
        className: "AffinityInformation",
        modelProperties: {
            affinityId: {
                required: true,
                serializedName: "affinityId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TaskExecutionInformation = {
    serializedName: "TaskExecutionInformation",
    type: {
        name: "Composite",
        className: "TaskExecutionInformation",
        modelProperties: {
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            exitCode: {
                serializedName: "exitCode",
                type: {
                    name: "Number"
                }
            },
            containerInfo: {
                serializedName: "containerInfo",
                type: {
                    name: "Composite",
                    className: "TaskContainerExecutionInformation"
                }
            },
            failureInfo: {
                serializedName: "failureInfo",
                type: {
                    name: "Composite",
                    className: "TaskFailureInformation"
                }
            },
            retryCount: {
                required: true,
                serializedName: "retryCount",
                type: {
                    name: "Number"
                }
            },
            lastRetryTime: {
                serializedName: "lastRetryTime",
                type: {
                    name: "DateTime"
                }
            },
            requeueCount: {
                required: true,
                serializedName: "requeueCount",
                type: {
                    name: "Number"
                }
            },
            lastRequeueTime: {
                serializedName: "lastRequeueTime",
                type: {
                    name: "DateTime"
                }
            },
            result: {
                serializedName: "result",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "success",
                        "failure"
                    ]
                }
            }
        }
    }
};
exports.ComputeNodeInformation = {
    serializedName: "ComputeNodeInformation",
    type: {
        name: "Composite",
        className: "ComputeNodeInformation",
        modelProperties: {
            affinityId: {
                serializedName: "affinityId",
                type: {
                    name: "String"
                }
            },
            nodeUrl: {
                serializedName: "nodeUrl",
                type: {
                    name: "String"
                }
            },
            poolId: {
                serializedName: "poolId",
                type: {
                    name: "String"
                }
            },
            nodeId: {
                serializedName: "nodeId",
                type: {
                    name: "String"
                }
            },
            taskRootDirectory: {
                serializedName: "taskRootDirectory",
                type: {
                    name: "String"
                }
            },
            taskRootDirectoryUrl: {
                serializedName: "taskRootDirectoryUrl",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.MultiInstanceSettings = {
    serializedName: "MultiInstanceSettings",
    type: {
        name: "Composite",
        className: "MultiInstanceSettings",
        modelProperties: {
            numberOfInstances: {
                serializedName: "numberOfInstances",
                type: {
                    name: "Number"
                }
            },
            coordinationCommandLine: {
                required: true,
                serializedName: "coordinationCommandLine",
                type: {
                    name: "String"
                }
            },
            commonResourceFiles: {
                serializedName: "commonResourceFiles",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ResourceFileElementType",
                        type: {
                            name: "Composite",
                            className: "ResourceFile"
                        }
                    }
                }
            }
        }
    }
};
exports.TaskStatistics = {
    serializedName: "TaskStatistics",
    type: {
        name: "Composite",
        className: "TaskStatistics",
        modelProperties: {
            url: {
                required: true,
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            lastUpdateTime: {
                required: true,
                serializedName: "lastUpdateTime",
                type: {
                    name: "DateTime"
                }
            },
            userCPUTime: {
                required: true,
                serializedName: "userCPUTime",
                type: {
                    name: "TimeSpan"
                }
            },
            kernelCPUTime: {
                required: true,
                serializedName: "kernelCPUTime",
                type: {
                    name: "TimeSpan"
                }
            },
            wallClockTime: {
                required: true,
                serializedName: "wallClockTime",
                type: {
                    name: "TimeSpan"
                }
            },
            readIOps: {
                required: true,
                serializedName: "readIOps",
                type: {
                    name: "Number"
                }
            },
            writeIOps: {
                required: true,
                serializedName: "writeIOps",
                type: {
                    name: "Number"
                }
            },
            readIOGiB: {
                required: true,
                serializedName: "readIOGiB",
                type: {
                    name: "Number"
                }
            },
            writeIOGiB: {
                required: true,
                serializedName: "writeIOGiB",
                type: {
                    name: "Number"
                }
            },
            waitTime: {
                required: true,
                serializedName: "waitTime",
                type: {
                    name: "TimeSpan"
                }
            }
        }
    }
};
exports.TaskIdRange = {
    serializedName: "TaskIdRange",
    type: {
        name: "Composite",
        className: "TaskIdRange",
        modelProperties: {
            start: {
                required: true,
                serializedName: "start",
                type: {
                    name: "Number"
                }
            },
            end: {
                required: true,
                serializedName: "end",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.TaskDependencies = {
    serializedName: "TaskDependencies",
    type: {
        name: "Composite",
        className: "TaskDependencies",
        modelProperties: {
            taskIds: {
                serializedName: "taskIds",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "stringElementType",
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            taskIdRanges: {
                serializedName: "taskIdRanges",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "TaskIdRangeElementType",
                        type: {
                            name: "Composite",
                            className: "TaskIdRange"
                        }
                    }
                }
            }
        }
    }
};
exports.CloudTask = {
    serializedName: "CloudTask",
    type: {
        name: "Composite",
        className: "CloudTask",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            eTag: {
                serializedName: "eTag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "lastModified",
                type: {
                    name: "DateTime"
                }
            },
            creationTime: {
                serializedName: "creationTime",
                type: {
                    name: "DateTime"
                }
            },
            exitConditions: {
                serializedName: "exitConditions",
                type: {
                    name: "Composite",
                    className: "ExitConditions"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "active",
                        "preparing",
                        "running",
                        "completed"
                    ]
                }
            },
            stateTransitionTime: {
                serializedName: "stateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            previousState: {
                serializedName: "previousState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "active",
                        "preparing",
                        "running",
                        "completed"
                    ]
                }
            },
            previousStateTransitionTime: {
                serializedName: "previousStateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            commandLine: {
                serializedName: "commandLine",
                type: {
                    name: "String"
                }
            },
            containerSettings: {
                serializedName: "containerSettings",
                type: {
                    name: "Composite",
                    className: "TaskContainerSettings"
                }
            },
            resourceFiles: {
                serializedName: "resourceFiles",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ResourceFileElementType",
                        type: {
                            name: "Composite",
                            className: "ResourceFile"
                        }
                    }
                }
            },
            outputFiles: {
                serializedName: "outputFiles",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "OutputFileElementType",
                        type: {
                            name: "Composite",
                            className: "OutputFile"
                        }
                    }
                }
            },
            environmentSettings: {
                serializedName: "environmentSettings",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "EnvironmentSettingElementType",
                        type: {
                            name: "Composite",
                            className: "EnvironmentSetting"
                        }
                    }
                }
            },
            affinityInfo: {
                serializedName: "affinityInfo",
                type: {
                    name: "Composite",
                    className: "AffinityInformation"
                }
            },
            constraints: {
                serializedName: "constraints",
                type: {
                    name: "Composite",
                    className: "TaskConstraints"
                }
            },
            userIdentity: {
                serializedName: "userIdentity",
                type: {
                    name: "Composite",
                    className: "UserIdentity"
                }
            },
            executionInfo: {
                serializedName: "executionInfo",
                type: {
                    name: "Composite",
                    className: "TaskExecutionInformation"
                }
            },
            nodeInfo: {
                serializedName: "nodeInfo",
                type: {
                    name: "Composite",
                    className: "ComputeNodeInformation"
                }
            },
            multiInstanceSettings: {
                serializedName: "multiInstanceSettings",
                type: {
                    name: "Composite",
                    className: "MultiInstanceSettings"
                }
            },
            stats: {
                serializedName: "stats",
                type: {
                    name: "Composite",
                    className: "TaskStatistics"
                }
            },
            dependsOn: {
                serializedName: "dependsOn",
                type: {
                    name: "Composite",
                    className: "TaskDependencies"
                }
            },
            applicationPackageReferences: {
                serializedName: "applicationPackageReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ApplicationPackageReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "ApplicationPackageReference"
                        }
                    }
                }
            },
            authenticationTokenSettings: {
                serializedName: "authenticationTokenSettings",
                type: {
                    name: "Composite",
                    className: "AuthenticationTokenSettings"
                }
            }
        }
    }
};
exports.TaskAddParameter = {
    serializedName: "TaskAddParameter",
    type: {
        name: "Composite",
        className: "TaskAddParameter",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            commandLine: {
                required: true,
                serializedName: "commandLine",
                type: {
                    name: "String"
                }
            },
            containerSettings: {
                serializedName: "containerSettings",
                type: {
                    name: "Composite",
                    className: "TaskContainerSettings"
                }
            },
            exitConditions: {
                serializedName: "exitConditions",
                type: {
                    name: "Composite",
                    className: "ExitConditions"
                }
            },
            resourceFiles: {
                serializedName: "resourceFiles",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ResourceFileElementType",
                        type: {
                            name: "Composite",
                            className: "ResourceFile"
                        }
                    }
                }
            },
            outputFiles: {
                serializedName: "outputFiles",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "OutputFileElementType",
                        type: {
                            name: "Composite",
                            className: "OutputFile"
                        }
                    }
                }
            },
            environmentSettings: {
                serializedName: "environmentSettings",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "EnvironmentSettingElementType",
                        type: {
                            name: "Composite",
                            className: "EnvironmentSetting"
                        }
                    }
                }
            },
            affinityInfo: {
                serializedName: "affinityInfo",
                type: {
                    name: "Composite",
                    className: "AffinityInformation"
                }
            },
            constraints: {
                serializedName: "constraints",
                type: {
                    name: "Composite",
                    className: "TaskConstraints"
                }
            },
            userIdentity: {
                serializedName: "userIdentity",
                type: {
                    name: "Composite",
                    className: "UserIdentity"
                }
            },
            multiInstanceSettings: {
                serializedName: "multiInstanceSettings",
                type: {
                    name: "Composite",
                    className: "MultiInstanceSettings"
                }
            },
            dependsOn: {
                serializedName: "dependsOn",
                type: {
                    name: "Composite",
                    className: "TaskDependencies"
                }
            },
            applicationPackageReferences: {
                serializedName: "applicationPackageReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ApplicationPackageReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "ApplicationPackageReference"
                        }
                    }
                }
            },
            authenticationTokenSettings: {
                serializedName: "authenticationTokenSettings",
                type: {
                    name: "Composite",
                    className: "AuthenticationTokenSettings"
                }
            }
        }
    }
};
exports.TaskAddCollectionParameter = {
    serializedName: "TaskAddCollectionParameter",
    type: {
        name: "Composite",
        className: "TaskAddCollectionParameter",
        modelProperties: {
            value: {
                required: true,
                serializedName: "value",
                constraints: {
                    MaxItems: 100
                },
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "TaskAddParameterElementType",
                        type: {
                            name: "Composite",
                            className: "TaskAddParameter"
                        }
                    }
                }
            }
        }
    }
};
exports.ErrorMessage = {
    serializedName: "ErrorMessage",
    type: {
        name: "Composite",
        className: "ErrorMessage",
        modelProperties: {
            lang: {
                serializedName: "lang",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.BatchErrorDetail = {
    serializedName: "BatchErrorDetail",
    type: {
        name: "Composite",
        className: "BatchErrorDetail",
        modelProperties: {
            key: {
                serializedName: "key",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.BatchError = {
    serializedName: "BatchError",
    type: {
        name: "Composite",
        className: "BatchError",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "Composite",
                    className: "ErrorMessage"
                }
            },
            values: {
                serializedName: "values",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "BatchErrorDetailElementType",
                        type: {
                            name: "Composite",
                            className: "BatchErrorDetail"
                        }
                    }
                }
            }
        }
    }
};
exports.TaskAddResult = {
    serializedName: "TaskAddResult",
    type: {
        name: "Composite",
        className: "TaskAddResult",
        modelProperties: {
            status: {
                required: true,
                serializedName: "status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "success",
                        "clienterror",
                        "servererror"
                    ]
                }
            },
            taskId: {
                required: true,
                serializedName: "taskId",
                type: {
                    name: "String"
                }
            },
            eTag: {
                serializedName: "eTag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "lastModified",
                type: {
                    name: "DateTime"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "BatchError"
                }
            }
        }
    }
};
exports.TaskAddCollectionResult = {
    serializedName: "TaskAddCollectionResult",
    type: {
        name: "Composite",
        className: "TaskAddCollectionResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "TaskAddResultElementType",
                        type: {
                            name: "Composite",
                            className: "TaskAddResult"
                        }
                    }
                }
            }
        }
    }
};
exports.SubtaskInformation = {
    serializedName: "SubtaskInformation",
    type: {
        name: "Composite",
        className: "SubtaskInformation",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "Number"
                }
            },
            nodeInfo: {
                serializedName: "nodeInfo",
                type: {
                    name: "Composite",
                    className: "ComputeNodeInformation"
                }
            },
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            exitCode: {
                serializedName: "exitCode",
                type: {
                    name: "Number"
                }
            },
            containerInfo: {
                serializedName: "containerInfo",
                type: {
                    name: "Composite",
                    className: "TaskContainerExecutionInformation"
                }
            },
            failureInfo: {
                serializedName: "failureInfo",
                type: {
                    name: "Composite",
                    className: "TaskFailureInformation"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "preparing",
                        "running",
                        "completed"
                    ]
                }
            },
            stateTransitionTime: {
                serializedName: "stateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            previousState: {
                serializedName: "previousState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "preparing",
                        "running",
                        "completed"
                    ]
                }
            },
            previousStateTransitionTime: {
                serializedName: "previousStateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            result: {
                serializedName: "result",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "success",
                        "failure"
                    ]
                }
            }
        }
    }
};
exports.CloudTaskListSubtasksResult = {
    serializedName: "CloudTaskListSubtasksResult",
    type: {
        name: "Composite",
        className: "CloudTaskListSubtasksResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "SubtaskInformationElementType",
                        type: {
                            name: "Composite",
                            className: "SubtaskInformation"
                        }
                    }
                }
            }
        }
    }
};
exports.TaskInformation = {
    serializedName: "TaskInformation",
    type: {
        name: "Composite",
        className: "TaskInformation",
        modelProperties: {
            taskUrl: {
                serializedName: "taskUrl",
                type: {
                    name: "String"
                }
            },
            jobId: {
                serializedName: "jobId",
                type: {
                    name: "String"
                }
            },
            taskId: {
                serializedName: "taskId",
                type: {
                    name: "String"
                }
            },
            subtaskId: {
                serializedName: "subtaskId",
                type: {
                    name: "Number"
                }
            },
            taskState: {
                required: true,
                serializedName: "taskState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "active",
                        "preparing",
                        "running",
                        "completed"
                    ]
                }
            },
            executionInfo: {
                serializedName: "executionInfo",
                type: {
                    name: "Composite",
                    className: "TaskExecutionInformation"
                }
            }
        }
    }
};
exports.StartTaskInformation = {
    serializedName: "StartTaskInformation",
    type: {
        name: "Composite",
        className: "StartTaskInformation",
        modelProperties: {
            state: {
                required: true,
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "running",
                        "completed"
                    ]
                }
            },
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            exitCode: {
                serializedName: "exitCode",
                type: {
                    name: "Number"
                }
            },
            containerInfo: {
                serializedName: "containerInfo",
                type: {
                    name: "Composite",
                    className: "TaskContainerExecutionInformation"
                }
            },
            failureInfo: {
                serializedName: "failureInfo",
                type: {
                    name: "Composite",
                    className: "TaskFailureInformation"
                }
            },
            retryCount: {
                required: true,
                serializedName: "retryCount",
                type: {
                    name: "Number"
                }
            },
            lastRetryTime: {
                serializedName: "lastRetryTime",
                type: {
                    name: "DateTime"
                }
            },
            result: {
                serializedName: "result",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "success",
                        "failure"
                    ]
                }
            }
        }
    }
};
exports.ComputeNodeError = {
    serializedName: "ComputeNodeError",
    type: {
        name: "Composite",
        className: "ComputeNodeError",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            errorDetails: {
                serializedName: "errorDetails",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "NameValuePairElementType",
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            }
        }
    }
};
exports.InboundEndpoint = {
    serializedName: "InboundEndpoint",
    type: {
        name: "Composite",
        className: "InboundEndpoint",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            protocol: {
                required: true,
                serializedName: "protocol",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "tcp",
                        "udp"
                    ]
                }
            },
            publicIPAddress: {
                required: true,
                serializedName: "publicIPAddress",
                type: {
                    name: "String"
                }
            },
            publicFQDN: {
                required: true,
                serializedName: "publicFQDN",
                type: {
                    name: "String"
                }
            },
            frontendPort: {
                required: true,
                serializedName: "frontendPort",
                type: {
                    name: "Number"
                }
            },
            backendPort: {
                required: true,
                serializedName: "backendPort",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.ComputeNodeEndpointConfiguration = {
    serializedName: "ComputeNodeEndpointConfiguration",
    type: {
        name: "Composite",
        className: "ComputeNodeEndpointConfiguration",
        modelProperties: {
            inboundEndpoints: {
                required: true,
                serializedName: "inboundEndpoints",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "InboundEndpointElementType",
                        type: {
                            name: "Composite",
                            className: "InboundEndpoint"
                        }
                    }
                }
            }
        }
    }
};
exports.ComputeNode = {
    serializedName: "ComputeNode",
    type: {
        name: "Composite",
        className: "ComputeNode",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "idle",
                        "rebooting",
                        "reimaging",
                        "running",
                        "unusable",
                        "creating",
                        "starting",
                        "waitingforstarttask",
                        "starttaskfailed",
                        "unknown",
                        "leavingpool",
                        "offline",
                        "preempted"
                    ]
                }
            },
            schedulingState: {
                serializedName: "schedulingState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "enabled",
                        "disabled"
                    ]
                }
            },
            stateTransitionTime: {
                serializedName: "stateTransitionTime",
                type: {
                    name: "DateTime"
                }
            },
            lastBootTime: {
                serializedName: "lastBootTime",
                type: {
                    name: "DateTime"
                }
            },
            allocationTime: {
                serializedName: "allocationTime",
                type: {
                    name: "DateTime"
                }
            },
            ipAddress: {
                serializedName: "ipAddress",
                type: {
                    name: "String"
                }
            },
            affinityId: {
                serializedName: "affinityId",
                type: {
                    name: "String"
                }
            },
            vmSize: {
                serializedName: "vmSize",
                type: {
                    name: "String"
                }
            },
            totalTasksRun: {
                serializedName: "totalTasksRun",
                type: {
                    name: "Number"
                }
            },
            runningTasksCount: {
                serializedName: "runningTasksCount",
                type: {
                    name: "Number"
                }
            },
            totalTasksSucceeded: {
                serializedName: "totalTasksSucceeded",
                type: {
                    name: "Number"
                }
            },
            recentTasks: {
                serializedName: "recentTasks",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "TaskInformationElementType",
                        type: {
                            name: "Composite",
                            className: "TaskInformation"
                        }
                    }
                }
            },
            startTask: {
                serializedName: "startTask",
                type: {
                    name: "Composite",
                    className: "StartTask"
                }
            },
            startTaskInfo: {
                serializedName: "startTaskInfo",
                type: {
                    name: "Composite",
                    className: "StartTaskInformation"
                }
            },
            certificateReferences: {
                serializedName: "certificateReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CertificateReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "CertificateReference"
                        }
                    }
                }
            },
            errors: {
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ComputeNodeErrorElementType",
                        type: {
                            name: "Composite",
                            className: "ComputeNodeError"
                        }
                    }
                }
            },
            isDedicated: {
                serializedName: "isDedicated",
                type: {
                    name: "Boolean"
                }
            },
            endpointConfiguration: {
                serializedName: "endpointConfiguration",
                type: {
                    name: "Composite",
                    className: "ComputeNodeEndpointConfiguration"
                }
            }
        }
    }
};
exports.ComputeNodeUser = {
    serializedName: "ComputeNodeUser",
    type: {
        name: "Composite",
        className: "ComputeNodeUser",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            isAdmin: {
                serializedName: "isAdmin",
                type: {
                    name: "Boolean"
                }
            },
            expiryTime: {
                serializedName: "expiryTime",
                type: {
                    name: "DateTime"
                }
            },
            password: {
                serializedName: "password",
                type: {
                    name: "String"
                }
            },
            sshPublicKey: {
                serializedName: "sshPublicKey",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ComputeNodeGetRemoteLoginSettingsResult = {
    serializedName: "ComputeNodeGetRemoteLoginSettingsResult",
    type: {
        name: "Composite",
        className: "ComputeNodeGetRemoteLoginSettingsResult",
        modelProperties: {
            remoteLoginIPAddress: {
                required: true,
                serializedName: "remoteLoginIPAddress",
                type: {
                    name: "String"
                }
            },
            remoteLoginPort: {
                required: true,
                serializedName: "remoteLoginPort",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.JobSchedulePatchParameter = {
    serializedName: "JobSchedulePatchParameter",
    type: {
        name: "Composite",
        className: "JobSchedulePatchParameter",
        modelProperties: {
            schedule: {
                serializedName: "schedule",
                type: {
                    name: "Composite",
                    className: "Schedule"
                }
            },
            jobSpecification: {
                serializedName: "jobSpecification",
                type: {
                    name: "Composite",
                    className: "JobSpecification"
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            }
        }
    }
};
exports.JobScheduleUpdateParameter = {
    serializedName: "JobScheduleUpdateParameter",
    type: {
        name: "Composite",
        className: "JobScheduleUpdateParameter",
        modelProperties: {
            schedule: {
                required: true,
                serializedName: "schedule",
                type: {
                    name: "Composite",
                    className: "Schedule"
                }
            },
            jobSpecification: {
                required: true,
                serializedName: "jobSpecification",
                defaultValue: {},
                type: {
                    name: "Composite",
                    className: "JobSpecification"
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            }
        }
    }
};
exports.JobDisableParameter = {
    serializedName: "JobDisableParameter",
    type: {
        name: "Composite",
        className: "JobDisableParameter",
        modelProperties: {
            disableTasks: {
                required: true,
                serializedName: "disableTasks",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "requeue",
                        "terminate",
                        "wait"
                    ]
                }
            }
        }
    }
};
exports.JobTerminateParameter = {
    serializedName: "JobTerminateParameter",
    type: {
        name: "Composite",
        className: "JobTerminateParameter",
        modelProperties: {
            terminateReason: {
                serializedName: "terminateReason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobPatchParameter = {
    serializedName: "JobPatchParameter",
    type: {
        name: "Composite",
        className: "JobPatchParameter",
        modelProperties: {
            priority: {
                serializedName: "priority",
                type: {
                    name: "Number"
                }
            },
            onAllTasksComplete: {
                serializedName: "onAllTasksComplete",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "noaction",
                        "terminatejob"
                    ]
                }
            },
            constraints: {
                serializedName: "constraints",
                type: {
                    name: "Composite",
                    className: "JobConstraints"
                }
            },
            poolInfo: {
                serializedName: "poolInfo",
                type: {
                    name: "Composite",
                    className: "PoolInformation"
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            }
        }
    }
};
exports.JobUpdateParameter = {
    serializedName: "JobUpdateParameter",
    type: {
        name: "Composite",
        className: "JobUpdateParameter",
        modelProperties: {
            priority: {
                serializedName: "priority",
                type: {
                    name: "Number"
                }
            },
            constraints: {
                serializedName: "constraints",
                type: {
                    name: "Composite",
                    className: "JobConstraints"
                }
            },
            poolInfo: {
                required: true,
                serializedName: "poolInfo",
                defaultValue: {},
                type: {
                    name: "Composite",
                    className: "PoolInformation"
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            },
            onAllTasksComplete: {
                serializedName: "onAllTasksComplete",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "noaction",
                        "terminatejob"
                    ]
                }
            }
        }
    }
};
exports.PoolEnableAutoScaleParameter = {
    serializedName: "PoolEnableAutoScaleParameter",
    type: {
        name: "Composite",
        className: "PoolEnableAutoScaleParameter",
        modelProperties: {
            autoScaleFormula: {
                serializedName: "autoScaleFormula",
                type: {
                    name: "String"
                }
            },
            autoScaleEvaluationInterval: {
                serializedName: "autoScaleEvaluationInterval",
                type: {
                    name: "TimeSpan"
                }
            }
        }
    }
};
exports.PoolEvaluateAutoScaleParameter = {
    serializedName: "PoolEvaluateAutoScaleParameter",
    type: {
        name: "Composite",
        className: "PoolEvaluateAutoScaleParameter",
        modelProperties: {
            autoScaleFormula: {
                required: true,
                serializedName: "autoScaleFormula",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolResizeParameter = {
    serializedName: "PoolResizeParameter",
    type: {
        name: "Composite",
        className: "PoolResizeParameter",
        modelProperties: {
            targetDedicatedNodes: {
                serializedName: "targetDedicatedNodes",
                type: {
                    name: "Number"
                }
            },
            targetLowPriorityNodes: {
                serializedName: "targetLowPriorityNodes",
                type: {
                    name: "Number"
                }
            },
            resizeTimeout: {
                serializedName: "resizeTimeout",
                type: {
                    name: "TimeSpan"
                }
            },
            nodeDeallocationOption: {
                serializedName: "nodeDeallocationOption",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "requeue",
                        "terminate",
                        "taskcompletion",
                        "retaineddata"
                    ]
                }
            }
        }
    }
};
exports.PoolUpdatePropertiesParameter = {
    serializedName: "PoolUpdatePropertiesParameter",
    type: {
        name: "Composite",
        className: "PoolUpdatePropertiesParameter",
        modelProperties: {
            startTask: {
                serializedName: "startTask",
                type: {
                    name: "Composite",
                    className: "StartTask"
                }
            },
            certificateReferences: {
                required: true,
                serializedName: "certificateReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CertificateReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "CertificateReference"
                        }
                    }
                }
            },
            applicationPackageReferences: {
                required: true,
                serializedName: "applicationPackageReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ApplicationPackageReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "ApplicationPackageReference"
                        }
                    }
                }
            },
            metadata: {
                required: true,
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            }
        }
    }
};
exports.PoolUpgradeOSParameter = {
    serializedName: "PoolUpgradeOSParameter",
    type: {
        name: "Composite",
        className: "PoolUpgradeOSParameter",
        modelProperties: {
            targetOSVersion: {
                required: true,
                serializedName: "targetOSVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolPatchParameter = {
    serializedName: "PoolPatchParameter",
    type: {
        name: "Composite",
        className: "PoolPatchParameter",
        modelProperties: {
            startTask: {
                serializedName: "startTask",
                type: {
                    name: "Composite",
                    className: "StartTask"
                }
            },
            certificateReferences: {
                serializedName: "certificateReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CertificateReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "CertificateReference"
                        }
                    }
                }
            },
            applicationPackageReferences: {
                serializedName: "applicationPackageReferences",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ApplicationPackageReferenceElementType",
                        type: {
                            name: "Composite",
                            className: "ApplicationPackageReference"
                        }
                    }
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MetadataItemElementType",
                        type: {
                            name: "Composite",
                            className: "MetadataItem"
                        }
                    }
                }
            }
        }
    }
};
exports.TaskUpdateParameter = {
    serializedName: "TaskUpdateParameter",
    type: {
        name: "Composite",
        className: "TaskUpdateParameter",
        modelProperties: {
            constraints: {
                serializedName: "constraints",
                type: {
                    name: "Composite",
                    className: "TaskConstraints"
                }
            }
        }
    }
};
exports.NodeUpdateUserParameter = {
    serializedName: "NodeUpdateUserParameter",
    type: {
        name: "Composite",
        className: "NodeUpdateUserParameter",
        modelProperties: {
            password: {
                serializedName: "password",
                type: {
                    name: "String"
                }
            },
            expiryTime: {
                serializedName: "expiryTime",
                type: {
                    name: "DateTime"
                }
            },
            sshPublicKey: {
                serializedName: "sshPublicKey",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.NodeRebootParameter = {
    serializedName: "NodeRebootParameter",
    type: {
        name: "Composite",
        className: "NodeRebootParameter",
        modelProperties: {
            nodeRebootOption: {
                serializedName: "nodeRebootOption",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "requeue",
                        "terminate",
                        "taskcompletion",
                        "retaineddata"
                    ]
                }
            }
        }
    }
};
exports.NodeReimageParameter = {
    serializedName: "NodeReimageParameter",
    type: {
        name: "Composite",
        className: "NodeReimageParameter",
        modelProperties: {
            nodeReimageOption: {
                serializedName: "nodeReimageOption",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "requeue",
                        "terminate",
                        "taskcompletion",
                        "retaineddata"
                    ]
                }
            }
        }
    }
};
exports.NodeDisableSchedulingParameter = {
    serializedName: "NodeDisableSchedulingParameter",
    type: {
        name: "Composite",
        className: "NodeDisableSchedulingParameter",
        modelProperties: {
            nodeDisableSchedulingOption: {
                serializedName: "nodeDisableSchedulingOption",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "requeue",
                        "terminate",
                        "taskcompletion"
                    ]
                }
            }
        }
    }
};
exports.NodeRemoveParameter = {
    serializedName: "NodeRemoveParameter",
    type: {
        name: "Composite",
        className: "NodeRemoveParameter",
        modelProperties: {
            nodeList: {
                required: true,
                serializedName: "nodeList",
                constraints: {
                    MaxItems: 100
                },
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "stringElementType",
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            resizeTimeout: {
                serializedName: "resizeTimeout",
                type: {
                    name: "TimeSpan"
                }
            },
            nodeDeallocationOption: {
                serializedName: "nodeDeallocationOption",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "requeue",
                        "terminate",
                        "taskcompletion",
                        "retaineddata"
                    ]
                }
            }
        }
    }
};
exports.UploadBatchServiceLogsConfiguration = {
    serializedName: "UploadBatchServiceLogsConfiguration",
    type: {
        name: "Composite",
        className: "UploadBatchServiceLogsConfiguration",
        modelProperties: {
            containerUrl: {
                required: true,
                serializedName: "containerUrl",
                type: {
                    name: "String"
                }
            },
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
exports.UploadBatchServiceLogsResult = {
    serializedName: "UploadBatchServiceLogsResult",
    type: {
        name: "Composite",
        className: "UploadBatchServiceLogsResult",
        modelProperties: {
            virtualDirectoryName: {
                required: true,
                serializedName: "virtualDirectoryName",
                type: {
                    name: "String"
                }
            },
            numberOfFilesUploaded: {
                required: true,
                serializedName: "numberOfFilesUploaded",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.NodeCounts = {
    serializedName: "NodeCounts",
    type: {
        name: "Composite",
        className: "NodeCounts",
        modelProperties: {
            creating: {
                required: true,
                serializedName: "creating",
                type: {
                    name: "Number"
                }
            },
            idle: {
                required: true,
                serializedName: "idle",
                type: {
                    name: "Number"
                }
            },
            offline: {
                required: true,
                serializedName: "offline",
                type: {
                    name: "Number"
                }
            },
            preempted: {
                required: true,
                serializedName: "preempted",
                type: {
                    name: "Number"
                }
            },
            rebooting: {
                required: true,
                serializedName: "rebooting",
                type: {
                    name: "Number"
                }
            },
            reimaging: {
                required: true,
                serializedName: "reimaging",
                type: {
                    name: "Number"
                }
            },
            running: {
                required: true,
                serializedName: "running",
                type: {
                    name: "Number"
                }
            },
            starting: {
                required: true,
                serializedName: "starting",
                type: {
                    name: "Number"
                }
            },
            startTaskFailed: {
                required: true,
                serializedName: "startTaskFailed",
                type: {
                    name: "Number"
                }
            },
            leavingPool: {
                required: true,
                serializedName: "leavingPool",
                type: {
                    name: "Number"
                }
            },
            unknown: {
                required: true,
                serializedName: "unknown",
                type: {
                    name: "Number"
                }
            },
            unusable: {
                required: true,
                serializedName: "unusable",
                type: {
                    name: "Number"
                }
            },
            waitingForStartTask: {
                required: true,
                serializedName: "waitingForStartTask",
                type: {
                    name: "Number"
                }
            },
            total: {
                required: true,
                serializedName: "total",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.PoolNodeCounts = {
    serializedName: "PoolNodeCounts",
    type: {
        name: "Composite",
        className: "PoolNodeCounts",
        modelProperties: {
            poolId: {
                required: true,
                serializedName: "poolId",
                type: {
                    name: "String"
                }
            },
            dedicated: {
                serializedName: "dedicated",
                type: {
                    name: "Composite",
                    className: "NodeCounts"
                }
            },
            lowPriority: {
                serializedName: "lowPriority",
                type: {
                    name: "Composite",
                    className: "NodeCounts"
                }
            }
        }
    }
};
exports.ApplicationListOptions = {
    type: {
        name: "Composite",
        className: "ApplicationListOptions",
        modelProperties: {
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ApplicationGetOptions = {
    type: {
        name: "Composite",
        className: "ApplicationGetOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolListUsageMetricsOptions = {
    type: {
        name: "Composite",
        className: "PoolListUsageMetricsOptions",
        modelProperties: {
            startTime: {
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                type: {
                    name: "DateTime"
                }
            },
            filter: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolGetAllLifetimeStatisticsOptions = {
    type: {
        name: "Composite",
        className: "PoolGetAllLifetimeStatisticsOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolAddOptions = {
    type: {
        name: "Composite",
        className: "PoolAddOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolListOptions = {
    type: {
        name: "Composite",
        className: "PoolListOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            select: {
                type: {
                    name: "String"
                }
            },
            expand: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolDeleteMethodOptions = {
    type: {
        name: "Composite",
        className: "PoolDeleteMethodOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolExistsOptions = {
    type: {
        name: "Composite",
        className: "PoolExistsOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolGetOptions = {
    type: {
        name: "Composite",
        className: "PoolGetOptions",
        modelProperties: {
            select: {
                type: {
                    name: "String"
                }
            },
            expand: {
                type: {
                    name: "String"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolPatchOptions = {
    type: {
        name: "Composite",
        className: "PoolPatchOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolDisableAutoScaleOptions = {
    type: {
        name: "Composite",
        className: "PoolDisableAutoScaleOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolEnableAutoScaleOptions = {
    type: {
        name: "Composite",
        className: "PoolEnableAutoScaleOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolEvaluateAutoScaleOptions = {
    type: {
        name: "Composite",
        className: "PoolEvaluateAutoScaleOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolResizeOptions = {
    type: {
        name: "Composite",
        className: "PoolResizeOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolStopResizeOptions = {
    type: {
        name: "Composite",
        className: "PoolStopResizeOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolUpdatePropertiesOptions = {
    type: {
        name: "Composite",
        className: "PoolUpdatePropertiesOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolUpgradeOSOptions = {
    type: {
        name: "Composite",
        className: "PoolUpgradeOSOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolRemoveNodesOptions = {
    type: {
        name: "Composite",
        className: "PoolRemoveNodesOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.AccountListNodeAgentSkusOptions = {
    type: {
        name: "Composite",
        className: "AccountListNodeAgentSkusOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.AccountListPoolNodeCountsOptions = {
    type: {
        name: "Composite",
        className: "AccountListPoolNodeCountsOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 10,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobGetAllLifetimeStatisticsOptions = {
    type: {
        name: "Composite",
        className: "JobGetAllLifetimeStatisticsOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobDeleteMethodOptions = {
    type: {
        name: "Composite",
        className: "JobDeleteMethodOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobGetOptions = {
    type: {
        name: "Composite",
        className: "JobGetOptions",
        modelProperties: {
            select: {
                type: {
                    name: "String"
                }
            },
            expand: {
                type: {
                    name: "String"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobPatchOptions = {
    type: {
        name: "Composite",
        className: "JobPatchOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobUpdateOptions = {
    type: {
        name: "Composite",
        className: "JobUpdateOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobDisableOptions = {
    type: {
        name: "Composite",
        className: "JobDisableOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobEnableOptions = {
    type: {
        name: "Composite",
        className: "JobEnableOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobTerminateOptions = {
    type: {
        name: "Composite",
        className: "JobTerminateOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobAddOptions = {
    type: {
        name: "Composite",
        className: "JobAddOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobListOptions = {
    type: {
        name: "Composite",
        className: "JobListOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            select: {
                type: {
                    name: "String"
                }
            },
            expand: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobListFromJobScheduleOptions = {
    type: {
        name: "Composite",
        className: "JobListFromJobScheduleOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            select: {
                type: {
                    name: "String"
                }
            },
            expand: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobListPreparationAndReleaseTaskStatusOptions = {
    type: {
        name: "Composite",
        className: "JobListPreparationAndReleaseTaskStatusOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            select: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobGetTaskCountsOptions = {
    type: {
        name: "Composite",
        className: "JobGetTaskCountsOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.CertificateAddOptions = {
    type: {
        name: "Composite",
        className: "CertificateAddOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.CertificateListOptions = {
    type: {
        name: "Composite",
        className: "CertificateListOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            select: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.CertificateCancelDeletionOptions = {
    type: {
        name: "Composite",
        className: "CertificateCancelDeletionOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.CertificateDeleteMethodOptions = {
    type: {
        name: "Composite",
        className: "CertificateDeleteMethodOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.CertificateGetOptions = {
    type: {
        name: "Composite",
        className: "CertificateGetOptions",
        modelProperties: {
            select: {
                type: {
                    name: "String"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileDeleteFromTaskOptions = {
    type: {
        name: "Composite",
        className: "FileDeleteFromTaskOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileGetFromTaskOptions = {
    type: {
        name: "Composite",
        className: "FileGetFromTaskOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ocpRange: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileGetPropertiesFromTaskOptions = {
    type: {
        name: "Composite",
        className: "FileGetPropertiesFromTaskOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileDeleteFromComputeNodeOptions = {
    type: {
        name: "Composite",
        className: "FileDeleteFromComputeNodeOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileGetFromComputeNodeOptions = {
    type: {
        name: "Composite",
        className: "FileGetFromComputeNodeOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ocpRange: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileGetPropertiesFromComputeNodeOptions = {
    type: {
        name: "Composite",
        className: "FileGetPropertiesFromComputeNodeOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileListFromTaskOptions = {
    type: {
        name: "Composite",
        className: "FileListFromTaskOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileListFromComputeNodeOptions = {
    type: {
        name: "Composite",
        className: "FileListFromComputeNodeOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleExistsOptions = {
    type: {
        name: "Composite",
        className: "JobScheduleExistsOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleDeleteMethodOptions = {
    type: {
        name: "Composite",
        className: "JobScheduleDeleteMethodOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleGetOptions = {
    type: {
        name: "Composite",
        className: "JobScheduleGetOptions",
        modelProperties: {
            select: {
                type: {
                    name: "String"
                }
            },
            expand: {
                type: {
                    name: "String"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobSchedulePatchOptions = {
    type: {
        name: "Composite",
        className: "JobSchedulePatchOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleUpdateOptions = {
    type: {
        name: "Composite",
        className: "JobScheduleUpdateOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleDisableOptions = {
    type: {
        name: "Composite",
        className: "JobScheduleDisableOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleEnableOptions = {
    type: {
        name: "Composite",
        className: "JobScheduleEnableOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleTerminateOptions = {
    type: {
        name: "Composite",
        className: "JobScheduleTerminateOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleAddOptions = {
    type: {
        name: "Composite",
        className: "JobScheduleAddOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleListOptions = {
    type: {
        name: "Composite",
        className: "JobScheduleListOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            select: {
                type: {
                    name: "String"
                }
            },
            expand: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskAddOptions = {
    type: {
        name: "Composite",
        className: "TaskAddOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskListOptions = {
    type: {
        name: "Composite",
        className: "TaskListOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            select: {
                type: {
                    name: "String"
                }
            },
            expand: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskAddCollectionOptions = {
    type: {
        name: "Composite",
        className: "TaskAddCollectionOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskDeleteMethodOptions = {
    type: {
        name: "Composite",
        className: "TaskDeleteMethodOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskGetOptions = {
    type: {
        name: "Composite",
        className: "TaskGetOptions",
        modelProperties: {
            select: {
                type: {
                    name: "String"
                }
            },
            expand: {
                type: {
                    name: "String"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskUpdateOptions = {
    type: {
        name: "Composite",
        className: "TaskUpdateOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskListSubtasksOptions = {
    type: {
        name: "Composite",
        className: "TaskListSubtasksOptions",
        modelProperties: {
            select: {
                type: {
                    name: "String"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskTerminateOptions = {
    type: {
        name: "Composite",
        className: "TaskTerminateOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskReactivateOptions = {
    type: {
        name: "Composite",
        className: "TaskReactivateOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifMatch: {
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                type: {
                    name: "String"
                }
            },
            ifModifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ifUnmodifiedSince: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeAddUserOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeAddUserOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeDeleteUserOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeDeleteUserOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeUpdateUserOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeUpdateUserOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeGetOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeGetOptions",
        modelProperties: {
            select: {
                type: {
                    name: "String"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeRebootOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeRebootOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeReimageOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeReimageOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeDisableSchedulingOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeDisableSchedulingOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeEnableSchedulingOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeEnableSchedulingOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeGetRemoteLoginSettingsOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeGetRemoteLoginSettingsOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeGetRemoteDesktopOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeGetRemoteDesktopOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeUploadBatchServiceLogsOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeUploadBatchServiceLogsOptions",
        modelProperties: {
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeListOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeListOptions",
        modelProperties: {
            filter: {
                type: {
                    name: "String"
                }
            },
            select: {
                type: {
                    name: "String"
                }
            },
            maxResults: {
                defaultValue: 1000,
                type: {
                    name: "Number"
                }
            },
            timeout: {
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ApplicationListNextOptions = {
    type: {
        name: "Composite",
        className: "ApplicationListNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolListUsageMetricsNextOptions = {
    type: {
        name: "Composite",
        className: "PoolListUsageMetricsNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolListNextOptions = {
    type: {
        name: "Composite",
        className: "PoolListNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.AccountListNodeAgentSkusNextOptions = {
    type: {
        name: "Composite",
        className: "AccountListNodeAgentSkusNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.AccountListPoolNodeCountsNextOptions = {
    type: {
        name: "Composite",
        className: "AccountListPoolNodeCountsNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobListNextOptions = {
    type: {
        name: "Composite",
        className: "JobListNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobListFromJobScheduleNextOptions = {
    type: {
        name: "Composite",
        className: "JobListFromJobScheduleNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobListPreparationAndReleaseTaskStatusNextOptions = {
    type: {
        name: "Composite",
        className: "JobListPreparationAndReleaseTaskStatusNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.CertificateListNextOptions = {
    type: {
        name: "Composite",
        className: "CertificateListNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileListFromTaskNextOptions = {
    type: {
        name: "Composite",
        className: "FileListFromTaskNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileListFromComputeNodeNextOptions = {
    type: {
        name: "Composite",
        className: "FileListFromComputeNodeNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleListNextOptions = {
    type: {
        name: "Composite",
        className: "JobScheduleListNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskListNextOptions = {
    type: {
        name: "Composite",
        className: "TaskListNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeListNextOptions = {
    type: {
        name: "Composite",
        className: "ComputeNodeListNextOptions",
        modelProperties: {
            clientRequestId: {
                type: {
                    name: "Uuid"
                }
            },
            returnClientRequestId: {
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            ocpDate: {
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ApplicationListOptionalParams = {
    serializedName: "ListOptions",
    type: {
        name: "Composite",
        className: "ApplicationListOptionalParams",
        modelProperties: {
            applicationListOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ApplicationListOptions"
                }
            }
        }
    }
};
exports.ApplicationGetOptionalParams = {
    serializedName: "GetOptions",
    type: {
        name: "Composite",
        className: "ApplicationGetOptionalParams",
        modelProperties: {
            applicationGetOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ApplicationGetOptions"
                }
            }
        }
    }
};
exports.ApplicationListNextOptionalParams = {
    serializedName: "ListNextOptions",
    type: {
        name: "Composite",
        className: "ApplicationListNextOptionalParams",
        modelProperties: {
            applicationListNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ApplicationListNextOptions"
                }
            }
        }
    }
};
exports.PoolListUsageMetricsOptionalParams = {
    serializedName: "ListUsageMetricsOptions",
    type: {
        name: "Composite",
        className: "PoolListUsageMetricsOptionalParams",
        modelProperties: {
            poolListUsageMetricsOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolListUsageMetricsOptions"
                }
            }
        }
    }
};
exports.PoolGetAllLifetimeStatisticsOptionalParams = {
    serializedName: "GetAllLifetimeStatisticsOptions",
    type: {
        name: "Composite",
        className: "PoolGetAllLifetimeStatisticsOptionalParams",
        modelProperties: {
            poolGetAllLifetimeStatisticsOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolGetAllLifetimeStatisticsOptions"
                }
            }
        }
    }
};
exports.PoolAddOptionalParams = {
    serializedName: "AddOptions",
    type: {
        name: "Composite",
        className: "PoolAddOptionalParams",
        modelProperties: {
            poolAddOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolAddOptions"
                }
            }
        }
    }
};
exports.PoolListOptionalParams = {
    serializedName: "ListOptions",
    type: {
        name: "Composite",
        className: "PoolListOptionalParams",
        modelProperties: {
            poolListOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolListOptions"
                }
            }
        }
    }
};
exports.PoolDeleteMethodOptionalParams = {
    serializedName: "DeleteMethodOptions",
    type: {
        name: "Composite",
        className: "PoolDeleteMethodOptionalParams",
        modelProperties: {
            poolDeleteMethodOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolDeleteMethodOptions"
                }
            }
        }
    }
};
exports.PoolExistsOptionalParams = {
    serializedName: "ExistsOptions",
    type: {
        name: "Composite",
        className: "PoolExistsOptionalParams",
        modelProperties: {
            poolExistsOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolExistsOptions"
                }
            }
        }
    }
};
exports.PoolGetOptionalParams = {
    serializedName: "GetOptions",
    type: {
        name: "Composite",
        className: "PoolGetOptionalParams",
        modelProperties: {
            poolGetOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolGetOptions"
                }
            }
        }
    }
};
exports.PoolPatchOptionalParams = {
    serializedName: "PatchOptions",
    type: {
        name: "Composite",
        className: "PoolPatchOptionalParams",
        modelProperties: {
            poolPatchOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolPatchOptions"
                }
            }
        }
    }
};
exports.PoolDisableAutoScaleOptionalParams = {
    serializedName: "DisableAutoScaleOptions",
    type: {
        name: "Composite",
        className: "PoolDisableAutoScaleOptionalParams",
        modelProperties: {
            poolDisableAutoScaleOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolDisableAutoScaleOptions"
                }
            }
        }
    }
};
exports.PoolEnableAutoScaleOptionalParams = {
    serializedName: "EnableAutoScaleOptions",
    type: {
        name: "Composite",
        className: "PoolEnableAutoScaleOptionalParams",
        modelProperties: {
            poolEnableAutoScaleOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolEnableAutoScaleOptions"
                }
            }
        }
    }
};
exports.PoolEvaluateAutoScaleOptionalParams = {
    serializedName: "EvaluateAutoScaleOptions",
    type: {
        name: "Composite",
        className: "PoolEvaluateAutoScaleOptionalParams",
        modelProperties: {
            poolEvaluateAutoScaleOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolEvaluateAutoScaleOptions"
                }
            }
        }
    }
};
exports.PoolResizeOptionalParams = {
    serializedName: "ResizeOptions",
    type: {
        name: "Composite",
        className: "PoolResizeOptionalParams",
        modelProperties: {
            poolResizeOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolResizeOptions"
                }
            }
        }
    }
};
exports.PoolStopResizeOptionalParams = {
    serializedName: "StopResizeOptions",
    type: {
        name: "Composite",
        className: "PoolStopResizeOptionalParams",
        modelProperties: {
            poolStopResizeOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolStopResizeOptions"
                }
            }
        }
    }
};
exports.PoolUpdatePropertiesOptionalParams = {
    serializedName: "UpdatePropertiesOptions",
    type: {
        name: "Composite",
        className: "PoolUpdatePropertiesOptionalParams",
        modelProperties: {
            poolUpdatePropertiesOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolUpdatePropertiesOptions"
                }
            }
        }
    }
};
exports.PoolUpgradeOSOptionalParams = {
    serializedName: "UpgradeOSOptions",
    type: {
        name: "Composite",
        className: "PoolUpgradeOSOptionalParams",
        modelProperties: {
            poolUpgradeOSOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolUpgradeOSOptions"
                }
            }
        }
    }
};
exports.PoolRemoveNodesOptionalParams = {
    serializedName: "RemoveNodesOptions",
    type: {
        name: "Composite",
        className: "PoolRemoveNodesOptionalParams",
        modelProperties: {
            poolRemoveNodesOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolRemoveNodesOptions"
                }
            }
        }
    }
};
exports.PoolListUsageMetricsNextOptionalParams = {
    serializedName: "ListUsageMetricsNextOptions",
    type: {
        name: "Composite",
        className: "PoolListUsageMetricsNextOptionalParams",
        modelProperties: {
            poolListUsageMetricsNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolListUsageMetricsNextOptions"
                }
            }
        }
    }
};
exports.PoolListNextOptionalParams = {
    serializedName: "ListNextOptions",
    type: {
        name: "Composite",
        className: "PoolListNextOptionalParams",
        modelProperties: {
            poolListNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "PoolListNextOptions"
                }
            }
        }
    }
};
exports.AccountListNodeAgentSkusOptionalParams = {
    serializedName: "ListNodeAgentSkusOptions",
    type: {
        name: "Composite",
        className: "AccountListNodeAgentSkusOptionalParams",
        modelProperties: {
            accountListNodeAgentSkusOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "AccountListNodeAgentSkusOptions"
                }
            }
        }
    }
};
exports.AccountListPoolNodeCountsOptionalParams = {
    serializedName: "ListPoolNodeCountsOptions",
    type: {
        name: "Composite",
        className: "AccountListPoolNodeCountsOptionalParams",
        modelProperties: {
            accountListPoolNodeCountsOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "AccountListPoolNodeCountsOptions"
                }
            }
        }
    }
};
exports.AccountListNodeAgentSkusNextOptionalParams = {
    serializedName: "ListNodeAgentSkusNextOptions",
    type: {
        name: "Composite",
        className: "AccountListNodeAgentSkusNextOptionalParams",
        modelProperties: {
            accountListNodeAgentSkusNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "AccountListNodeAgentSkusNextOptions"
                }
            }
        }
    }
};
exports.AccountListPoolNodeCountsNextOptionalParams = {
    serializedName: "ListPoolNodeCountsNextOptions",
    type: {
        name: "Composite",
        className: "AccountListPoolNodeCountsNextOptionalParams",
        modelProperties: {
            accountListPoolNodeCountsNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "AccountListPoolNodeCountsNextOptions"
                }
            }
        }
    }
};
exports.JobGetAllLifetimeStatisticsOptionalParams = {
    serializedName: "GetAllLifetimeStatisticsOptions",
    type: {
        name: "Composite",
        className: "JobGetAllLifetimeStatisticsOptionalParams",
        modelProperties: {
            jobGetAllLifetimeStatisticsOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobGetAllLifetimeStatisticsOptions"
                }
            }
        }
    }
};
exports.JobDeleteMethodOptionalParams = {
    serializedName: "DeleteMethodOptions",
    type: {
        name: "Composite",
        className: "JobDeleteMethodOptionalParams",
        modelProperties: {
            jobDeleteMethodOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobDeleteMethodOptions"
                }
            }
        }
    }
};
exports.JobGetOptionalParams = {
    serializedName: "GetOptions",
    type: {
        name: "Composite",
        className: "JobGetOptionalParams",
        modelProperties: {
            jobGetOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobGetOptions"
                }
            }
        }
    }
};
exports.JobPatchOptionalParams = {
    serializedName: "PatchOptions",
    type: {
        name: "Composite",
        className: "JobPatchOptionalParams",
        modelProperties: {
            jobPatchOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobPatchOptions"
                }
            }
        }
    }
};
exports.JobUpdateOptionalParams = {
    serializedName: "UpdateOptions",
    type: {
        name: "Composite",
        className: "JobUpdateOptionalParams",
        modelProperties: {
            jobUpdateOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobUpdateOptions"
                }
            }
        }
    }
};
exports.JobDisableOptionalParams = {
    serializedName: "DisableOptions",
    type: {
        name: "Composite",
        className: "JobDisableOptionalParams",
        modelProperties: {
            jobDisableOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobDisableOptions"
                }
            }
        }
    }
};
exports.JobEnableOptionalParams = {
    serializedName: "EnableOptions",
    type: {
        name: "Composite",
        className: "JobEnableOptionalParams",
        modelProperties: {
            jobEnableOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobEnableOptions"
                }
            }
        }
    }
};
exports.JobTerminateOptionalParams = {
    serializedName: "TerminateOptions",
    type: {
        name: "Composite",
        className: "JobTerminateOptionalParams",
        modelProperties: {
            jobTerminateParameter: {
                serializedName: "jobTerminateParameter",
                type: {
                    name: "Composite",
                    className: "JobTerminateParameter"
                }
            },
            jobTerminateOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobTerminateOptions"
                }
            }
        }
    }
};
exports.JobAddOptionalParams = {
    serializedName: "AddOptions",
    type: {
        name: "Composite",
        className: "JobAddOptionalParams",
        modelProperties: {
            jobAddOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobAddOptions"
                }
            }
        }
    }
};
exports.JobListOptionalParams = {
    serializedName: "ListOptions",
    type: {
        name: "Composite",
        className: "JobListOptionalParams",
        modelProperties: {
            jobListOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobListOptions"
                }
            }
        }
    }
};
exports.JobListFromJobScheduleOptionalParams = {
    serializedName: "ListFromJobScheduleOptions",
    type: {
        name: "Composite",
        className: "JobListFromJobScheduleOptionalParams",
        modelProperties: {
            jobListFromJobScheduleOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobListFromJobScheduleOptions"
                }
            }
        }
    }
};
exports.JobListPreparationAndReleaseTaskStatusOptionalParams = {
    serializedName: "ListPreparationAndReleaseTaskStatusOptions",
    type: {
        name: "Composite",
        className: "JobListPreparationAndReleaseTaskStatusOptionalParams",
        modelProperties: {
            jobListPreparationAndReleaseTaskStatusOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobListPreparationAndReleaseTaskStatusOptions"
                }
            }
        }
    }
};
exports.JobGetTaskCountsOptionalParams = {
    serializedName: "GetTaskCountsOptions",
    type: {
        name: "Composite",
        className: "JobGetTaskCountsOptionalParams",
        modelProperties: {
            jobGetTaskCountsOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobGetTaskCountsOptions"
                }
            }
        }
    }
};
exports.JobListNextOptionalParams = {
    serializedName: "ListNextOptions",
    type: {
        name: "Composite",
        className: "JobListNextOptionalParams",
        modelProperties: {
            jobListNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobListNextOptions"
                }
            }
        }
    }
};
exports.JobListFromJobScheduleNextOptionalParams = {
    serializedName: "ListFromJobScheduleNextOptions",
    type: {
        name: "Composite",
        className: "JobListFromJobScheduleNextOptionalParams",
        modelProperties: {
            jobListFromJobScheduleNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobListFromJobScheduleNextOptions"
                }
            }
        }
    }
};
exports.JobListPreparationAndReleaseTaskStatusNextOptionalParams = {
    serializedName: "ListPreparationAndReleaseTaskStatusNextOptions",
    type: {
        name: "Composite",
        className: "JobListPreparationAndReleaseTaskStatusNextOptionalParams",
        modelProperties: {
            jobListPreparationAndReleaseTaskStatusNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobListPreparationAndReleaseTaskStatusNextOptions"
                }
            }
        }
    }
};
exports.CertificateAddOptionalParams = {
    serializedName: "AddOptions",
    type: {
        name: "Composite",
        className: "CertificateAddOptionalParams",
        modelProperties: {
            certificateAddOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "CertificateAddOptions"
                }
            }
        }
    }
};
exports.CertificateListOptionalParams = {
    serializedName: "ListOptions",
    type: {
        name: "Composite",
        className: "CertificateListOptionalParams",
        modelProperties: {
            certificateListOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "CertificateListOptions"
                }
            }
        }
    }
};
exports.CertificateCancelDeletionOptionalParams = {
    serializedName: "CancelDeletionOptions",
    type: {
        name: "Composite",
        className: "CertificateCancelDeletionOptionalParams",
        modelProperties: {
            certificateCancelDeletionOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "CertificateCancelDeletionOptions"
                }
            }
        }
    }
};
exports.CertificateDeleteMethodOptionalParams = {
    serializedName: "DeleteMethodOptions",
    type: {
        name: "Composite",
        className: "CertificateDeleteMethodOptionalParams",
        modelProperties: {
            certificateDeleteMethodOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "CertificateDeleteMethodOptions"
                }
            }
        }
    }
};
exports.CertificateGetOptionalParams = {
    serializedName: "GetOptions",
    type: {
        name: "Composite",
        className: "CertificateGetOptionalParams",
        modelProperties: {
            certificateGetOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "CertificateGetOptions"
                }
            }
        }
    }
};
exports.CertificateListNextOptionalParams = {
    serializedName: "ListNextOptions",
    type: {
        name: "Composite",
        className: "CertificateListNextOptionalParams",
        modelProperties: {
            certificateListNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "CertificateListNextOptions"
                }
            }
        }
    }
};
exports.FileDeleteFromTaskOptionalParams = {
    serializedName: "DeleteFromTaskOptions",
    type: {
        name: "Composite",
        className: "FileDeleteFromTaskOptionalParams",
        modelProperties: {
            recursive: {
                serializedName: "recursive",
                type: {
                    name: "Boolean"
                }
            },
            fileDeleteFromTaskOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "FileDeleteFromTaskOptions"
                }
            }
        }
    }
};
exports.FileGetFromTaskOptionalParams = {
    serializedName: "GetFromTaskOptions",
    type: {
        name: "Composite",
        className: "FileGetFromTaskOptionalParams",
        modelProperties: {
            fileGetFromTaskOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "FileGetFromTaskOptions"
                }
            }
        }
    }
};
exports.FileGetPropertiesFromTaskOptionalParams = {
    serializedName: "GetPropertiesFromTaskOptions",
    type: {
        name: "Composite",
        className: "FileGetPropertiesFromTaskOptionalParams",
        modelProperties: {
            fileGetPropertiesFromTaskOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "FileGetPropertiesFromTaskOptions"
                }
            }
        }
    }
};
exports.FileDeleteFromComputeNodeOptionalParams = {
    serializedName: "DeleteFromComputeNodeOptions",
    type: {
        name: "Composite",
        className: "FileDeleteFromComputeNodeOptionalParams",
        modelProperties: {
            recursive: {
                serializedName: "recursive",
                type: {
                    name: "Boolean"
                }
            },
            fileDeleteFromComputeNodeOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "FileDeleteFromComputeNodeOptions"
                }
            }
        }
    }
};
exports.FileGetFromComputeNodeOptionalParams = {
    serializedName: "GetFromComputeNodeOptions",
    type: {
        name: "Composite",
        className: "FileGetFromComputeNodeOptionalParams",
        modelProperties: {
            fileGetFromComputeNodeOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "FileGetFromComputeNodeOptions"
                }
            }
        }
    }
};
exports.FileGetPropertiesFromComputeNodeOptionalParams = {
    serializedName: "GetPropertiesFromComputeNodeOptions",
    type: {
        name: "Composite",
        className: "FileGetPropertiesFromComputeNodeOptionalParams",
        modelProperties: {
            fileGetPropertiesFromComputeNodeOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "FileGetPropertiesFromComputeNodeOptions"
                }
            }
        }
    }
};
exports.FileListFromTaskOptionalParams = {
    serializedName: "ListFromTaskOptions",
    type: {
        name: "Composite",
        className: "FileListFromTaskOptionalParams",
        modelProperties: {
            recursive: {
                serializedName: "recursive",
                type: {
                    name: "Boolean"
                }
            },
            fileListFromTaskOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "FileListFromTaskOptions"
                }
            }
        }
    }
};
exports.FileListFromComputeNodeOptionalParams = {
    serializedName: "ListFromComputeNodeOptions",
    type: {
        name: "Composite",
        className: "FileListFromComputeNodeOptionalParams",
        modelProperties: {
            recursive: {
                serializedName: "recursive",
                type: {
                    name: "Boolean"
                }
            },
            fileListFromComputeNodeOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "FileListFromComputeNodeOptions"
                }
            }
        }
    }
};
exports.FileListFromTaskNextOptionalParams = {
    serializedName: "ListFromTaskNextOptions",
    type: {
        name: "Composite",
        className: "FileListFromTaskNextOptionalParams",
        modelProperties: {
            fileListFromTaskNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "FileListFromTaskNextOptions"
                }
            }
        }
    }
};
exports.FileListFromComputeNodeNextOptionalParams = {
    serializedName: "ListFromComputeNodeNextOptions",
    type: {
        name: "Composite",
        className: "FileListFromComputeNodeNextOptionalParams",
        modelProperties: {
            fileListFromComputeNodeNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "FileListFromComputeNodeNextOptions"
                }
            }
        }
    }
};
exports.JobScheduleExistsOptionalParams = {
    serializedName: "ExistsOptions",
    type: {
        name: "Composite",
        className: "JobScheduleExistsOptionalParams",
        modelProperties: {
            jobScheduleExistsOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobScheduleExistsOptions"
                }
            }
        }
    }
};
exports.JobScheduleDeleteMethodOptionalParams = {
    serializedName: "DeleteMethodOptions",
    type: {
        name: "Composite",
        className: "JobScheduleDeleteMethodOptionalParams",
        modelProperties: {
            jobScheduleDeleteMethodOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobScheduleDeleteMethodOptions"
                }
            }
        }
    }
};
exports.JobScheduleGetOptionalParams = {
    serializedName: "GetOptions",
    type: {
        name: "Composite",
        className: "JobScheduleGetOptionalParams",
        modelProperties: {
            jobScheduleGetOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobScheduleGetOptions"
                }
            }
        }
    }
};
exports.JobSchedulePatchOptionalParams = {
    serializedName: "PatchOptions",
    type: {
        name: "Composite",
        className: "JobSchedulePatchOptionalParams",
        modelProperties: {
            jobSchedulePatchOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobSchedulePatchOptions"
                }
            }
        }
    }
};
exports.JobScheduleUpdateOptionalParams = {
    serializedName: "UpdateOptions",
    type: {
        name: "Composite",
        className: "JobScheduleUpdateOptionalParams",
        modelProperties: {
            jobScheduleUpdateOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobScheduleUpdateOptions"
                }
            }
        }
    }
};
exports.JobScheduleDisableOptionalParams = {
    serializedName: "DisableOptions",
    type: {
        name: "Composite",
        className: "JobScheduleDisableOptionalParams",
        modelProperties: {
            jobScheduleDisableOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobScheduleDisableOptions"
                }
            }
        }
    }
};
exports.JobScheduleEnableOptionalParams = {
    serializedName: "EnableOptions",
    type: {
        name: "Composite",
        className: "JobScheduleEnableOptionalParams",
        modelProperties: {
            jobScheduleEnableOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobScheduleEnableOptions"
                }
            }
        }
    }
};
exports.JobScheduleTerminateOptionalParams = {
    serializedName: "TerminateOptions",
    type: {
        name: "Composite",
        className: "JobScheduleTerminateOptionalParams",
        modelProperties: {
            jobScheduleTerminateOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobScheduleTerminateOptions"
                }
            }
        }
    }
};
exports.JobScheduleAddOptionalParams = {
    serializedName: "AddOptions",
    type: {
        name: "Composite",
        className: "JobScheduleAddOptionalParams",
        modelProperties: {
            jobScheduleAddOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobScheduleAddOptions"
                }
            }
        }
    }
};
exports.JobScheduleListOptionalParams = {
    serializedName: "ListOptions",
    type: {
        name: "Composite",
        className: "JobScheduleListOptionalParams",
        modelProperties: {
            jobScheduleListOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobScheduleListOptions"
                }
            }
        }
    }
};
exports.JobScheduleListNextOptionalParams = {
    serializedName: "ListNextOptions",
    type: {
        name: "Composite",
        className: "JobScheduleListNextOptionalParams",
        modelProperties: {
            jobScheduleListNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "JobScheduleListNextOptions"
                }
            }
        }
    }
};
exports.TaskAddOptionalParams = {
    serializedName: "AddOptions",
    type: {
        name: "Composite",
        className: "TaskAddOptionalParams",
        modelProperties: {
            taskAddOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "TaskAddOptions"
                }
            }
        }
    }
};
exports.TaskListOptionalParams = {
    serializedName: "ListOptions",
    type: {
        name: "Composite",
        className: "TaskListOptionalParams",
        modelProperties: {
            taskListOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "TaskListOptions"
                }
            }
        }
    }
};
exports.TaskAddCollectionOptionalParams = {
    serializedName: "AddCollectionOptions",
    type: {
        name: "Composite",
        className: "TaskAddCollectionOptionalParams",
        modelProperties: {
            taskAddCollectionOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "TaskAddCollectionOptions"
                }
            }
        }
    }
};
exports.TaskDeleteMethodOptionalParams = {
    serializedName: "DeleteMethodOptions",
    type: {
        name: "Composite",
        className: "TaskDeleteMethodOptionalParams",
        modelProperties: {
            taskDeleteMethodOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "TaskDeleteMethodOptions"
                }
            }
        }
    }
};
exports.TaskGetOptionalParams = {
    serializedName: "GetOptions",
    type: {
        name: "Composite",
        className: "TaskGetOptionalParams",
        modelProperties: {
            taskGetOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "TaskGetOptions"
                }
            }
        }
    }
};
exports.TaskUpdateOptionalParams = {
    serializedName: "UpdateOptions",
    type: {
        name: "Composite",
        className: "TaskUpdateOptionalParams",
        modelProperties: {
            taskUpdateOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "TaskUpdateOptions"
                }
            }
        }
    }
};
exports.TaskListSubtasksOptionalParams = {
    serializedName: "ListSubtasksOptions",
    type: {
        name: "Composite",
        className: "TaskListSubtasksOptionalParams",
        modelProperties: {
            taskListSubtasksOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "TaskListSubtasksOptions"
                }
            }
        }
    }
};
exports.TaskTerminateOptionalParams = {
    serializedName: "TerminateOptions",
    type: {
        name: "Composite",
        className: "TaskTerminateOptionalParams",
        modelProperties: {
            taskTerminateOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "TaskTerminateOptions"
                }
            }
        }
    }
};
exports.TaskReactivateOptionalParams = {
    serializedName: "ReactivateOptions",
    type: {
        name: "Composite",
        className: "TaskReactivateOptionalParams",
        modelProperties: {
            taskReactivateOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "TaskReactivateOptions"
                }
            }
        }
    }
};
exports.TaskListNextOptionalParams = {
    serializedName: "ListNextOptions",
    type: {
        name: "Composite",
        className: "TaskListNextOptionalParams",
        modelProperties: {
            taskListNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "TaskListNextOptions"
                }
            }
        }
    }
};
exports.ComputeNodeAddUserOptionalParams = {
    serializedName: "AddUserOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeAddUserOptionalParams",
        modelProperties: {
            computeNodeAddUserOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeAddUserOptions"
                }
            }
        }
    }
};
exports.ComputeNodeDeleteUserOptionalParams = {
    serializedName: "DeleteUserOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeDeleteUserOptionalParams",
        modelProperties: {
            computeNodeDeleteUserOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeDeleteUserOptions"
                }
            }
        }
    }
};
exports.ComputeNodeUpdateUserOptionalParams = {
    serializedName: "UpdateUserOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeUpdateUserOptionalParams",
        modelProperties: {
            computeNodeUpdateUserOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeUpdateUserOptions"
                }
            }
        }
    }
};
exports.ComputeNodeGetOptionalParams = {
    serializedName: "GetOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeGetOptionalParams",
        modelProperties: {
            computeNodeGetOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeGetOptions"
                }
            }
        }
    }
};
exports.ComputeNodeRebootOptionalParams = {
    serializedName: "RebootOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeRebootOptionalParams",
        modelProperties: {
            nodeRebootParameter: {
                serializedName: "nodeRebootParameter",
                type: {
                    name: "Composite",
                    className: "NodeRebootParameter"
                }
            },
            computeNodeRebootOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeRebootOptions"
                }
            }
        }
    }
};
exports.ComputeNodeReimageOptionalParams = {
    serializedName: "ReimageOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeReimageOptionalParams",
        modelProperties: {
            nodeReimageParameter: {
                serializedName: "nodeReimageParameter",
                type: {
                    name: "Composite",
                    className: "NodeReimageParameter"
                }
            },
            computeNodeReimageOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeReimageOptions"
                }
            }
        }
    }
};
exports.ComputeNodeDisableSchedulingOptionalParams = {
    serializedName: "DisableSchedulingOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeDisableSchedulingOptionalParams",
        modelProperties: {
            nodeDisableSchedulingParameter: {
                serializedName: "nodeDisableSchedulingParameter",
                type: {
                    name: "Composite",
                    className: "NodeDisableSchedulingParameter"
                }
            },
            computeNodeDisableSchedulingOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeDisableSchedulingOptions"
                }
            }
        }
    }
};
exports.ComputeNodeEnableSchedulingOptionalParams = {
    serializedName: "EnableSchedulingOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeEnableSchedulingOptionalParams",
        modelProperties: {
            computeNodeEnableSchedulingOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeEnableSchedulingOptions"
                }
            }
        }
    }
};
exports.ComputeNodeGetRemoteLoginSettingsOptionalParams = {
    serializedName: "GetRemoteLoginSettingsOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeGetRemoteLoginSettingsOptionalParams",
        modelProperties: {
            computeNodeGetRemoteLoginSettingsOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeGetRemoteLoginSettingsOptions"
                }
            }
        }
    }
};
exports.ComputeNodeGetRemoteDesktopOptionalParams = {
    serializedName: "GetRemoteDesktopOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeGetRemoteDesktopOptionalParams",
        modelProperties: {
            computeNodeGetRemoteDesktopOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeGetRemoteDesktopOptions"
                }
            }
        }
    }
};
exports.ComputeNodeUploadBatchServiceLogsOptionalParams = {
    serializedName: "UploadBatchServiceLogsOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeUploadBatchServiceLogsOptionalParams",
        modelProperties: {
            computeNodeUploadBatchServiceLogsOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeUploadBatchServiceLogsOptions"
                }
            }
        }
    }
};
exports.ComputeNodeListOptionalParams = {
    serializedName: "ListOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeListOptionalParams",
        modelProperties: {
            computeNodeListOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeListOptions"
                }
            }
        }
    }
};
exports.ComputeNodeListNextOptionalParams = {
    serializedName: "ListNextOptions",
    type: {
        name: "Composite",
        className: "ComputeNodeListNextOptionalParams",
        modelProperties: {
            computeNodeListNextOptions: {
                serializedName: "",
                type: {
                    name: "Composite",
                    className: "ComputeNodeListNextOptions"
                }
            }
        }
    }
};
exports.ApplicationListHeaders = {
    serializedName: "application-list-headers",
    type: {
        name: "Composite",
        className: "ApplicationListHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ApplicationGetHeaders = {
    serializedName: "application-get-headers",
    type: {
        name: "Composite",
        className: "ApplicationGetHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolListUsageMetricsHeaders = {
    serializedName: "pool-listusagemetrics-headers",
    type: {
        name: "Composite",
        className: "PoolListUsageMetricsHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.AccountListNodeAgentSkusHeaders = {
    serializedName: "account-listnodeagentskus-headers",
    type: {
        name: "Composite",
        className: "AccountListNodeAgentSkusHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.AccountListPoolNodeCountsHeaders = {
    serializedName: "account-listpoolnodecounts-headers",
    type: {
        name: "Composite",
        className: "AccountListPoolNodeCountsHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
exports.PoolGetAllLifetimeStatisticsHeaders = {
    serializedName: "pool-getalllifetimestatistics-headers",
    type: {
        name: "Composite",
        className: "PoolGetAllLifetimeStatisticsHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobGetAllLifetimeStatisticsHeaders = {
    serializedName: "job-getalllifetimestatistics-headers",
    type: {
        name: "Composite",
        className: "JobGetAllLifetimeStatisticsHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.CertificateAddHeaders = {
    serializedName: "certificate-add-headers",
    type: {
        name: "Composite",
        className: "CertificateAddHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CertificateListHeaders = {
    serializedName: "certificate-list-headers",
    type: {
        name: "Composite",
        className: "CertificateListHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.CertificateCancelDeletionHeaders = {
    serializedName: "certificate-canceldeletion-headers",
    type: {
        name: "Composite",
        className: "CertificateCancelDeletionHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CertificateDeleteHeaders = {
    serializedName: "certificate-delete-headers",
    type: {
        name: "Composite",
        className: "CertificateDeleteHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.CertificateGetHeaders = {
    serializedName: "certificate-get-headers",
    type: {
        name: "Composite",
        className: "CertificateGetHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileDeleteFromTaskHeaders = {
    serializedName: "file-deletefromtask-headers",
    type: {
        name: "Composite",
        className: "FileDeleteFromTaskHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.FileGetFromTaskHeaders = {
    serializedName: "file-getfromtask-headers",
    type: {
        name: "Composite",
        className: "FileGetFromTaskHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ocpCreationTime: {
                serializedName: "ocp-creation-time",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ocpBatchFileIsdirectory: {
                serializedName: "ocp-batch-file-isdirectory",
                type: {
                    name: "Boolean"
                }
            },
            ocpBatchFileUrl: {
                serializedName: "ocp-batch-file-url",
                type: {
                    name: "String"
                }
            },
            ocpBatchFileMode: {
                serializedName: "ocp-batch-file-mode",
                type: {
                    name: "String"
                }
            },
            contentType: {
                serializedName: "content-type",
                type: {
                    name: "String"
                }
            },
            contentLength: {
                serializedName: "content-length",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.FileGetPropertiesFromTaskHeaders = {
    serializedName: "file-getpropertiesfromtask-headers",
    type: {
        name: "Composite",
        className: "FileGetPropertiesFromTaskHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ocpCreationTime: {
                serializedName: "ocp-creation-time",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ocpBatchFileIsdirectory: {
                serializedName: "ocp-batch-file-isdirectory",
                type: {
                    name: "Boolean"
                }
            },
            ocpBatchFileUrl: {
                serializedName: "ocp-batch-file-url",
                type: {
                    name: "String"
                }
            },
            ocpBatchFileMode: {
                serializedName: "ocp-batch-file-mode",
                type: {
                    name: "String"
                }
            },
            contentType: {
                serializedName: "content-type",
                type: {
                    name: "String"
                }
            },
            contentLength: {
                serializedName: "content-length",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.FileDeleteFromComputeNodeHeaders = {
    serializedName: "file-deletefromcomputenode-headers",
    type: {
        name: "Composite",
        className: "FileDeleteFromComputeNodeHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.FileGetFromComputeNodeHeaders = {
    serializedName: "file-getfromcomputenode-headers",
    type: {
        name: "Composite",
        className: "FileGetFromComputeNodeHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ocpCreationTime: {
                serializedName: "ocp-creation-time",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ocpBatchFileIsdirectory: {
                serializedName: "ocp-batch-file-isdirectory",
                type: {
                    name: "Boolean"
                }
            },
            ocpBatchFileUrl: {
                serializedName: "ocp-batch-file-url",
                type: {
                    name: "String"
                }
            },
            ocpBatchFileMode: {
                serializedName: "ocp-batch-file-mode",
                type: {
                    name: "String"
                }
            },
            contentType: {
                serializedName: "content-type",
                type: {
                    name: "String"
                }
            },
            contentLength: {
                serializedName: "content-length",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.FileGetPropertiesFromComputeNodeHeaders = {
    serializedName: "file-getpropertiesfromcomputenode-headers",
    type: {
        name: "Composite",
        className: "FileGetPropertiesFromComputeNodeHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ocpCreationTime: {
                serializedName: "ocp-creation-time",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            ocpBatchFileIsdirectory: {
                serializedName: "ocp-batch-file-isdirectory",
                type: {
                    name: "Boolean"
                }
            },
            ocpBatchFileUrl: {
                serializedName: "ocp-batch-file-url",
                type: {
                    name: "String"
                }
            },
            ocpBatchFileMode: {
                serializedName: "ocp-batch-file-mode",
                type: {
                    name: "String"
                }
            },
            contentType: {
                serializedName: "content-type",
                type: {
                    name: "String"
                }
            },
            contentLength: {
                serializedName: "content-length",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.FileListFromTaskHeaders = {
    serializedName: "file-listfromtask-headers",
    type: {
        name: "Composite",
        className: "FileListFromTaskHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.FileListFromComputeNodeHeaders = {
    serializedName: "file-listfromcomputenode-headers",
    type: {
        name: "Composite",
        className: "FileListFromComputeNodeHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleExistsHeaders = {
    serializedName: "jobschedule-exists-headers",
    type: {
        name: "Composite",
        className: "JobScheduleExistsHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobScheduleDeleteHeaders = {
    serializedName: "jobschedule-delete-headers",
    type: {
        name: "Composite",
        className: "JobScheduleDeleteHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobScheduleGetHeaders = {
    serializedName: "jobschedule-get-headers",
    type: {
        name: "Composite",
        className: "JobScheduleGetHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobSchedulePatchHeaders = {
    serializedName: "jobschedule-patch-headers",
    type: {
        name: "Composite",
        className: "JobSchedulePatchHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobScheduleUpdateHeaders = {
    serializedName: "jobschedule-update-headers",
    type: {
        name: "Composite",
        className: "JobScheduleUpdateHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobScheduleDisableHeaders = {
    serializedName: "jobschedule-disable-headers",
    type: {
        name: "Composite",
        className: "JobScheduleDisableHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobScheduleEnableHeaders = {
    serializedName: "jobschedule-enable-headers",
    type: {
        name: "Composite",
        className: "JobScheduleEnableHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobScheduleTerminateHeaders = {
    serializedName: "jobschedule-terminate-headers",
    type: {
        name: "Composite",
        className: "JobScheduleTerminateHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobScheduleAddHeaders = {
    serializedName: "jobschedule-add-headers",
    type: {
        name: "Composite",
        className: "JobScheduleAddHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobScheduleListHeaders = {
    serializedName: "jobschedule-list-headers",
    type: {
        name: "Composite",
        className: "JobScheduleListHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobDeleteHeaders = {
    serializedName: "job-delete-headers",
    type: {
        name: "Composite",
        className: "JobDeleteHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobGetHeaders = {
    serializedName: "job-get-headers",
    type: {
        name: "Composite",
        className: "JobGetHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobPatchHeaders = {
    serializedName: "job-patch-headers",
    type: {
        name: "Composite",
        className: "JobPatchHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobUpdateHeaders = {
    serializedName: "job-update-headers",
    type: {
        name: "Composite",
        className: "JobUpdateHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobDisableHeaders = {
    serializedName: "job-disable-headers",
    type: {
        name: "Composite",
        className: "JobDisableHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobEnableHeaders = {
    serializedName: "job-enable-headers",
    type: {
        name: "Composite",
        className: "JobEnableHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobTerminateHeaders = {
    serializedName: "job-terminate-headers",
    type: {
        name: "Composite",
        className: "JobTerminateHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobAddHeaders = {
    serializedName: "job-add-headers",
    type: {
        name: "Composite",
        className: "JobAddHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobListHeaders = {
    serializedName: "job-list-headers",
    type: {
        name: "Composite",
        className: "JobListHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobListFromJobScheduleHeaders = {
    serializedName: "job-listfromjobschedule-headers",
    type: {
        name: "Composite",
        className: "JobListFromJobScheduleHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobListPreparationAndReleaseTaskStatusHeaders = {
    serializedName: "job-listpreparationandreleasetaskstatus-headers",
    type: {
        name: "Composite",
        className: "JobListPreparationAndReleaseTaskStatusHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.JobGetTaskCountsHeaders = {
    serializedName: "job-gettaskcounts-headers",
    type: {
        name: "Composite",
        className: "JobGetTaskCountsHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
exports.PoolAddHeaders = {
    serializedName: "pool-add-headers",
    type: {
        name: "Composite",
        className: "PoolAddHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolListHeaders = {
    serializedName: "pool-list-headers",
    type: {
        name: "Composite",
        className: "PoolListHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolDeleteHeaders = {
    serializedName: "pool-delete-headers",
    type: {
        name: "Composite",
        className: "PoolDeleteHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolExistsHeaders = {
    serializedName: "pool-exists-headers",
    type: {
        name: "Composite",
        className: "PoolExistsHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolGetHeaders = {
    serializedName: "pool-get-headers",
    type: {
        name: "Composite",
        className: "PoolGetHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.PoolPatchHeaders = {
    serializedName: "pool-patch-headers",
    type: {
        name: "Composite",
        className: "PoolPatchHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolDisableAutoScaleHeaders = {
    serializedName: "pool-disableautoscale-headers",
    type: {
        name: "Composite",
        className: "PoolDisableAutoScaleHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolEnableAutoScaleHeaders = {
    serializedName: "pool-enableautoscale-headers",
    type: {
        name: "Composite",
        className: "PoolEnableAutoScaleHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolEvaluateAutoScaleHeaders = {
    serializedName: "pool-evaluateautoscale-headers",
    type: {
        name: "Composite",
        className: "PoolEvaluateAutoScaleHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolResizeHeaders = {
    serializedName: "pool-resize-headers",
    type: {
        name: "Composite",
        className: "PoolResizeHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolStopResizeHeaders = {
    serializedName: "pool-stopresize-headers",
    type: {
        name: "Composite",
        className: "PoolStopResizeHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolUpdatePropertiesHeaders = {
    serializedName: "pool-updateproperties-headers",
    type: {
        name: "Composite",
        className: "PoolUpdatePropertiesHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolUpgradeOSHeaders = {
    serializedName: "pool-upgradeos-headers",
    type: {
        name: "Composite",
        className: "PoolUpgradeOSHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolRemoveNodesHeaders = {
    serializedName: "pool-removenodes-headers",
    type: {
        name: "Composite",
        className: "PoolRemoveNodesHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TaskAddHeaders = {
    serializedName: "task-add-headers",
    type: {
        name: "Composite",
        className: "TaskAddHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TaskListHeaders = {
    serializedName: "task-list-headers",
    type: {
        name: "Composite",
        className: "TaskListHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskAddCollectionHeaders = {
    serializedName: "task-addcollection-headers",
    type: {
        name: "Composite",
        className: "TaskAddCollectionHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TaskDeleteHeaders = {
    serializedName: "task-delete-headers",
    type: {
        name: "Composite",
        className: "TaskDeleteHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TaskGetHeaders = {
    serializedName: "task-get-headers",
    type: {
        name: "Composite",
        className: "TaskGetHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TaskUpdateHeaders = {
    serializedName: "task-update-headers",
    type: {
        name: "Composite",
        className: "TaskUpdateHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TaskListSubtasksHeaders = {
    serializedName: "task-listsubtasks-headers",
    type: {
        name: "Composite",
        className: "TaskListSubtasksHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.TaskTerminateHeaders = {
    serializedName: "task-terminate-headers",
    type: {
        name: "Composite",
        className: "TaskTerminateHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TaskReactivateHeaders = {
    serializedName: "task-reactivate-headers",
    type: {
        name: "Composite",
        className: "TaskReactivateHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ComputeNodeAddUserHeaders = {
    serializedName: "computenode-adduser-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeAddUserHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ComputeNodeDeleteUserHeaders = {
    serializedName: "computenode-deleteuser-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeDeleteUserHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ComputeNodeUpdateUserHeaders = {
    serializedName: "computenode-updateuser-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeUpdateUserHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ComputeNodeGetHeaders = {
    serializedName: "computenode-get-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeGetHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeRebootHeaders = {
    serializedName: "computenode-reboot-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeRebootHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ComputeNodeReimageHeaders = {
    serializedName: "computenode-reimage-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeReimageHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ComputeNodeDisableSchedulingHeaders = {
    serializedName: "computenode-disablescheduling-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeDisableSchedulingHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ComputeNodeEnableSchedulingHeaders = {
    serializedName: "computenode-enablescheduling-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeEnableSchedulingHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            dataServiceId: {
                serializedName: "dataserviceid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ComputeNodeGetRemoteLoginSettingsHeaders = {
    serializedName: "computenode-getremoteloginsettings-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeGetRemoteLoginSettingsHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeGetRemoteDesktopHeaders = {
    serializedName: "computenode-getremotedesktop-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeGetRemoteDesktopHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ComputeNodeUploadBatchServiceLogsHeaders = {
    serializedName: "computenode-uploadbatchservicelogs-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeUploadBatchServiceLogsHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
exports.ComputeNodeListHeaders = {
    serializedName: "computenode-list-headers",
    type: {
        name: "Composite",
        className: "ComputeNodeListHeaders",
        modelProperties: {
            clientRequestId: {
                serializedName: "client-request-id",
                type: {
                    name: "Uuid"
                }
            },
            requestId: {
                serializedName: "request-id",
                type: {
                    name: "Uuid"
                }
            },
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            lastModified: {
                serializedName: "last-modified",
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
exports.ApplicationListResult = {
    serializedName: "ApplicationListResult",
    type: {
        name: "Composite",
        className: "ApplicationListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ApplicationSummaryElementType",
                        type: {
                            name: "Composite",
                            className: "ApplicationSummary"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolListUsageMetricsResult = {
    serializedName: "PoolListUsageMetricsResult",
    type: {
        name: "Composite",
        className: "PoolListUsageMetricsResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "PoolUsageMetricsElementType",
                        type: {
                            name: "Composite",
                            className: "PoolUsageMetrics"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CloudPoolListResult = {
    serializedName: "CloudPoolListResult",
    type: {
        name: "Composite",
        className: "CloudPoolListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CloudPoolElementType",
                        type: {
                            name: "Composite",
                            className: "CloudPool"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.AccountListNodeAgentSkusResult = {
    serializedName: "AccountListNodeAgentSkusResult",
    type: {
        name: "Composite",
        className: "AccountListNodeAgentSkusResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "NodeAgentSkuElementType",
                        type: {
                            name: "Composite",
                            className: "NodeAgentSku"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PoolNodeCountsListResult = {
    serializedName: "PoolNodeCountsListResult",
    type: {
        name: "Composite",
        className: "PoolNodeCountsListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "PoolNodeCountsElementType",
                        type: {
                            name: "Composite",
                            className: "PoolNodeCounts"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CloudJobListResult = {
    serializedName: "CloudJobListResult",
    type: {
        name: "Composite",
        className: "CloudJobListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CloudJobElementType",
                        type: {
                            name: "Composite",
                            className: "CloudJob"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CloudJobListPreparationAndReleaseTaskStatusResult = {
    serializedName: "CloudJobListPreparationAndReleaseTaskStatusResult",
    type: {
        name: "Composite",
        className: "CloudJobListPreparationAndReleaseTaskStatusResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "JobPreparationAndReleaseTaskExecutionInformationElementType",
                        type: {
                            name: "Composite",
                            className: "JobPreparationAndReleaseTaskExecutionInformation"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CertificateListResult = {
    serializedName: "CertificateListResult",
    type: {
        name: "Composite",
        className: "CertificateListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CertificateElementType",
                        type: {
                            name: "Composite",
                            className: "Certificate"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.NodeFileListResult = {
    serializedName: "NodeFileListResult",
    type: {
        name: "Composite",
        className: "NodeFileListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "NodeFileElementType",
                        type: {
                            name: "Composite",
                            className: "NodeFile"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CloudJobScheduleListResult = {
    serializedName: "CloudJobScheduleListResult",
    type: {
        name: "Composite",
        className: "CloudJobScheduleListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CloudJobScheduleElementType",
                        type: {
                            name: "Composite",
                            className: "CloudJobSchedule"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CloudTaskListResult = {
    serializedName: "CloudTaskListResult",
    type: {
        name: "Composite",
        className: "CloudTaskListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "CloudTaskElementType",
                        type: {
                            name: "Composite",
                            className: "CloudTask"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ComputeNodeListResult = {
    serializedName: "ComputeNodeListResult",
    type: {
        name: "Composite",
        className: "ComputeNodeListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ComputeNodeElementType",
                        type: {
                            name: "Composite",
                            className: "ComputeNode"
                        }
                    }
                }
            },
            odatanextLink: {
                serializedName: "odata\\.nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map