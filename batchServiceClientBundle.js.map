{"version":3,"sources":["webpack:///webpack/bootstrap ee5983d2c9d5f2acf91f","webpack:///./lib/models/mappers.ts","webpack:///external \"msRest\"","webpack:///external \"msRestAzure\"","webpack:///./lib/batchServiceClient.ts","webpack:///./lib/models/index.ts","webpack:///./lib/operations/index.ts","webpack:///./lib/operations/application.ts","webpack:///./lib/operations/pool.ts","webpack:///./lib/operations/account.ts","webpack:///./lib/operations/job.ts","webpack:///./lib/operations/certificateOperations.ts","webpack:///./lib/operations/file.ts","webpack:///./lib/operations/jobSchedule.ts","webpack:///./lib/operations/task.ts","webpack:///./lib/operations/computeNodeOperations.ts"],"names":[],"mappings":"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","file":"batchServiceClientBundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ee5983d2c9d5f2acf91f","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport {CloudErrorMapper, BaseResourceMapper } from \"ms-rest-azure-js\";\n\nexport const CloudError = CloudErrorMapper;\nexport const BaseResource = BaseResourceMapper;\n\nexport const PoolUsageMetrics = {\n  required: false,\n  serializedName: 'PoolUsageMetrics',\n  type: {\n    name: 'Composite',\n    className: 'PoolUsageMetrics',\n    modelProperties: {\n      poolId: {\n        required: true,\n        serializedName: 'poolId',\n        type: {\n          name: 'String'\n        }\n      },\n      startTime: {\n        required: true,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      endTime: {\n        required: true,\n        serializedName: 'endTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      vmSize: {\n        required: true,\n        serializedName: 'vmSize',\n        type: {\n          name: 'String'\n        }\n      },\n      totalCoreHours: {\n        required: true,\n        serializedName: 'totalCoreHours',\n        type: {\n          name: 'Number'\n        }\n      },\n      dataIngressGiB: {\n        required: true,\n        serializedName: 'dataIngressGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      dataEgressGiB: {\n        required: true,\n        serializedName: 'dataEgressGiB',\n        type: {\n          name: 'Number'\n        }\n      }\n    }\n  }\n};\n\nexport const ImageReference = {\n  required: false,\n  serializedName: 'ImageReference',\n  type: {\n    name: 'Composite',\n    className: 'ImageReference',\n    modelProperties: {\n      publisher: {\n        required: false,\n        serializedName: 'publisher',\n        type: {\n          name: 'String'\n        }\n      },\n      offer: {\n        required: false,\n        serializedName: 'offer',\n        type: {\n          name: 'String'\n        }\n      },\n      sku: {\n        required: false,\n        serializedName: 'sku',\n        type: {\n          name: 'String'\n        }\n      },\n      version: {\n        required: false,\n        serializedName: 'version',\n        type: {\n          name: 'String'\n        }\n      },\n      virtualMachineImageId: {\n        required: false,\n        serializedName: 'virtualMachineImageId',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const NodeAgentSku = {\n  required: false,\n  serializedName: 'NodeAgentSku',\n  type: {\n    name: 'Composite',\n    className: 'NodeAgentSku',\n    modelProperties: {\n      id: {\n        required: false,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      verifiedImageReferences: {\n        required: false,\n        serializedName: 'verifiedImageReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ImageReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'ImageReference'\n              }\n          }\n        }\n      },\n      osType: {\n        required: false,\n        serializedName: 'osType',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'linux', 'windows' ]\n        }\n      }\n    }\n  }\n};\n\nexport const AuthenticationTokenSettings = {\n  required: false,\n  serializedName: 'AuthenticationTokenSettings',\n  type: {\n    name: 'Composite',\n    className: 'AuthenticationTokenSettings',\n    modelProperties: {\n      access: {\n        required: false,\n        serializedName: 'access',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'AccessScopeElementType',\n              type: {\n                name: 'Enum',\n                allowedValues: [ 'job' ]\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UsageStatistics = {\n  required: false,\n  serializedName: 'UsageStatistics',\n  type: {\n    name: 'Composite',\n    className: 'UsageStatistics',\n    modelProperties: {\n      startTime: {\n        required: true,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      lastUpdateTime: {\n        required: true,\n        serializedName: 'lastUpdateTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      dedicatedCoreTime: {\n        required: true,\n        serializedName: 'dedicatedCoreTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceStatistics = {\n  required: false,\n  serializedName: 'ResourceStatistics',\n  type: {\n    name: 'Composite',\n    className: 'ResourceStatistics',\n    modelProperties: {\n      startTime: {\n        required: true,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      lastUpdateTime: {\n        required: true,\n        serializedName: 'lastUpdateTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      avgCPUPercentage: {\n        required: true,\n        serializedName: 'avgCPUPercentage',\n        type: {\n          name: 'Number'\n        }\n      },\n      avgMemoryGiB: {\n        required: true,\n        serializedName: 'avgMemoryGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      peakMemoryGiB: {\n        required: true,\n        serializedName: 'peakMemoryGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      avgDiskGiB: {\n        required: true,\n        serializedName: 'avgDiskGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      peakDiskGiB: {\n        required: true,\n        serializedName: 'peakDiskGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      diskReadIOps: {\n        required: true,\n        serializedName: 'diskReadIOps',\n        type: {\n          name: 'Number'\n        }\n      },\n      diskWriteIOps: {\n        required: true,\n        serializedName: 'diskWriteIOps',\n        type: {\n          name: 'Number'\n        }\n      },\n      diskReadGiB: {\n        required: true,\n        serializedName: 'diskReadGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      diskWriteGiB: {\n        required: true,\n        serializedName: 'diskWriteGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      networkReadGiB: {\n        required: true,\n        serializedName: 'networkReadGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      networkWriteGiB: {\n        required: true,\n        serializedName: 'networkWriteGiB',\n        type: {\n          name: 'Number'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolStatistics = {\n  required: false,\n  serializedName: 'PoolStatistics',\n  type: {\n    name: 'Composite',\n    className: 'PoolStatistics',\n    modelProperties: {\n      url: {\n        required: true,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      },\n      startTime: {\n        required: true,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      lastUpdateTime: {\n        required: true,\n        serializedName: 'lastUpdateTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      usageStats: {\n        required: false,\n        serializedName: 'usageStats',\n        type: {\n          name: 'Composite',\n          className: 'UsageStatistics'\n        }\n      },\n      resourceStats: {\n        required: false,\n        serializedName: 'resourceStats',\n        type: {\n          name: 'Composite',\n          className: 'ResourceStatistics'\n        }\n      }\n    }\n  }\n};\n\nexport const JobStatistics = {\n  required: false,\n  serializedName: 'JobStatistics',\n  type: {\n    name: 'Composite',\n    className: 'JobStatistics',\n    modelProperties: {\n      url: {\n        required: true,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      },\n      startTime: {\n        required: true,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      lastUpdateTime: {\n        required: true,\n        serializedName: 'lastUpdateTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      userCPUTime: {\n        required: true,\n        serializedName: 'userCPUTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      kernelCPUTime: {\n        required: true,\n        serializedName: 'kernelCPUTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      wallClockTime: {\n        required: true,\n        serializedName: 'wallClockTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      readIOps: {\n        required: true,\n        serializedName: 'readIOps',\n        type: {\n          name: 'Number'\n        }\n      },\n      writeIOps: {\n        required: true,\n        serializedName: 'writeIOps',\n        type: {\n          name: 'Number'\n        }\n      },\n      readIOGiB: {\n        required: true,\n        serializedName: 'readIOGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      writeIOGiB: {\n        required: true,\n        serializedName: 'writeIOGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      numSucceededTasks: {\n        required: true,\n        serializedName: 'numSucceededTasks',\n        type: {\n          name: 'Number'\n        }\n      },\n      numFailedTasks: {\n        required: true,\n        serializedName: 'numFailedTasks',\n        type: {\n          name: 'Number'\n        }\n      },\n      numTaskRetries: {\n        required: true,\n        serializedName: 'numTaskRetries',\n        type: {\n          name: 'Number'\n        }\n      },\n      waitTime: {\n        required: true,\n        serializedName: 'waitTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      }\n    }\n  }\n};\n\nexport const NameValuePair = {\n  required: false,\n  serializedName: 'NameValuePair',\n  type: {\n    name: 'Composite',\n    className: 'NameValuePair',\n    modelProperties: {\n      name: {\n        required: false,\n        serializedName: 'name',\n        type: {\n          name: 'String'\n        }\n      },\n      value: {\n        required: false,\n        serializedName: 'value',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const DeleteCertificateError = {\n  required: false,\n  serializedName: 'DeleteCertificateError',\n  type: {\n    name: 'Composite',\n    className: 'DeleteCertificateError',\n    modelProperties: {\n      code: {\n        required: false,\n        serializedName: 'code',\n        type: {\n          name: 'String'\n        }\n      },\n      message: {\n        required: false,\n        serializedName: 'message',\n        type: {\n          name: 'String'\n        }\n      },\n      values: {\n        required: false,\n        serializedName: 'values',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'NameValuePairElementType',\n              type: {\n                name: 'Composite',\n                className: 'NameValuePair'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Certificate = {\n  required: false,\n  serializedName: 'Certificate',\n  type: {\n    name: 'Composite',\n    className: 'Certificate',\n    modelProperties: {\n      thumbprint: {\n        required: false,\n        serializedName: 'thumbprint',\n        type: {\n          name: 'String'\n        }\n      },\n      thumbprintAlgorithm: {\n        required: false,\n        serializedName: 'thumbprintAlgorithm',\n        type: {\n          name: 'String'\n        }\n      },\n      url: {\n        required: false,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      },\n      state: {\n        required: false,\n        serializedName: 'state',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'active', 'deleting', 'deleteFailed' ]\n        }\n      },\n      stateTransitionTime: {\n        required: false,\n        serializedName: 'stateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      previousState: {\n        required: false,\n        serializedName: 'previousState',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'active', 'deleting', 'deleteFailed' ]\n        }\n      },\n      previousStateTransitionTime: {\n        required: false,\n        serializedName: 'previousStateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      publicData: {\n        required: false,\n        serializedName: 'publicData',\n        type: {\n          name: 'String'\n        }\n      },\n      deleteCertificateError: {\n        required: false,\n        serializedName: 'deleteCertificateError',\n        type: {\n          name: 'Composite',\n          className: 'DeleteCertificateError'\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationPackageReference = {\n  required: false,\n  serializedName: 'ApplicationPackageReference',\n  type: {\n    name: 'Composite',\n    className: 'ApplicationPackageReference',\n    modelProperties: {\n      applicationId: {\n        required: true,\n        serializedName: 'applicationId',\n        type: {\n          name: 'String'\n        }\n      },\n      version: {\n        required: false,\n        serializedName: 'version',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationSummary = {\n  required: false,\n  serializedName: 'ApplicationSummary',\n  type: {\n    name: 'Composite',\n    className: 'ApplicationSummary',\n    modelProperties: {\n      id: {\n        required: true,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      displayName: {\n        required: true,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      versions: {\n        required: true,\n        serializedName: 'versions',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'stringElementType',\n              type: {\n                name: 'String'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateAddParameter = {\n  required: false,\n  serializedName: 'CertificateAddParameter',\n  type: {\n    name: 'Composite',\n    className: 'CertificateAddParameter',\n    modelProperties: {\n      thumbprint: {\n        required: true,\n        serializedName: 'thumbprint',\n        type: {\n          name: 'String'\n        }\n      },\n      thumbprintAlgorithm: {\n        required: true,\n        serializedName: 'thumbprintAlgorithm',\n        type: {\n          name: 'String'\n        }\n      },\n      data: {\n        required: true,\n        serializedName: 'data',\n        type: {\n          name: 'String'\n        }\n      },\n      certificateFormat: {\n        required: false,\n        serializedName: 'certificateFormat',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'pfx', 'cer' ]\n        }\n      },\n      password: {\n        required: false,\n        serializedName: 'password',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const FileProperties = {\n  required: false,\n  serializedName: 'FileProperties',\n  type: {\n    name: 'Composite',\n    className: 'FileProperties',\n    modelProperties: {\n      creationTime: {\n        required: false,\n        serializedName: 'creationTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      lastModified: {\n        required: true,\n        serializedName: 'lastModified',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      contentLength: {\n        required: true,\n        serializedName: 'contentLength',\n        type: {\n          name: 'Number'\n        }\n      },\n      contentType: {\n        required: false,\n        serializedName: 'contentType',\n        type: {\n          name: 'String'\n        }\n      },\n      fileMode: {\n        required: false,\n        serializedName: 'fileMode',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const NodeFile = {\n  required: false,\n  serializedName: 'NodeFile',\n  type: {\n    name: 'Composite',\n    className: 'NodeFile',\n    modelProperties: {\n      name: {\n        required: false,\n        serializedName: 'name',\n        type: {\n          name: 'String'\n        }\n      },\n      url: {\n        required: false,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      },\n      isDirectory: {\n        required: false,\n        serializedName: 'isDirectory',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      properties: {\n        required: false,\n        serializedName: 'properties',\n        type: {\n          name: 'Composite',\n          className: 'FileProperties'\n        }\n      }\n    }\n  }\n};\n\nexport const Schedule = {\n  required: false,\n  serializedName: 'Schedule',\n  type: {\n    name: 'Composite',\n    className: 'Schedule',\n    modelProperties: {\n      doNotRunUntil: {\n        required: false,\n        serializedName: 'doNotRunUntil',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      doNotRunAfter: {\n        required: false,\n        serializedName: 'doNotRunAfter',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      startWindow: {\n        required: false,\n        serializedName: 'startWindow',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      recurrenceInterval: {\n        required: false,\n        serializedName: 'recurrenceInterval',\n        type: {\n          name: 'TimeSpan'\n        }\n      }\n    }\n  }\n};\n\nexport const JobConstraints = {\n  required: false,\n  serializedName: 'JobConstraints',\n  type: {\n    name: 'Composite',\n    className: 'JobConstraints',\n    modelProperties: {\n      maxWallClockTime: {\n        required: false,\n        serializedName: 'maxWallClockTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      maxTaskRetryCount: {\n        required: false,\n        serializedName: 'maxTaskRetryCount',\n        type: {\n          name: 'Number'\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRegistry = {\n  required: false,\n  serializedName: 'ContainerRegistry',\n  type: {\n    name: 'Composite',\n    className: 'ContainerRegistry',\n    modelProperties: {\n      registryServer: {\n        required: false,\n        serializedName: 'registryServer',\n        type: {\n          name: 'String'\n        }\n      },\n      userName: {\n        required: true,\n        serializedName: 'username',\n        type: {\n          name: 'String'\n        }\n      },\n      password: {\n        required: true,\n        serializedName: 'password',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskContainerSettings = {\n  required: false,\n  serializedName: 'TaskContainerSettings',\n  type: {\n    name: 'Composite',\n    className: 'TaskContainerSettings',\n    modelProperties: {\n      containerRunOptions: {\n        required: false,\n        serializedName: 'containerRunOptions',\n        type: {\n          name: 'String'\n        }\n      },\n      imageName: {\n        required: true,\n        serializedName: 'imageName',\n        type: {\n          name: 'String'\n        }\n      },\n      registry: {\n        required: false,\n        serializedName: 'registry',\n        type: {\n          name: 'Composite',\n          className: 'ContainerRegistry'\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceFile = {\n  required: false,\n  serializedName: 'ResourceFile',\n  type: {\n    name: 'Composite',\n    className: 'ResourceFile',\n    modelProperties: {\n      blobSource: {\n        required: true,\n        serializedName: 'blobSource',\n        type: {\n          name: 'String'\n        }\n      },\n      filePath: {\n        required: true,\n        serializedName: 'filePath',\n        type: {\n          name: 'String'\n        }\n      },\n      fileMode: {\n        required: false,\n        serializedName: 'fileMode',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const EnvironmentSetting = {\n  required: false,\n  serializedName: 'EnvironmentSetting',\n  type: {\n    name: 'Composite',\n    className: 'EnvironmentSetting',\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: 'name',\n        type: {\n          name: 'String'\n        }\n      },\n      value: {\n        required: false,\n        serializedName: 'value',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const ExitOptions = {\n  required: false,\n  serializedName: 'ExitOptions',\n  type: {\n    name: 'Composite',\n    className: 'ExitOptions',\n    modelProperties: {\n      jobAction: {\n        required: false,\n        serializedName: 'jobAction',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'none', 'disable', 'terminate' ]\n        }\n      },\n      dependencyAction: {\n        required: false,\n        serializedName: 'dependencyAction',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'satisfy', 'block' ]\n        }\n      }\n    }\n  }\n};\n\nexport const ExitCodeMapping = {\n  required: false,\n  serializedName: 'ExitCodeMapping',\n  type: {\n    name: 'Composite',\n    className: 'ExitCodeMapping',\n    modelProperties: {\n      code: {\n        required: true,\n        serializedName: 'code',\n        type: {\n          name: 'Number'\n        }\n      },\n      exitOptions: {\n        required: true,\n        serializedName: 'exitOptions',\n        type: {\n          name: 'Composite',\n          className: 'ExitOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ExitCodeRangeMapping = {\n  required: false,\n  serializedName: 'ExitCodeRangeMapping',\n  type: {\n    name: 'Composite',\n    className: 'ExitCodeRangeMapping',\n    modelProperties: {\n      start: {\n        required: true,\n        serializedName: 'start',\n        type: {\n          name: 'Number'\n        }\n      },\n      end: {\n        required: true,\n        serializedName: 'end',\n        type: {\n          name: 'Number'\n        }\n      },\n      exitOptions: {\n        required: true,\n        serializedName: 'exitOptions',\n        type: {\n          name: 'Composite',\n          className: 'ExitOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ExitConditions = {\n  required: false,\n  serializedName: 'ExitConditions',\n  type: {\n    name: 'Composite',\n    className: 'ExitConditions',\n    modelProperties: {\n      exitCodes: {\n        required: false,\n        serializedName: 'exitCodes',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ExitCodeMappingElementType',\n              type: {\n                name: 'Composite',\n                className: 'ExitCodeMapping'\n              }\n          }\n        }\n      },\n      exitCodeRanges: {\n        required: false,\n        serializedName: 'exitCodeRanges',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ExitCodeRangeMappingElementType',\n              type: {\n                name: 'Composite',\n                className: 'ExitCodeRangeMapping'\n              }\n          }\n        }\n      },\n      preProcessingError: {\n        required: false,\n        serializedName: 'preProcessingError',\n        type: {\n          name: 'Composite',\n          className: 'ExitOptions'\n        }\n      },\n      fileUploadError: {\n        required: false,\n        serializedName: 'fileUploadError',\n        type: {\n          name: 'Composite',\n          className: 'ExitOptions'\n        }\n      },\n      default: {\n        required: false,\n        serializedName: 'default',\n        type: {\n          name: 'Composite',\n          className: 'ExitOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const AutoUserSpecification = {\n  required: false,\n  serializedName: 'AutoUserSpecification',\n  type: {\n    name: 'Composite',\n    className: 'AutoUserSpecification',\n    modelProperties: {\n      scope: {\n        required: false,\n        serializedName: 'scope',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'task', 'pool' ]\n        }\n      },\n      elevationLevel: {\n        required: false,\n        serializedName: 'elevationLevel',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'nonAdmin', 'admin' ]\n        }\n      }\n    }\n  }\n};\n\nexport const UserIdentity = {\n  required: false,\n  serializedName: 'UserIdentity',\n  type: {\n    name: 'Composite',\n    className: 'UserIdentity',\n    modelProperties: {\n      userName: {\n        required: false,\n        serializedName: 'username',\n        type: {\n          name: 'String'\n        }\n      },\n      autoUser: {\n        required: false,\n        serializedName: 'autoUser',\n        type: {\n          name: 'Composite',\n          className: 'AutoUserSpecification'\n        }\n      }\n    }\n  }\n};\n\nexport const LinuxUserConfiguration = {\n  required: false,\n  serializedName: 'LinuxUserConfiguration',\n  type: {\n    name: 'Composite',\n    className: 'LinuxUserConfiguration',\n    modelProperties: {\n      uid: {\n        required: false,\n        serializedName: 'uid',\n        type: {\n          name: 'Number'\n        }\n      },\n      gid: {\n        required: false,\n        serializedName: 'gid',\n        type: {\n          name: 'Number'\n        }\n      },\n      sshPrivateKey: {\n        required: false,\n        serializedName: 'sshPrivateKey',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const UserAccount = {\n  required: false,\n  serializedName: 'UserAccount',\n  type: {\n    name: 'Composite',\n    className: 'UserAccount',\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: 'name',\n        type: {\n          name: 'String'\n        }\n      },\n      password: {\n        required: true,\n        serializedName: 'password',\n        type: {\n          name: 'String'\n        }\n      },\n      elevationLevel: {\n        required: false,\n        serializedName: 'elevationLevel',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'nonAdmin', 'admin' ]\n        }\n      },\n      linuxUserConfiguration: {\n        required: false,\n        serializedName: 'linuxUserConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'LinuxUserConfiguration'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskConstraints = {\n  required: false,\n  serializedName: 'TaskConstraints',\n  type: {\n    name: 'Composite',\n    className: 'TaskConstraints',\n    modelProperties: {\n      maxWallClockTime: {\n        required: false,\n        serializedName: 'maxWallClockTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      retentionTime: {\n        required: false,\n        serializedName: 'retentionTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      maxTaskRetryCount: {\n        required: false,\n        serializedName: 'maxTaskRetryCount',\n        type: {\n          name: 'Number'\n        }\n      }\n    }\n  }\n};\n\nexport const OutputFileBlobContainerDestination = {\n  required: false,\n  serializedName: 'OutputFileBlobContainerDestination',\n  type: {\n    name: 'Composite',\n    className: 'OutputFileBlobContainerDestination',\n    modelProperties: {\n      path: {\n        required: false,\n        serializedName: 'path',\n        type: {\n          name: 'String'\n        }\n      },\n      containerUrl: {\n        required: true,\n        serializedName: 'containerUrl',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const OutputFileDestination = {\n  required: false,\n  serializedName: 'OutputFileDestination',\n  type: {\n    name: 'Composite',\n    className: 'OutputFileDestination',\n    modelProperties: {\n      container: {\n        required: false,\n        serializedName: 'container',\n        type: {\n          name: 'Composite',\n          className: 'OutputFileBlobContainerDestination'\n        }\n      }\n    }\n  }\n};\n\nexport const OutputFileUploadOptions = {\n  required: false,\n  serializedName: 'OutputFileUploadOptions',\n  type: {\n    name: 'Composite',\n    className: 'OutputFileUploadOptions',\n    modelProperties: {\n      uploadCondition: {\n        required: true,\n        serializedName: 'uploadCondition',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'taskSuccess', 'taskFailure', 'taskCompletion' ]\n        }\n      }\n    }\n  }\n};\n\nexport const OutputFile = {\n  required: false,\n  serializedName: 'OutputFile',\n  type: {\n    name: 'Composite',\n    className: 'OutputFile',\n    modelProperties: {\n      filePattern: {\n        required: true,\n        serializedName: 'filePattern',\n        type: {\n          name: 'String'\n        }\n      },\n      destination: {\n        required: true,\n        serializedName: 'destination',\n        type: {\n          name: 'Composite',\n          className: 'OutputFileDestination'\n        }\n      },\n      uploadOptions: {\n        required: true,\n        serializedName: 'uploadOptions',\n        type: {\n          name: 'Composite',\n          className: 'OutputFileUploadOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobManagerTask = {\n  required: false,\n  serializedName: 'JobManagerTask',\n  type: {\n    name: 'Composite',\n    className: 'JobManagerTask',\n    modelProperties: {\n      id: {\n        required: true,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      displayName: {\n        required: false,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      commandLine: {\n        required: true,\n        serializedName: 'commandLine',\n        type: {\n          name: 'String'\n        }\n      },\n      containerSettings: {\n        required: false,\n        serializedName: 'containerSettings',\n        type: {\n          name: 'Composite',\n          className: 'TaskContainerSettings'\n        }\n      },\n      resourceFiles: {\n        required: false,\n        serializedName: 'resourceFiles',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ResourceFileElementType',\n              type: {\n                name: 'Composite',\n                className: 'ResourceFile'\n              }\n          }\n        }\n      },\n      outputFiles: {\n        required: false,\n        serializedName: 'outputFiles',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'OutputFileElementType',\n              type: {\n                name: 'Composite',\n                className: 'OutputFile'\n              }\n          }\n        }\n      },\n      environmentSettings: {\n        required: false,\n        serializedName: 'environmentSettings',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'EnvironmentSettingElementType',\n              type: {\n                name: 'Composite',\n                className: 'EnvironmentSetting'\n              }\n          }\n        }\n      },\n      constraints: {\n        required: false,\n        serializedName: 'constraints',\n        type: {\n          name: 'Composite',\n          className: 'TaskConstraints'\n        }\n      },\n      killJobOnCompletion: {\n        required: false,\n        serializedName: 'killJobOnCompletion',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      userIdentity: {\n        required: false,\n        serializedName: 'userIdentity',\n        type: {\n          name: 'Composite',\n          className: 'UserIdentity'\n        }\n      },\n      runExclusive: {\n        required: false,\n        serializedName: 'runExclusive',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      applicationPackageReferences: {\n        required: false,\n        serializedName: 'applicationPackageReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ApplicationPackageReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'ApplicationPackageReference'\n              }\n          }\n        }\n      },\n      authenticationTokenSettings: {\n        required: false,\n        serializedName: 'authenticationTokenSettings',\n        type: {\n          name: 'Composite',\n          className: 'AuthenticationTokenSettings'\n        }\n      },\n      allowLowPriorityNode: {\n        required: false,\n        serializedName: 'allowLowPriorityNode',\n        type: {\n          name: 'Boolean'\n        }\n      }\n    }\n  }\n};\n\nexport const JobPreparationTask = {\n  required: false,\n  serializedName: 'JobPreparationTask',\n  type: {\n    name: 'Composite',\n    className: 'JobPreparationTask',\n    modelProperties: {\n      id: {\n        required: false,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      commandLine: {\n        required: true,\n        serializedName: 'commandLine',\n        type: {\n          name: 'String'\n        }\n      },\n      containerSettings: {\n        required: false,\n        serializedName: 'containerSettings',\n        type: {\n          name: 'Composite',\n          className: 'TaskContainerSettings'\n        }\n      },\n      resourceFiles: {\n        required: false,\n        serializedName: 'resourceFiles',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ResourceFileElementType',\n              type: {\n                name: 'Composite',\n                className: 'ResourceFile'\n              }\n          }\n        }\n      },\n      environmentSettings: {\n        required: false,\n        serializedName: 'environmentSettings',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'EnvironmentSettingElementType',\n              type: {\n                name: 'Composite',\n                className: 'EnvironmentSetting'\n              }\n          }\n        }\n      },\n      constraints: {\n        required: false,\n        serializedName: 'constraints',\n        type: {\n          name: 'Composite',\n          className: 'TaskConstraints'\n        }\n      },\n      waitForSuccess: {\n        required: false,\n        serializedName: 'waitForSuccess',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      userIdentity: {\n        required: false,\n        serializedName: 'userIdentity',\n        type: {\n          name: 'Composite',\n          className: 'UserIdentity'\n        }\n      },\n      rerunOnNodeRebootAfterSuccess: {\n        required: false,\n        serializedName: 'rerunOnNodeRebootAfterSuccess',\n        type: {\n          name: 'Boolean'\n        }\n      }\n    }\n  }\n};\n\nexport const JobReleaseTask = {\n  required: false,\n  serializedName: 'JobReleaseTask',\n  type: {\n    name: 'Composite',\n    className: 'JobReleaseTask',\n    modelProperties: {\n      id: {\n        required: false,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      commandLine: {\n        required: true,\n        serializedName: 'commandLine',\n        type: {\n          name: 'String'\n        }\n      },\n      containerSettings: {\n        required: false,\n        serializedName: 'containerSettings',\n        type: {\n          name: 'Composite',\n          className: 'TaskContainerSettings'\n        }\n      },\n      resourceFiles: {\n        required: false,\n        serializedName: 'resourceFiles',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ResourceFileElementType',\n              type: {\n                name: 'Composite',\n                className: 'ResourceFile'\n              }\n          }\n        }\n      },\n      environmentSettings: {\n        required: false,\n        serializedName: 'environmentSettings',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'EnvironmentSettingElementType',\n              type: {\n                name: 'Composite',\n                className: 'EnvironmentSetting'\n              }\n          }\n        }\n      },\n      maxWallClockTime: {\n        required: false,\n        serializedName: 'maxWallClockTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      retentionTime: {\n        required: false,\n        serializedName: 'retentionTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      userIdentity: {\n        required: false,\n        serializedName: 'userIdentity',\n        type: {\n          name: 'Composite',\n          className: 'UserIdentity'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskSchedulingPolicy = {\n  required: false,\n  serializedName: 'TaskSchedulingPolicy',\n  type: {\n    name: 'Composite',\n    className: 'TaskSchedulingPolicy',\n    modelProperties: {\n      nodeFillType: {\n        required: true,\n        serializedName: 'nodeFillType',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'spread', 'pack' ]\n        }\n      }\n    }\n  }\n};\n\nexport const StartTask = {\n  required: false,\n  serializedName: 'StartTask',\n  type: {\n    name: 'Composite',\n    className: 'StartTask',\n    modelProperties: {\n      commandLine: {\n        required: true,\n        serializedName: 'commandLine',\n        type: {\n          name: 'String'\n        }\n      },\n      containerSettings: {\n        required: false,\n        serializedName: 'containerSettings',\n        type: {\n          name: 'Composite',\n          className: 'TaskContainerSettings'\n        }\n      },\n      resourceFiles: {\n        required: false,\n        serializedName: 'resourceFiles',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ResourceFileElementType',\n              type: {\n                name: 'Composite',\n                className: 'ResourceFile'\n              }\n          }\n        }\n      },\n      environmentSettings: {\n        required: false,\n        serializedName: 'environmentSettings',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'EnvironmentSettingElementType',\n              type: {\n                name: 'Composite',\n                className: 'EnvironmentSetting'\n              }\n          }\n        }\n      },\n      userIdentity: {\n        required: false,\n        serializedName: 'userIdentity',\n        type: {\n          name: 'Composite',\n          className: 'UserIdentity'\n        }\n      },\n      maxTaskRetryCount: {\n        required: false,\n        serializedName: 'maxTaskRetryCount',\n        type: {\n          name: 'Number'\n        }\n      },\n      waitForSuccess: {\n        required: false,\n        serializedName: 'waitForSuccess',\n        type: {\n          name: 'Boolean'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateReference = {\n  required: false,\n  serializedName: 'CertificateReference',\n  type: {\n    name: 'Composite',\n    className: 'CertificateReference',\n    modelProperties: {\n      thumbprint: {\n        required: true,\n        serializedName: 'thumbprint',\n        type: {\n          name: 'String'\n        }\n      },\n      thumbprintAlgorithm: {\n        required: true,\n        serializedName: 'thumbprintAlgorithm',\n        type: {\n          name: 'String'\n        }\n      },\n      storeLocation: {\n        required: false,\n        serializedName: 'storeLocation',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'currentUser', 'localMachine' ]\n        }\n      },\n      storeName: {\n        required: false,\n        serializedName: 'storeName',\n        type: {\n          name: 'String'\n        }\n      },\n      visibility: {\n        required: false,\n        serializedName: 'visibility',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CertificateVisibilityElementType',\n              type: {\n                name: 'Enum',\n                allowedValues: [ 'startTask', 'task', 'remoteUser' ]\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataItem = {\n  required: false,\n  serializedName: 'MetadataItem',\n  type: {\n    name: 'Composite',\n    className: 'MetadataItem',\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: 'name',\n        type: {\n          name: 'String'\n        }\n      },\n      value: {\n        required: true,\n        serializedName: 'value',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceConfiguration = {\n  required: false,\n  serializedName: 'CloudServiceConfiguration',\n  type: {\n    name: 'Composite',\n    className: 'CloudServiceConfiguration',\n    modelProperties: {\n      osFamily: {\n        required: true,\n        serializedName: 'osFamily',\n        type: {\n          name: 'String'\n        }\n      },\n      targetOSVersion: {\n        required: false,\n        serializedName: 'targetOSVersion',\n        type: {\n          name: 'String'\n        }\n      },\n      currentOSVersion: {\n        required: false,\n        readOnly: true,\n        serializedName: 'currentOSVersion',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const OSDisk = {\n  required: false,\n  serializedName: 'OSDisk',\n  type: {\n    name: 'Composite',\n    className: 'OSDisk',\n    modelProperties: {\n      caching: {\n        required: false,\n        serializedName: 'caching',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'none', 'readOnly', 'readWrite' ]\n        }\n      }\n    }\n  }\n};\n\nexport const WindowsConfiguration = {\n  required: false,\n  serializedName: 'WindowsConfiguration',\n  type: {\n    name: 'Composite',\n    className: 'WindowsConfiguration',\n    modelProperties: {\n      enableAutomaticUpdates: {\n        required: false,\n        serializedName: 'enableAutomaticUpdates',\n        type: {\n          name: 'Boolean'\n        }\n      }\n    }\n  }\n};\n\nexport const DataDisk = {\n  required: false,\n  serializedName: 'DataDisk',\n  type: {\n    name: 'Composite',\n    className: 'DataDisk',\n    modelProperties: {\n      lun: {\n        required: true,\n        serializedName: 'lun',\n        type: {\n          name: 'Number'\n        }\n      },\n      caching: {\n        required: false,\n        serializedName: 'caching',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'none', 'readOnly', 'readWrite' ]\n        }\n      },\n      diskSizeGB: {\n        required: true,\n        serializedName: 'diskSizeGB',\n        type: {\n          name: 'Number'\n        }\n      },\n      storageAccountType: {\n        required: false,\n        serializedName: 'storageAccountType',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'Standard_LRS', 'Premium_LRS' ]\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerConfiguration = {\n  required: false,\n  serializedName: 'ContainerConfiguration',\n  type: {\n    name: 'Composite',\n    className: 'ContainerConfiguration',\n    modelProperties: {\n      type: {\n        required: true,\n        isConstant: true,\n        serializedName: 'type',\n        defaultValue: 'docker',\n        type: {\n          name: 'String'\n        }\n      },\n      containerImageNames: {\n        required: false,\n        serializedName: 'containerImageNames',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'stringElementType',\n              type: {\n                name: 'String'\n              }\n          }\n        }\n      },\n      containerRegistries: {\n        required: false,\n        serializedName: 'containerRegistries',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ContainerRegistryElementType',\n              type: {\n                name: 'Composite',\n                className: 'ContainerRegistry'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineConfiguration = {\n  required: false,\n  serializedName: 'VirtualMachineConfiguration',\n  type: {\n    name: 'Composite',\n    className: 'VirtualMachineConfiguration',\n    modelProperties: {\n      imageReference: {\n        required: true,\n        serializedName: 'imageReference',\n        type: {\n          name: 'Composite',\n          className: 'ImageReference'\n        }\n      },\n      osDisk: {\n        required: false,\n        serializedName: 'osDisk',\n        type: {\n          name: 'Composite',\n          className: 'OSDisk'\n        }\n      },\n      nodeAgentSKUId: {\n        required: true,\n        serializedName: 'nodeAgentSKUId',\n        type: {\n          name: 'String'\n        }\n      },\n      windowsConfiguration: {\n        required: false,\n        serializedName: 'windowsConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'WindowsConfiguration'\n        }\n      },\n      dataDisks: {\n        required: false,\n        serializedName: 'dataDisks',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'DataDiskElementType',\n              type: {\n                name: 'Composite',\n                className: 'DataDisk'\n              }\n          }\n        }\n      },\n      licenseType: {\n        required: false,\n        serializedName: 'licenseType',\n        type: {\n          name: 'String'\n        }\n      },\n      containerConfiguration: {\n        required: false,\n        serializedName: 'containerConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'ContainerConfiguration'\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkSecurityGroupRule = {\n  required: false,\n  serializedName: 'NetworkSecurityGroupRule',\n  type: {\n    name: 'Composite',\n    className: 'NetworkSecurityGroupRule',\n    modelProperties: {\n      priority: {\n        required: true,\n        serializedName: 'priority',\n        type: {\n          name: 'Number'\n        }\n      },\n      access: {\n        required: true,\n        serializedName: 'access',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'allow', 'deny' ]\n        }\n      },\n      sourceAddressPrefix: {\n        required: true,\n        serializedName: 'sourceAddressPrefix',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const InboundNATPool = {\n  required: false,\n  serializedName: 'InboundNATPool',\n  type: {\n    name: 'Composite',\n    className: 'InboundNATPool',\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: 'name',\n        type: {\n          name: 'String'\n        }\n      },\n      protocol: {\n        required: true,\n        serializedName: 'protocol',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'tcp', 'udp' ]\n        }\n      },\n      backendPort: {\n        required: true,\n        serializedName: 'backendPort',\n        type: {\n          name: 'Number'\n        }\n      },\n      frontendPortRangeStart: {\n        required: true,\n        serializedName: 'frontendPortRangeStart',\n        type: {\n          name: 'Number'\n        }\n      },\n      frontendPortRangeEnd: {\n        required: true,\n        serializedName: 'frontendPortRangeEnd',\n        type: {\n          name: 'Number'\n        }\n      },\n      networkSecurityGroupRules: {\n        required: false,\n        serializedName: 'networkSecurityGroupRules',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'NetworkSecurityGroupRuleElementType',\n              type: {\n                name: 'Composite',\n                className: 'NetworkSecurityGroupRule'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PoolEndpointConfiguration = {\n  required: false,\n  serializedName: 'PoolEndpointConfiguration',\n  type: {\n    name: 'Composite',\n    className: 'PoolEndpointConfiguration',\n    modelProperties: {\n      inboundNATPools: {\n        required: true,\n        serializedName: 'inboundNATPools',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'InboundNATPoolElementType',\n              type: {\n                name: 'Composite',\n                className: 'InboundNATPool'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkConfiguration = {\n  required: false,\n  serializedName: 'NetworkConfiguration',\n  type: {\n    name: 'Composite',\n    className: 'NetworkConfiguration',\n    modelProperties: {\n      subnetId: {\n        required: false,\n        serializedName: 'subnetId',\n        type: {\n          name: 'String'\n        }\n      },\n      endpointConfiguration: {\n        required: false,\n        serializedName: 'endpointConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'PoolEndpointConfiguration'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolSpecification = {\n  required: false,\n  serializedName: 'PoolSpecification',\n  type: {\n    name: 'Composite',\n    className: 'PoolSpecification',\n    modelProperties: {\n      displayName: {\n        required: false,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      vmSize: {\n        required: true,\n        serializedName: 'vmSize',\n        type: {\n          name: 'String'\n        }\n      },\n      cloudServiceConfiguration: {\n        required: false,\n        serializedName: 'cloudServiceConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'CloudServiceConfiguration'\n        }\n      },\n      virtualMachineConfiguration: {\n        required: false,\n        serializedName: 'virtualMachineConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'VirtualMachineConfiguration'\n        }\n      },\n      maxTasksPerNode: {\n        required: false,\n        serializedName: 'maxTasksPerNode',\n        type: {\n          name: 'Number'\n        }\n      },\n      taskSchedulingPolicy: {\n        required: false,\n        serializedName: 'taskSchedulingPolicy',\n        type: {\n          name: 'Composite',\n          className: 'TaskSchedulingPolicy'\n        }\n      },\n      resizeTimeout: {\n        required: false,\n        serializedName: 'resizeTimeout',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      targetDedicatedNodes: {\n        required: false,\n        serializedName: 'targetDedicatedNodes',\n        type: {\n          name: 'Number'\n        }\n      },\n      targetLowPriorityNodes: {\n        required: false,\n        serializedName: 'targetLowPriorityNodes',\n        type: {\n          name: 'Number'\n        }\n      },\n      enableAutoScale: {\n        required: false,\n        serializedName: 'enableAutoScale',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      autoScaleFormula: {\n        required: false,\n        serializedName: 'autoScaleFormula',\n        type: {\n          name: 'String'\n        }\n      },\n      autoScaleEvaluationInterval: {\n        required: false,\n        serializedName: 'autoScaleEvaluationInterval',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      enableInterNodeCommunication: {\n        required: false,\n        serializedName: 'enableInterNodeCommunication',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      networkConfiguration: {\n        required: false,\n        serializedName: 'networkConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'NetworkConfiguration'\n        }\n      },\n      startTask: {\n        required: false,\n        serializedName: 'startTask',\n        type: {\n          name: 'Composite',\n          className: 'StartTask'\n        }\n      },\n      certificateReferences: {\n        required: false,\n        serializedName: 'certificateReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CertificateReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'CertificateReference'\n              }\n          }\n        }\n      },\n      applicationPackageReferences: {\n        required: false,\n        serializedName: 'applicationPackageReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ApplicationPackageReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'ApplicationPackageReference'\n              }\n          }\n        }\n      },\n      applicationLicenses: {\n        required: false,\n        serializedName: 'applicationLicenses',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'stringElementType',\n              type: {\n                name: 'String'\n              }\n          }\n        }\n      },\n      userAccounts: {\n        required: false,\n        serializedName: 'userAccounts',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'UserAccountElementType',\n              type: {\n                name: 'Composite',\n                className: 'UserAccount'\n              }\n          }\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AutoPoolSpecification = {\n  required: false,\n  serializedName: 'AutoPoolSpecification',\n  type: {\n    name: 'Composite',\n    className: 'AutoPoolSpecification',\n    modelProperties: {\n      autoPoolIdPrefix: {\n        required: false,\n        serializedName: 'autoPoolIdPrefix',\n        type: {\n          name: 'String'\n        }\n      },\n      poolLifetimeOption: {\n        required: true,\n        serializedName: 'poolLifetimeOption',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'jobSchedule', 'job' ]\n        }\n      },\n      keepAlive: {\n        required: false,\n        serializedName: 'keepAlive',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      pool: {\n        required: false,\n        serializedName: 'pool',\n        type: {\n          name: 'Composite',\n          className: 'PoolSpecification'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolInformation = {\n  required: false,\n  serializedName: 'PoolInformation',\n  type: {\n    name: 'Composite',\n    className: 'PoolInformation',\n    modelProperties: {\n      poolId: {\n        required: false,\n        serializedName: 'poolId',\n        type: {\n          name: 'String'\n        }\n      },\n      autoPoolSpecification: {\n        required: false,\n        serializedName: 'autoPoolSpecification',\n        type: {\n          name: 'Composite',\n          className: 'AutoPoolSpecification'\n        }\n      }\n    }\n  }\n};\n\nexport const JobSpecification = {\n  required: false,\n  serializedName: 'JobSpecification',\n  type: {\n    name: 'Composite',\n    className: 'JobSpecification',\n    modelProperties: {\n      priority: {\n        required: false,\n        serializedName: 'priority',\n        type: {\n          name: 'Number'\n        }\n      },\n      displayName: {\n        required: false,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      usesTaskDependencies: {\n        required: false,\n        serializedName: 'usesTaskDependencies',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      onAllTasksComplete: {\n        required: false,\n        serializedName: 'onAllTasksComplete',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'noAction', 'terminateJob' ]\n        }\n      },\n      onTaskFailure: {\n        required: false,\n        serializedName: 'onTaskFailure',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'noAction', 'performExitOptionsJobAction' ]\n        }\n      },\n      constraints: {\n        required: false,\n        serializedName: 'constraints',\n        type: {\n          name: 'Composite',\n          className: 'JobConstraints'\n        }\n      },\n      jobManagerTask: {\n        required: false,\n        serializedName: 'jobManagerTask',\n        type: {\n          name: 'Composite',\n          className: 'JobManagerTask'\n        }\n      },\n      jobPreparationTask: {\n        required: false,\n        serializedName: 'jobPreparationTask',\n        type: {\n          name: 'Composite',\n          className: 'JobPreparationTask'\n        }\n      },\n      jobReleaseTask: {\n        required: false,\n        serializedName: 'jobReleaseTask',\n        type: {\n          name: 'Composite',\n          className: 'JobReleaseTask'\n        }\n      },\n      commonEnvironmentSettings: {\n        required: false,\n        serializedName: 'commonEnvironmentSettings',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'EnvironmentSettingElementType',\n              type: {\n                name: 'Composite',\n                className: 'EnvironmentSetting'\n              }\n          }\n        }\n      },\n      poolInfo: {\n        required: true,\n        serializedName: 'poolInfo',\n        defaultValue: {},\n        type: {\n          name: 'Composite',\n          className: 'PoolInformation'\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RecentJob = {\n  required: false,\n  serializedName: 'RecentJob',\n  type: {\n    name: 'Composite',\n    className: 'RecentJob',\n    modelProperties: {\n      id: {\n        required: false,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      url: {\n        required: false,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleExecutionInformation = {\n  required: false,\n  serializedName: 'JobScheduleExecutionInformation',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleExecutionInformation',\n    modelProperties: {\n      nextRunTime: {\n        required: false,\n        serializedName: 'nextRunTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      recentJob: {\n        required: false,\n        serializedName: 'recentJob',\n        type: {\n          name: 'Composite',\n          className: 'RecentJob'\n        }\n      },\n      endTime: {\n        required: false,\n        serializedName: 'endTime',\n        type: {\n          name: 'DateTime'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleStatistics = {\n  required: false,\n  serializedName: 'JobScheduleStatistics',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleStatistics',\n    modelProperties: {\n      url: {\n        required: true,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      },\n      startTime: {\n        required: true,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      lastUpdateTime: {\n        required: true,\n        serializedName: 'lastUpdateTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      userCPUTime: {\n        required: true,\n        serializedName: 'userCPUTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      kernelCPUTime: {\n        required: true,\n        serializedName: 'kernelCPUTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      wallClockTime: {\n        required: true,\n        serializedName: 'wallClockTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      readIOps: {\n        required: true,\n        serializedName: 'readIOps',\n        type: {\n          name: 'Number'\n        }\n      },\n      writeIOps: {\n        required: true,\n        serializedName: 'writeIOps',\n        type: {\n          name: 'Number'\n        }\n      },\n      readIOGiB: {\n        required: true,\n        serializedName: 'readIOGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      writeIOGiB: {\n        required: true,\n        serializedName: 'writeIOGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      numSucceededTasks: {\n        required: true,\n        serializedName: 'numSucceededTasks',\n        type: {\n          name: 'Number'\n        }\n      },\n      numFailedTasks: {\n        required: true,\n        serializedName: 'numFailedTasks',\n        type: {\n          name: 'Number'\n        }\n      },\n      numTaskRetries: {\n        required: true,\n        serializedName: 'numTaskRetries',\n        type: {\n          name: 'Number'\n        }\n      },\n      waitTime: {\n        required: true,\n        serializedName: 'waitTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      }\n    }\n  }\n};\n\nexport const CloudJobSchedule = {\n  required: false,\n  serializedName: 'CloudJobSchedule',\n  type: {\n    name: 'Composite',\n    className: 'CloudJobSchedule',\n    modelProperties: {\n      id: {\n        required: false,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      displayName: {\n        required: false,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      url: {\n        required: false,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      },\n      eTag: {\n        required: false,\n        serializedName: 'eTag',\n        type: {\n          name: 'String'\n        }\n      },\n      lastModified: {\n        required: false,\n        serializedName: 'lastModified',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      creationTime: {\n        required: false,\n        serializedName: 'creationTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      state: {\n        required: false,\n        serializedName: 'state',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'active', 'completed', 'disabled', 'terminating', 'deleting' ]\n        }\n      },\n      stateTransitionTime: {\n        required: false,\n        serializedName: 'stateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      previousState: {\n        required: false,\n        serializedName: 'previousState',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'active', 'completed', 'disabled', 'terminating', 'deleting' ]\n        }\n      },\n      previousStateTransitionTime: {\n        required: false,\n        serializedName: 'previousStateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      schedule: {\n        required: false,\n        serializedName: 'schedule',\n        type: {\n          name: 'Composite',\n          className: 'Schedule'\n        }\n      },\n      jobSpecification: {\n        required: false,\n        serializedName: 'jobSpecification',\n        type: {\n          name: 'Composite',\n          className: 'JobSpecification'\n        }\n      },\n      executionInfo: {\n        required: false,\n        serializedName: 'executionInfo',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleExecutionInformation'\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      },\n      stats: {\n        required: false,\n        serializedName: 'stats',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleStatistics'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleAddParameter = {\n  required: false,\n  serializedName: 'JobScheduleAddParameter',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleAddParameter',\n    modelProperties: {\n      id: {\n        required: true,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      displayName: {\n        required: false,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      schedule: {\n        required: true,\n        serializedName: 'schedule',\n        type: {\n          name: 'Composite',\n          className: 'Schedule'\n        }\n      },\n      jobSpecification: {\n        required: true,\n        serializedName: 'jobSpecification',\n        defaultValue: {},\n        type: {\n          name: 'Composite',\n          className: 'JobSpecification'\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const JobSchedulingError = {\n  required: false,\n  serializedName: 'JobSchedulingError',\n  type: {\n    name: 'Composite',\n    className: 'JobSchedulingError',\n    modelProperties: {\n      category: {\n        required: true,\n        serializedName: 'category',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'userError', 'serverError' ]\n        }\n      },\n      code: {\n        required: false,\n        serializedName: 'code',\n        type: {\n          name: 'String'\n        }\n      },\n      message: {\n        required: false,\n        serializedName: 'message',\n        type: {\n          name: 'String'\n        }\n      },\n      details: {\n        required: false,\n        serializedName: 'details',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'NameValuePairElementType',\n              type: {\n                name: 'Composite',\n                className: 'NameValuePair'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const JobExecutionInformation = {\n  required: false,\n  serializedName: 'JobExecutionInformation',\n  type: {\n    name: 'Composite',\n    className: 'JobExecutionInformation',\n    modelProperties: {\n      startTime: {\n        required: true,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      endTime: {\n        required: false,\n        serializedName: 'endTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      poolId: {\n        required: false,\n        serializedName: 'poolId',\n        type: {\n          name: 'String'\n        }\n      },\n      schedulingError: {\n        required: false,\n        serializedName: 'schedulingError',\n        type: {\n          name: 'Composite',\n          className: 'JobSchedulingError'\n        }\n      },\n      terminateReason: {\n        required: false,\n        serializedName: 'terminateReason',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const CloudJob = {\n  required: false,\n  serializedName: 'CloudJob',\n  type: {\n    name: 'Composite',\n    className: 'CloudJob',\n    modelProperties: {\n      id: {\n        required: false,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      displayName: {\n        required: false,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      usesTaskDependencies: {\n        required: false,\n        serializedName: 'usesTaskDependencies',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      url: {\n        required: false,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      },\n      eTag: {\n        required: false,\n        serializedName: 'eTag',\n        type: {\n          name: 'String'\n        }\n      },\n      lastModified: {\n        required: false,\n        serializedName: 'lastModified',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      creationTime: {\n        required: false,\n        serializedName: 'creationTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      state: {\n        required: false,\n        serializedName: 'state',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'active', 'disabling', 'disabled', 'enabling', 'terminating', 'completed', 'deleting' ]\n        }\n      },\n      stateTransitionTime: {\n        required: false,\n        serializedName: 'stateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      previousState: {\n        required: false,\n        serializedName: 'previousState',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'active', 'disabling', 'disabled', 'enabling', 'terminating', 'completed', 'deleting' ]\n        }\n      },\n      previousStateTransitionTime: {\n        required: false,\n        serializedName: 'previousStateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      priority: {\n        required: false,\n        serializedName: 'priority',\n        type: {\n          name: 'Number'\n        }\n      },\n      constraints: {\n        required: false,\n        serializedName: 'constraints',\n        type: {\n          name: 'Composite',\n          className: 'JobConstraints'\n        }\n      },\n      jobManagerTask: {\n        required: false,\n        serializedName: 'jobManagerTask',\n        type: {\n          name: 'Composite',\n          className: 'JobManagerTask'\n        }\n      },\n      jobPreparationTask: {\n        required: false,\n        serializedName: 'jobPreparationTask',\n        type: {\n          name: 'Composite',\n          className: 'JobPreparationTask'\n        }\n      },\n      jobReleaseTask: {\n        required: false,\n        serializedName: 'jobReleaseTask',\n        type: {\n          name: 'Composite',\n          className: 'JobReleaseTask'\n        }\n      },\n      commonEnvironmentSettings: {\n        required: false,\n        serializedName: 'commonEnvironmentSettings',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'EnvironmentSettingElementType',\n              type: {\n                name: 'Composite',\n                className: 'EnvironmentSetting'\n              }\n          }\n        }\n      },\n      poolInfo: {\n        required: false,\n        serializedName: 'poolInfo',\n        type: {\n          name: 'Composite',\n          className: 'PoolInformation'\n        }\n      },\n      onAllTasksComplete: {\n        required: false,\n        serializedName: 'onAllTasksComplete',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'noAction', 'terminateJob' ]\n        }\n      },\n      onTaskFailure: {\n        required: false,\n        serializedName: 'onTaskFailure',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'noAction', 'performExitOptionsJobAction' ]\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      },\n      executionInfo: {\n        required: false,\n        serializedName: 'executionInfo',\n        type: {\n          name: 'Composite',\n          className: 'JobExecutionInformation'\n        }\n      },\n      stats: {\n        required: false,\n        serializedName: 'stats',\n        type: {\n          name: 'Composite',\n          className: 'JobStatistics'\n        }\n      }\n    }\n  }\n};\n\nexport const JobAddParameter = {\n  required: false,\n  serializedName: 'JobAddParameter',\n  type: {\n    name: 'Composite',\n    className: 'JobAddParameter',\n    modelProperties: {\n      id: {\n        required: true,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      displayName: {\n        required: false,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      priority: {\n        required: false,\n        serializedName: 'priority',\n        type: {\n          name: 'Number'\n        }\n      },\n      constraints: {\n        required: false,\n        serializedName: 'constraints',\n        type: {\n          name: 'Composite',\n          className: 'JobConstraints'\n        }\n      },\n      jobManagerTask: {\n        required: false,\n        serializedName: 'jobManagerTask',\n        type: {\n          name: 'Composite',\n          className: 'JobManagerTask'\n        }\n      },\n      jobPreparationTask: {\n        required: false,\n        serializedName: 'jobPreparationTask',\n        type: {\n          name: 'Composite',\n          className: 'JobPreparationTask'\n        }\n      },\n      jobReleaseTask: {\n        required: false,\n        serializedName: 'jobReleaseTask',\n        type: {\n          name: 'Composite',\n          className: 'JobReleaseTask'\n        }\n      },\n      commonEnvironmentSettings: {\n        required: false,\n        serializedName: 'commonEnvironmentSettings',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'EnvironmentSettingElementType',\n              type: {\n                name: 'Composite',\n                className: 'EnvironmentSetting'\n              }\n          }\n        }\n      },\n      poolInfo: {\n        required: true,\n        serializedName: 'poolInfo',\n        defaultValue: {},\n        type: {\n          name: 'Composite',\n          className: 'PoolInformation'\n        }\n      },\n      onAllTasksComplete: {\n        required: false,\n        serializedName: 'onAllTasksComplete',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'noAction', 'terminateJob' ]\n        }\n      },\n      onTaskFailure: {\n        required: false,\n        serializedName: 'onTaskFailure',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'noAction', 'performExitOptionsJobAction' ]\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      },\n      usesTaskDependencies: {\n        required: false,\n        serializedName: 'usesTaskDependencies',\n        type: {\n          name: 'Boolean'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskContainerExecutionInformation = {\n  required: false,\n  serializedName: 'TaskContainerExecutionInformation',\n  type: {\n    name: 'Composite',\n    className: 'TaskContainerExecutionInformation',\n    modelProperties: {\n      containerId: {\n        required: false,\n        serializedName: 'containerId',\n        type: {\n          name: 'String'\n        }\n      },\n      state: {\n        required: false,\n        serializedName: 'state',\n        type: {\n          name: 'String'\n        }\n      },\n      error: {\n        required: false,\n        serializedName: 'error',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskFailureInformation = {\n  required: false,\n  serializedName: 'TaskFailureInformation',\n  type: {\n    name: 'Composite',\n    className: 'TaskFailureInformation',\n    modelProperties: {\n      category: {\n        required: true,\n        serializedName: 'category',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'userError', 'serverError' ]\n        }\n      },\n      code: {\n        required: false,\n        serializedName: 'code',\n        type: {\n          name: 'String'\n        }\n      },\n      message: {\n        required: false,\n        serializedName: 'message',\n        type: {\n          name: 'String'\n        }\n      },\n      details: {\n        required: false,\n        serializedName: 'details',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'NameValuePairElementType',\n              type: {\n                name: 'Composite',\n                className: 'NameValuePair'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const JobPreparationTaskExecutionInformation = {\n  required: false,\n  serializedName: 'JobPreparationTaskExecutionInformation',\n  type: {\n    name: 'Composite',\n    className: 'JobPreparationTaskExecutionInformation',\n    modelProperties: {\n      startTime: {\n        required: true,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      endTime: {\n        required: false,\n        serializedName: 'endTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      state: {\n        required: true,\n        serializedName: 'state',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'running', 'completed' ]\n        }\n      },\n      taskRootDirectory: {\n        required: false,\n        serializedName: 'taskRootDirectory',\n        type: {\n          name: 'String'\n        }\n      },\n      taskRootDirectoryUrl: {\n        required: false,\n        serializedName: 'taskRootDirectoryUrl',\n        type: {\n          name: 'String'\n        }\n      },\n      exitCode: {\n        required: false,\n        serializedName: 'exitCode',\n        type: {\n          name: 'Number'\n        }\n      },\n      containerInfo: {\n        required: false,\n        serializedName: 'containerInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskContainerExecutionInformation'\n        }\n      },\n      failureInfo: {\n        required: false,\n        serializedName: 'failureInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskFailureInformation'\n        }\n      },\n      retryCount: {\n        required: true,\n        serializedName: 'retryCount',\n        type: {\n          name: 'Number'\n        }\n      },\n      lastRetryTime: {\n        required: false,\n        serializedName: 'lastRetryTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      result: {\n        required: false,\n        serializedName: 'result',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'success', 'failure' ]\n        }\n      }\n    }\n  }\n};\n\nexport const JobReleaseTaskExecutionInformation = {\n  required: false,\n  serializedName: 'JobReleaseTaskExecutionInformation',\n  type: {\n    name: 'Composite',\n    className: 'JobReleaseTaskExecutionInformation',\n    modelProperties: {\n      startTime: {\n        required: true,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      endTime: {\n        required: false,\n        serializedName: 'endTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      state: {\n        required: true,\n        serializedName: 'state',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'running', 'completed' ]\n        }\n      },\n      taskRootDirectory: {\n        required: false,\n        serializedName: 'taskRootDirectory',\n        type: {\n          name: 'String'\n        }\n      },\n      taskRootDirectoryUrl: {\n        required: false,\n        serializedName: 'taskRootDirectoryUrl',\n        type: {\n          name: 'String'\n        }\n      },\n      exitCode: {\n        required: false,\n        serializedName: 'exitCode',\n        type: {\n          name: 'Number'\n        }\n      },\n      containerInfo: {\n        required: false,\n        serializedName: 'containerInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskContainerExecutionInformation'\n        }\n      },\n      failureInfo: {\n        required: false,\n        serializedName: 'failureInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskFailureInformation'\n        }\n      },\n      result: {\n        required: false,\n        serializedName: 'result',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'success', 'failure' ]\n        }\n      }\n    }\n  }\n};\n\nexport const JobPreparationAndReleaseTaskExecutionInformation = {\n  required: false,\n  serializedName: 'JobPreparationAndReleaseTaskExecutionInformation',\n  type: {\n    name: 'Composite',\n    className: 'JobPreparationAndReleaseTaskExecutionInformation',\n    modelProperties: {\n      poolId: {\n        required: false,\n        serializedName: 'poolId',\n        type: {\n          name: 'String'\n        }\n      },\n      nodeId: {\n        required: false,\n        serializedName: 'nodeId',\n        type: {\n          name: 'String'\n        }\n      },\n      nodeUrl: {\n        required: false,\n        serializedName: 'nodeUrl',\n        type: {\n          name: 'String'\n        }\n      },\n      jobPreparationTaskExecutionInfo: {\n        required: false,\n        serializedName: 'jobPreparationTaskExecutionInfo',\n        type: {\n          name: 'Composite',\n          className: 'JobPreparationTaskExecutionInformation'\n        }\n      },\n      jobReleaseTaskExecutionInfo: {\n        required: false,\n        serializedName: 'jobReleaseTaskExecutionInfo',\n        type: {\n          name: 'Composite',\n          className: 'JobReleaseTaskExecutionInformation'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskCounts = {\n  required: false,\n  serializedName: 'TaskCounts',\n  type: {\n    name: 'Composite',\n    className: 'TaskCounts',\n    modelProperties: {\n      active: {\n        required: true,\n        serializedName: 'active',\n        type: {\n          name: 'Number'\n        }\n      },\n      running: {\n        required: true,\n        serializedName: 'running',\n        type: {\n          name: 'Number'\n        }\n      },\n      completed: {\n        required: true,\n        serializedName: 'completed',\n        type: {\n          name: 'Number'\n        }\n      },\n      succeeded: {\n        required: true,\n        serializedName: 'succeeded',\n        type: {\n          name: 'Number'\n        }\n      },\n      failed: {\n        required: true,\n        serializedName: 'failed',\n        type: {\n          name: 'Number'\n        }\n      },\n      validationStatus: {\n        required: true,\n        serializedName: 'validationStatus',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'validated', 'unvalidated' ]\n        }\n      }\n    }\n  }\n};\n\nexport const AutoScaleRunError = {\n  required: false,\n  serializedName: 'AutoScaleRunError',\n  type: {\n    name: 'Composite',\n    className: 'AutoScaleRunError',\n    modelProperties: {\n      code: {\n        required: false,\n        serializedName: 'code',\n        type: {\n          name: 'String'\n        }\n      },\n      message: {\n        required: false,\n        serializedName: 'message',\n        type: {\n          name: 'String'\n        }\n      },\n      values: {\n        required: false,\n        serializedName: 'values',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'NameValuePairElementType',\n              type: {\n                name: 'Composite',\n                className: 'NameValuePair'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AutoScaleRun = {\n  required: false,\n  serializedName: 'AutoScaleRun',\n  type: {\n    name: 'Composite',\n    className: 'AutoScaleRun',\n    modelProperties: {\n      timestamp: {\n        required: true,\n        serializedName: 'timestamp',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      results: {\n        required: false,\n        serializedName: 'results',\n        type: {\n          name: 'String'\n        }\n      },\n      error: {\n        required: false,\n        serializedName: 'error',\n        type: {\n          name: 'Composite',\n          className: 'AutoScaleRunError'\n        }\n      }\n    }\n  }\n};\n\nexport const ResizeError = {\n  required: false,\n  serializedName: 'ResizeError',\n  type: {\n    name: 'Composite',\n    className: 'ResizeError',\n    modelProperties: {\n      code: {\n        required: false,\n        serializedName: 'code',\n        type: {\n          name: 'String'\n        }\n      },\n      message: {\n        required: false,\n        serializedName: 'message',\n        type: {\n          name: 'String'\n        }\n      },\n      values: {\n        required: false,\n        serializedName: 'values',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'NameValuePairElementType',\n              type: {\n                name: 'Composite',\n                className: 'NameValuePair'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CloudPool = {\n  required: false,\n  serializedName: 'CloudPool',\n  type: {\n    name: 'Composite',\n    className: 'CloudPool',\n    modelProperties: {\n      id: {\n        required: false,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      displayName: {\n        required: false,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      url: {\n        required: false,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      },\n      eTag: {\n        required: false,\n        serializedName: 'eTag',\n        type: {\n          name: 'String'\n        }\n      },\n      lastModified: {\n        required: false,\n        serializedName: 'lastModified',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      creationTime: {\n        required: false,\n        serializedName: 'creationTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      state: {\n        required: false,\n        serializedName: 'state',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'active', 'deleting', 'upgrading' ]\n        }\n      },\n      stateTransitionTime: {\n        required: false,\n        serializedName: 'stateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      allocationState: {\n        required: false,\n        serializedName: 'allocationState',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'steady', 'resizing', 'stopping' ]\n        }\n      },\n      allocationStateTransitionTime: {\n        required: false,\n        serializedName: 'allocationStateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      vmSize: {\n        required: false,\n        serializedName: 'vmSize',\n        type: {\n          name: 'String'\n        }\n      },\n      cloudServiceConfiguration: {\n        required: false,\n        serializedName: 'cloudServiceConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'CloudServiceConfiguration'\n        }\n      },\n      virtualMachineConfiguration: {\n        required: false,\n        serializedName: 'virtualMachineConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'VirtualMachineConfiguration'\n        }\n      },\n      resizeTimeout: {\n        required: false,\n        serializedName: 'resizeTimeout',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      resizeErrors: {\n        required: false,\n        serializedName: 'resizeErrors',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ResizeErrorElementType',\n              type: {\n                name: 'Composite',\n                className: 'ResizeError'\n              }\n          }\n        }\n      },\n      currentDedicatedNodes: {\n        required: false,\n        serializedName: 'currentDedicatedNodes',\n        type: {\n          name: 'Number'\n        }\n      },\n      currentLowPriorityNodes: {\n        required: false,\n        serializedName: 'currentLowPriorityNodes',\n        type: {\n          name: 'Number'\n        }\n      },\n      targetDedicatedNodes: {\n        required: false,\n        serializedName: 'targetDedicatedNodes',\n        type: {\n          name: 'Number'\n        }\n      },\n      targetLowPriorityNodes: {\n        required: false,\n        serializedName: 'targetLowPriorityNodes',\n        type: {\n          name: 'Number'\n        }\n      },\n      enableAutoScale: {\n        required: false,\n        serializedName: 'enableAutoScale',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      autoScaleFormula: {\n        required: false,\n        serializedName: 'autoScaleFormula',\n        type: {\n          name: 'String'\n        }\n      },\n      autoScaleEvaluationInterval: {\n        required: false,\n        serializedName: 'autoScaleEvaluationInterval',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      autoScaleRun: {\n        required: false,\n        serializedName: 'autoScaleRun',\n        type: {\n          name: 'Composite',\n          className: 'AutoScaleRun'\n        }\n      },\n      enableInterNodeCommunication: {\n        required: false,\n        serializedName: 'enableInterNodeCommunication',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      networkConfiguration: {\n        required: false,\n        serializedName: 'networkConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'NetworkConfiguration'\n        }\n      },\n      startTask: {\n        required: false,\n        serializedName: 'startTask',\n        type: {\n          name: 'Composite',\n          className: 'StartTask'\n        }\n      },\n      certificateReferences: {\n        required: false,\n        serializedName: 'certificateReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CertificateReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'CertificateReference'\n              }\n          }\n        }\n      },\n      applicationPackageReferences: {\n        required: false,\n        serializedName: 'applicationPackageReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ApplicationPackageReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'ApplicationPackageReference'\n              }\n          }\n        }\n      },\n      applicationLicenses: {\n        required: false,\n        serializedName: 'applicationLicenses',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'stringElementType',\n              type: {\n                name: 'String'\n              }\n          }\n        }\n      },\n      maxTasksPerNode: {\n        required: false,\n        serializedName: 'maxTasksPerNode',\n        type: {\n          name: 'Number'\n        }\n      },\n      taskSchedulingPolicy: {\n        required: false,\n        serializedName: 'taskSchedulingPolicy',\n        type: {\n          name: 'Composite',\n          className: 'TaskSchedulingPolicy'\n        }\n      },\n      userAccounts: {\n        required: false,\n        serializedName: 'userAccounts',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'UserAccountElementType',\n              type: {\n                name: 'Composite',\n                className: 'UserAccount'\n              }\n          }\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      },\n      stats: {\n        required: false,\n        serializedName: 'stats',\n        type: {\n          name: 'Composite',\n          className: 'PoolStatistics'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolAddParameter = {\n  required: false,\n  serializedName: 'PoolAddParameter',\n  type: {\n    name: 'Composite',\n    className: 'PoolAddParameter',\n    modelProperties: {\n      id: {\n        required: true,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      displayName: {\n        required: false,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      vmSize: {\n        required: true,\n        serializedName: 'vmSize',\n        type: {\n          name: 'String'\n        }\n      },\n      cloudServiceConfiguration: {\n        required: false,\n        serializedName: 'cloudServiceConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'CloudServiceConfiguration'\n        }\n      },\n      virtualMachineConfiguration: {\n        required: false,\n        serializedName: 'virtualMachineConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'VirtualMachineConfiguration'\n        }\n      },\n      resizeTimeout: {\n        required: false,\n        serializedName: 'resizeTimeout',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      targetDedicatedNodes: {\n        required: false,\n        serializedName: 'targetDedicatedNodes',\n        type: {\n          name: 'Number'\n        }\n      },\n      targetLowPriorityNodes: {\n        required: false,\n        serializedName: 'targetLowPriorityNodes',\n        type: {\n          name: 'Number'\n        }\n      },\n      enableAutoScale: {\n        required: false,\n        serializedName: 'enableAutoScale',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      autoScaleFormula: {\n        required: false,\n        serializedName: 'autoScaleFormula',\n        type: {\n          name: 'String'\n        }\n      },\n      autoScaleEvaluationInterval: {\n        required: false,\n        serializedName: 'autoScaleEvaluationInterval',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      enableInterNodeCommunication: {\n        required: false,\n        serializedName: 'enableInterNodeCommunication',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      networkConfiguration: {\n        required: false,\n        serializedName: 'networkConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'NetworkConfiguration'\n        }\n      },\n      startTask: {\n        required: false,\n        serializedName: 'startTask',\n        type: {\n          name: 'Composite',\n          className: 'StartTask'\n        }\n      },\n      certificateReferences: {\n        required: false,\n        serializedName: 'certificateReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CertificateReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'CertificateReference'\n              }\n          }\n        }\n      },\n      applicationPackageReferences: {\n        required: false,\n        serializedName: 'applicationPackageReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ApplicationPackageReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'ApplicationPackageReference'\n              }\n          }\n        }\n      },\n      applicationLicenses: {\n        required: false,\n        serializedName: 'applicationLicenses',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'stringElementType',\n              type: {\n                name: 'String'\n              }\n          }\n        }\n      },\n      maxTasksPerNode: {\n        required: false,\n        serializedName: 'maxTasksPerNode',\n        type: {\n          name: 'Number'\n        }\n      },\n      taskSchedulingPolicy: {\n        required: false,\n        serializedName: 'taskSchedulingPolicy',\n        type: {\n          name: 'Composite',\n          className: 'TaskSchedulingPolicy'\n        }\n      },\n      userAccounts: {\n        required: false,\n        serializedName: 'userAccounts',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'UserAccountElementType',\n              type: {\n                name: 'Composite',\n                className: 'UserAccount'\n              }\n          }\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AffinityInformation = {\n  required: false,\n  serializedName: 'AffinityInformation',\n  type: {\n    name: 'Composite',\n    className: 'AffinityInformation',\n    modelProperties: {\n      affinityId: {\n        required: true,\n        serializedName: 'affinityId',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskExecutionInformation = {\n  required: false,\n  serializedName: 'TaskExecutionInformation',\n  type: {\n    name: 'Composite',\n    className: 'TaskExecutionInformation',\n    modelProperties: {\n      startTime: {\n        required: false,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      endTime: {\n        required: false,\n        serializedName: 'endTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      exitCode: {\n        required: false,\n        serializedName: 'exitCode',\n        type: {\n          name: 'Number'\n        }\n      },\n      containerInfo: {\n        required: false,\n        serializedName: 'containerInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskContainerExecutionInformation'\n        }\n      },\n      failureInfo: {\n        required: false,\n        serializedName: 'failureInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskFailureInformation'\n        }\n      },\n      retryCount: {\n        required: true,\n        serializedName: 'retryCount',\n        type: {\n          name: 'Number'\n        }\n      },\n      lastRetryTime: {\n        required: false,\n        serializedName: 'lastRetryTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      requeueCount: {\n        required: true,\n        serializedName: 'requeueCount',\n        type: {\n          name: 'Number'\n        }\n      },\n      lastRequeueTime: {\n        required: false,\n        serializedName: 'lastRequeueTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      result: {\n        required: false,\n        serializedName: 'result',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'success', 'failure' ]\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeInformation = {\n  required: false,\n  serializedName: 'ComputeNodeInformation',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeInformation',\n    modelProperties: {\n      affinityId: {\n        required: false,\n        serializedName: 'affinityId',\n        type: {\n          name: 'String'\n        }\n      },\n      nodeUrl: {\n        required: false,\n        serializedName: 'nodeUrl',\n        type: {\n          name: 'String'\n        }\n      },\n      poolId: {\n        required: false,\n        serializedName: 'poolId',\n        type: {\n          name: 'String'\n        }\n      },\n      nodeId: {\n        required: false,\n        serializedName: 'nodeId',\n        type: {\n          name: 'String'\n        }\n      },\n      taskRootDirectory: {\n        required: false,\n        serializedName: 'taskRootDirectory',\n        type: {\n          name: 'String'\n        }\n      },\n      taskRootDirectoryUrl: {\n        required: false,\n        serializedName: 'taskRootDirectoryUrl',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const MultiInstanceSettings = {\n  required: false,\n  serializedName: 'MultiInstanceSettings',\n  type: {\n    name: 'Composite',\n    className: 'MultiInstanceSettings',\n    modelProperties: {\n      numberOfInstances: {\n        required: false,\n        serializedName: 'numberOfInstances',\n        type: {\n          name: 'Number'\n        }\n      },\n      coordinationCommandLine: {\n        required: true,\n        serializedName: 'coordinationCommandLine',\n        type: {\n          name: 'String'\n        }\n      },\n      commonResourceFiles: {\n        required: false,\n        serializedName: 'commonResourceFiles',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ResourceFileElementType',\n              type: {\n                name: 'Composite',\n                className: 'ResourceFile'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TaskStatistics = {\n  required: false,\n  serializedName: 'TaskStatistics',\n  type: {\n    name: 'Composite',\n    className: 'TaskStatistics',\n    modelProperties: {\n      url: {\n        required: true,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      },\n      startTime: {\n        required: true,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      lastUpdateTime: {\n        required: true,\n        serializedName: 'lastUpdateTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      userCPUTime: {\n        required: true,\n        serializedName: 'userCPUTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      kernelCPUTime: {\n        required: true,\n        serializedName: 'kernelCPUTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      wallClockTime: {\n        required: true,\n        serializedName: 'wallClockTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      readIOps: {\n        required: true,\n        serializedName: 'readIOps',\n        type: {\n          name: 'Number'\n        }\n      },\n      writeIOps: {\n        required: true,\n        serializedName: 'writeIOps',\n        type: {\n          name: 'Number'\n        }\n      },\n      readIOGiB: {\n        required: true,\n        serializedName: 'readIOGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      writeIOGiB: {\n        required: true,\n        serializedName: 'writeIOGiB',\n        type: {\n          name: 'Number'\n        }\n      },\n      waitTime: {\n        required: true,\n        serializedName: 'waitTime',\n        type: {\n          name: 'TimeSpan'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskIdRange = {\n  required: false,\n  serializedName: 'TaskIdRange',\n  type: {\n    name: 'Composite',\n    className: 'TaskIdRange',\n    modelProperties: {\n      start: {\n        required: true,\n        serializedName: 'start',\n        type: {\n          name: 'Number'\n        }\n      },\n      end: {\n        required: true,\n        serializedName: 'end',\n        type: {\n          name: 'Number'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskDependencies = {\n  required: false,\n  serializedName: 'TaskDependencies',\n  type: {\n    name: 'Composite',\n    className: 'TaskDependencies',\n    modelProperties: {\n      taskIds: {\n        required: false,\n        serializedName: 'taskIds',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'stringElementType',\n              type: {\n                name: 'String'\n              }\n          }\n        }\n      },\n      taskIdRanges: {\n        required: false,\n        serializedName: 'taskIdRanges',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'TaskIdRangeElementType',\n              type: {\n                name: 'Composite',\n                className: 'TaskIdRange'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CloudTask = {\n  required: false,\n  serializedName: 'CloudTask',\n  type: {\n    name: 'Composite',\n    className: 'CloudTask',\n    modelProperties: {\n      id: {\n        required: false,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      displayName: {\n        required: false,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      url: {\n        required: false,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      },\n      eTag: {\n        required: false,\n        serializedName: 'eTag',\n        type: {\n          name: 'String'\n        }\n      },\n      lastModified: {\n        required: false,\n        serializedName: 'lastModified',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      creationTime: {\n        required: false,\n        serializedName: 'creationTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      exitConditions: {\n        required: false,\n        serializedName: 'exitConditions',\n        type: {\n          name: 'Composite',\n          className: 'ExitConditions'\n        }\n      },\n      state: {\n        required: false,\n        serializedName: 'state',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'active', 'preparing', 'running', 'completed' ]\n        }\n      },\n      stateTransitionTime: {\n        required: false,\n        serializedName: 'stateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      previousState: {\n        required: false,\n        serializedName: 'previousState',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'active', 'preparing', 'running', 'completed' ]\n        }\n      },\n      previousStateTransitionTime: {\n        required: false,\n        serializedName: 'previousStateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      commandLine: {\n        required: false,\n        serializedName: 'commandLine',\n        type: {\n          name: 'String'\n        }\n      },\n      containerSettings: {\n        required: false,\n        serializedName: 'containerSettings',\n        type: {\n          name: 'Composite',\n          className: 'TaskContainerSettings'\n        }\n      },\n      resourceFiles: {\n        required: false,\n        serializedName: 'resourceFiles',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ResourceFileElementType',\n              type: {\n                name: 'Composite',\n                className: 'ResourceFile'\n              }\n          }\n        }\n      },\n      outputFiles: {\n        required: false,\n        serializedName: 'outputFiles',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'OutputFileElementType',\n              type: {\n                name: 'Composite',\n                className: 'OutputFile'\n              }\n          }\n        }\n      },\n      environmentSettings: {\n        required: false,\n        serializedName: 'environmentSettings',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'EnvironmentSettingElementType',\n              type: {\n                name: 'Composite',\n                className: 'EnvironmentSetting'\n              }\n          }\n        }\n      },\n      affinityInfo: {\n        required: false,\n        serializedName: 'affinityInfo',\n        type: {\n          name: 'Composite',\n          className: 'AffinityInformation'\n        }\n      },\n      constraints: {\n        required: false,\n        serializedName: 'constraints',\n        type: {\n          name: 'Composite',\n          className: 'TaskConstraints'\n        }\n      },\n      userIdentity: {\n        required: false,\n        serializedName: 'userIdentity',\n        type: {\n          name: 'Composite',\n          className: 'UserIdentity'\n        }\n      },\n      executionInfo: {\n        required: false,\n        serializedName: 'executionInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskExecutionInformation'\n        }\n      },\n      nodeInfo: {\n        required: false,\n        serializedName: 'nodeInfo',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeInformation'\n        }\n      },\n      multiInstanceSettings: {\n        required: false,\n        serializedName: 'multiInstanceSettings',\n        type: {\n          name: 'Composite',\n          className: 'MultiInstanceSettings'\n        }\n      },\n      stats: {\n        required: false,\n        serializedName: 'stats',\n        type: {\n          name: 'Composite',\n          className: 'TaskStatistics'\n        }\n      },\n      dependsOn: {\n        required: false,\n        serializedName: 'dependsOn',\n        type: {\n          name: 'Composite',\n          className: 'TaskDependencies'\n        }\n      },\n      applicationPackageReferences: {\n        required: false,\n        serializedName: 'applicationPackageReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ApplicationPackageReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'ApplicationPackageReference'\n              }\n          }\n        }\n      },\n      authenticationTokenSettings: {\n        required: false,\n        serializedName: 'authenticationTokenSettings',\n        type: {\n          name: 'Composite',\n          className: 'AuthenticationTokenSettings'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskAddParameter = {\n  required: false,\n  serializedName: 'TaskAddParameter',\n  type: {\n    name: 'Composite',\n    className: 'TaskAddParameter',\n    modelProperties: {\n      id: {\n        required: true,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      displayName: {\n        required: false,\n        serializedName: 'displayName',\n        type: {\n          name: 'String'\n        }\n      },\n      commandLine: {\n        required: true,\n        serializedName: 'commandLine',\n        type: {\n          name: 'String'\n        }\n      },\n      containerSettings: {\n        required: false,\n        serializedName: 'containerSettings',\n        type: {\n          name: 'Composite',\n          className: 'TaskContainerSettings'\n        }\n      },\n      exitConditions: {\n        required: false,\n        serializedName: 'exitConditions',\n        type: {\n          name: 'Composite',\n          className: 'ExitConditions'\n        }\n      },\n      resourceFiles: {\n        required: false,\n        serializedName: 'resourceFiles',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ResourceFileElementType',\n              type: {\n                name: 'Composite',\n                className: 'ResourceFile'\n              }\n          }\n        }\n      },\n      outputFiles: {\n        required: false,\n        serializedName: 'outputFiles',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'OutputFileElementType',\n              type: {\n                name: 'Composite',\n                className: 'OutputFile'\n              }\n          }\n        }\n      },\n      environmentSettings: {\n        required: false,\n        serializedName: 'environmentSettings',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'EnvironmentSettingElementType',\n              type: {\n                name: 'Composite',\n                className: 'EnvironmentSetting'\n              }\n          }\n        }\n      },\n      affinityInfo: {\n        required: false,\n        serializedName: 'affinityInfo',\n        type: {\n          name: 'Composite',\n          className: 'AffinityInformation'\n        }\n      },\n      constraints: {\n        required: false,\n        serializedName: 'constraints',\n        type: {\n          name: 'Composite',\n          className: 'TaskConstraints'\n        }\n      },\n      userIdentity: {\n        required: false,\n        serializedName: 'userIdentity',\n        type: {\n          name: 'Composite',\n          className: 'UserIdentity'\n        }\n      },\n      multiInstanceSettings: {\n        required: false,\n        serializedName: 'multiInstanceSettings',\n        type: {\n          name: 'Composite',\n          className: 'MultiInstanceSettings'\n        }\n      },\n      dependsOn: {\n        required: false,\n        serializedName: 'dependsOn',\n        type: {\n          name: 'Composite',\n          className: 'TaskDependencies'\n        }\n      },\n      applicationPackageReferences: {\n        required: false,\n        serializedName: 'applicationPackageReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ApplicationPackageReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'ApplicationPackageReference'\n              }\n          }\n        }\n      },\n      authenticationTokenSettings: {\n        required: false,\n        serializedName: 'authenticationTokenSettings',\n        type: {\n          name: 'Composite',\n          className: 'AuthenticationTokenSettings'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskAddCollectionParameter = {\n  required: false,\n  serializedName: 'TaskAddCollectionParameter',\n  type: {\n    name: 'Composite',\n    className: 'TaskAddCollectionParameter',\n    modelProperties: {\n      value: {\n        required: true,\n        serializedName: 'value',\n        constraints: {\n          MaxItems: 100\n        },\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'TaskAddParameterElementType',\n              type: {\n                name: 'Composite',\n                className: 'TaskAddParameter'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorMessage = {\n  required: false,\n  serializedName: 'ErrorMessage',\n  type: {\n    name: 'Composite',\n    className: 'ErrorMessage',\n    modelProperties: {\n      lang: {\n        required: false,\n        serializedName: 'lang',\n        type: {\n          name: 'String'\n        }\n      },\n      value: {\n        required: false,\n        serializedName: 'value',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const BatchErrorDetail = {\n  required: false,\n  serializedName: 'BatchErrorDetail',\n  type: {\n    name: 'Composite',\n    className: 'BatchErrorDetail',\n    modelProperties: {\n      key: {\n        required: false,\n        serializedName: 'key',\n        type: {\n          name: 'String'\n        }\n      },\n      value: {\n        required: false,\n        serializedName: 'value',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const BatchError = {\n  required: false,\n  serializedName: 'BatchError',\n  type: {\n    name: 'Composite',\n    className: 'BatchError',\n    modelProperties: {\n      code: {\n        required: false,\n        serializedName: 'code',\n        type: {\n          name: 'String'\n        }\n      },\n      message: {\n        required: false,\n        serializedName: 'message',\n        type: {\n          name: 'Composite',\n          className: 'ErrorMessage'\n        }\n      },\n      values: {\n        required: false,\n        serializedName: 'values',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'BatchErrorDetailElementType',\n              type: {\n                name: 'Composite',\n                className: 'BatchErrorDetail'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TaskAddResult = {\n  required: false,\n  serializedName: 'TaskAddResult',\n  type: {\n    name: 'Composite',\n    className: 'TaskAddResult',\n    modelProperties: {\n      status: {\n        required: true,\n        serializedName: 'status',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'success', 'clientError', 'serverError' ]\n        }\n      },\n      taskId: {\n        required: true,\n        serializedName: 'taskId',\n        type: {\n          name: 'String'\n        }\n      },\n      eTag: {\n        required: false,\n        serializedName: 'eTag',\n        type: {\n          name: 'String'\n        }\n      },\n      lastModified: {\n        required: false,\n        serializedName: 'lastModified',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      location: {\n        required: false,\n        serializedName: 'location',\n        type: {\n          name: 'String'\n        }\n      },\n      error: {\n        required: false,\n        serializedName: 'error',\n        type: {\n          name: 'Composite',\n          className: 'BatchError'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskAddCollectionResult = {\n  required: false,\n  serializedName: 'TaskAddCollectionResult',\n  type: {\n    name: 'Composite',\n    className: 'TaskAddCollectionResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: 'value',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'TaskAddResultElementType',\n              type: {\n                name: 'Composite',\n                className: 'TaskAddResult'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SubtaskInformation = {\n  required: false,\n  serializedName: 'SubtaskInformation',\n  type: {\n    name: 'Composite',\n    className: 'SubtaskInformation',\n    modelProperties: {\n      id: {\n        required: false,\n        serializedName: 'id',\n        type: {\n          name: 'Number'\n        }\n      },\n      nodeInfo: {\n        required: false,\n        serializedName: 'nodeInfo',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeInformation'\n        }\n      },\n      startTime: {\n        required: false,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      endTime: {\n        required: false,\n        serializedName: 'endTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      exitCode: {\n        required: false,\n        serializedName: 'exitCode',\n        type: {\n          name: 'Number'\n        }\n      },\n      containerInfo: {\n        required: false,\n        serializedName: 'containerInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskContainerExecutionInformation'\n        }\n      },\n      failureInfo: {\n        required: false,\n        serializedName: 'failureInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskFailureInformation'\n        }\n      },\n      state: {\n        required: false,\n        serializedName: 'state',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'preparing', 'running', 'completed' ]\n        }\n      },\n      stateTransitionTime: {\n        required: false,\n        serializedName: 'stateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      previousState: {\n        required: false,\n        serializedName: 'previousState',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'preparing', 'running', 'completed' ]\n        }\n      },\n      previousStateTransitionTime: {\n        required: false,\n        serializedName: 'previousStateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      result: {\n        required: false,\n        serializedName: 'result',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'success', 'failure' ]\n        }\n      }\n    }\n  }\n};\n\nexport const CloudTaskListSubtasksResult = {\n  required: false,\n  serializedName: 'CloudTaskListSubtasksResult',\n  type: {\n    name: 'Composite',\n    className: 'CloudTaskListSubtasksResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: 'value',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'SubtaskInformationElementType',\n              type: {\n                name: 'Composite',\n                className: 'SubtaskInformation'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TaskInformation = {\n  required: false,\n  serializedName: 'TaskInformation',\n  type: {\n    name: 'Composite',\n    className: 'TaskInformation',\n    modelProperties: {\n      taskUrl: {\n        required: false,\n        serializedName: 'taskUrl',\n        type: {\n          name: 'String'\n        }\n      },\n      jobId: {\n        required: false,\n        serializedName: 'jobId',\n        type: {\n          name: 'String'\n        }\n      },\n      taskId: {\n        required: false,\n        serializedName: 'taskId',\n        type: {\n          name: 'String'\n        }\n      },\n      subtaskId: {\n        required: false,\n        serializedName: 'subtaskId',\n        type: {\n          name: 'Number'\n        }\n      },\n      taskState: {\n        required: true,\n        serializedName: 'taskState',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'active', 'preparing', 'running', 'completed' ]\n        }\n      },\n      executionInfo: {\n        required: false,\n        serializedName: 'executionInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskExecutionInformation'\n        }\n      }\n    }\n  }\n};\n\nexport const StartTaskInformation = {\n  required: false,\n  serializedName: 'StartTaskInformation',\n  type: {\n    name: 'Composite',\n    className: 'StartTaskInformation',\n    modelProperties: {\n      state: {\n        required: true,\n        serializedName: 'state',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'running', 'completed' ]\n        }\n      },\n      startTime: {\n        required: true,\n        serializedName: 'startTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      endTime: {\n        required: false,\n        serializedName: 'endTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      exitCode: {\n        required: false,\n        serializedName: 'exitCode',\n        type: {\n          name: 'Number'\n        }\n      },\n      containerInfo: {\n        required: false,\n        serializedName: 'containerInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskContainerExecutionInformation'\n        }\n      },\n      failureInfo: {\n        required: false,\n        serializedName: 'failureInfo',\n        type: {\n          name: 'Composite',\n          className: 'TaskFailureInformation'\n        }\n      },\n      retryCount: {\n        required: true,\n        serializedName: 'retryCount',\n        type: {\n          name: 'Number'\n        }\n      },\n      lastRetryTime: {\n        required: false,\n        serializedName: 'lastRetryTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      result: {\n        required: false,\n        serializedName: 'result',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'success', 'failure' ]\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeError = {\n  required: false,\n  serializedName: 'ComputeNodeError',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeError',\n    modelProperties: {\n      code: {\n        required: false,\n        serializedName: 'code',\n        type: {\n          name: 'String'\n        }\n      },\n      message: {\n        required: false,\n        serializedName: 'message',\n        type: {\n          name: 'String'\n        }\n      },\n      errorDetails: {\n        required: false,\n        serializedName: 'errorDetails',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'NameValuePairElementType',\n              type: {\n                name: 'Composite',\n                className: 'NameValuePair'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InboundEndpoint = {\n  required: false,\n  serializedName: 'InboundEndpoint',\n  type: {\n    name: 'Composite',\n    className: 'InboundEndpoint',\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: 'name',\n        type: {\n          name: 'String'\n        }\n      },\n      protocol: {\n        required: true,\n        serializedName: 'protocol',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'tcp', 'udp' ]\n        }\n      },\n      publicIPAddress: {\n        required: true,\n        serializedName: 'publicIPAddress',\n        type: {\n          name: 'String'\n        }\n      },\n      publicFQDN: {\n        required: true,\n        serializedName: 'publicFQDN',\n        type: {\n          name: 'String'\n        }\n      },\n      frontendPort: {\n        required: true,\n        serializedName: 'frontendPort',\n        type: {\n          name: 'Number'\n        }\n      },\n      backendPort: {\n        required: true,\n        serializedName: 'backendPort',\n        type: {\n          name: 'Number'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeEndpointConfiguration = {\n  required: false,\n  serializedName: 'ComputeNodeEndpointConfiguration',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeEndpointConfiguration',\n    modelProperties: {\n      inboundEndpoints: {\n        required: true,\n        serializedName: 'inboundEndpoints',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'InboundEndpointElementType',\n              type: {\n                name: 'Composite',\n                className: 'InboundEndpoint'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNode = {\n  required: false,\n  serializedName: 'ComputeNode',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNode',\n    modelProperties: {\n      id: {\n        required: false,\n        serializedName: 'id',\n        type: {\n          name: 'String'\n        }\n      },\n      url: {\n        required: false,\n        serializedName: 'url',\n        type: {\n          name: 'String'\n        }\n      },\n      state: {\n        required: false,\n        serializedName: 'state',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'idle', 'rebooting', 'reimaging', 'running', 'unusable', 'creating', 'starting', 'waitingForStartTask', 'startTaskFailed', 'unknown', 'leavingPool', 'offline', 'preempted' ]\n        }\n      },\n      schedulingState: {\n        required: false,\n        serializedName: 'schedulingState',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'enabled', 'disabled' ]\n        }\n      },\n      stateTransitionTime: {\n        required: false,\n        serializedName: 'stateTransitionTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      lastBootTime: {\n        required: false,\n        serializedName: 'lastBootTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      allocationTime: {\n        required: false,\n        serializedName: 'allocationTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      ipAddress: {\n        required: false,\n        serializedName: 'ipAddress',\n        type: {\n          name: 'String'\n        }\n      },\n      affinityId: {\n        required: false,\n        serializedName: 'affinityId',\n        type: {\n          name: 'String'\n        }\n      },\n      vmSize: {\n        required: false,\n        serializedName: 'vmSize',\n        type: {\n          name: 'String'\n        }\n      },\n      totalTasksRun: {\n        required: false,\n        serializedName: 'totalTasksRun',\n        type: {\n          name: 'Number'\n        }\n      },\n      runningTasksCount: {\n        required: false,\n        serializedName: 'runningTasksCount',\n        type: {\n          name: 'Number'\n        }\n      },\n      totalTasksSucceeded: {\n        required: false,\n        serializedName: 'totalTasksSucceeded',\n        type: {\n          name: 'Number'\n        }\n      },\n      recentTasks: {\n        required: false,\n        serializedName: 'recentTasks',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'TaskInformationElementType',\n              type: {\n                name: 'Composite',\n                className: 'TaskInformation'\n              }\n          }\n        }\n      },\n      startTask: {\n        required: false,\n        serializedName: 'startTask',\n        type: {\n          name: 'Composite',\n          className: 'StartTask'\n        }\n      },\n      startTaskInfo: {\n        required: false,\n        serializedName: 'startTaskInfo',\n        type: {\n          name: 'Composite',\n          className: 'StartTaskInformation'\n        }\n      },\n      certificateReferences: {\n        required: false,\n        serializedName: 'certificateReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CertificateReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'CertificateReference'\n              }\n          }\n        }\n      },\n      errors: {\n        required: false,\n        serializedName: 'errors',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ComputeNodeErrorElementType',\n              type: {\n                name: 'Composite',\n                className: 'ComputeNodeError'\n              }\n          }\n        }\n      },\n      isDedicated: {\n        required: false,\n        serializedName: 'isDedicated',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      endpointConfiguration: {\n        required: false,\n        serializedName: 'endpointConfiguration',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeEndpointConfiguration'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeUser = {\n  required: false,\n  serializedName: 'ComputeNodeUser',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeUser',\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: 'name',\n        type: {\n          name: 'String'\n        }\n      },\n      isAdmin: {\n        required: false,\n        serializedName: 'isAdmin',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      expiryTime: {\n        required: false,\n        serializedName: 'expiryTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      password: {\n        required: false,\n        serializedName: 'password',\n        type: {\n          name: 'String'\n        }\n      },\n      sshPublicKey: {\n        required: false,\n        serializedName: 'sshPublicKey',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeGetRemoteLoginSettingsResult = {\n  required: false,\n  serializedName: 'ComputeNodeGetRemoteLoginSettingsResult',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeGetRemoteLoginSettingsResult',\n    modelProperties: {\n      remoteLoginIPAddress: {\n        required: true,\n        serializedName: 'remoteLoginIPAddress',\n        type: {\n          name: 'String'\n        }\n      },\n      remoteLoginPort: {\n        required: true,\n        serializedName: 'remoteLoginPort',\n        type: {\n          name: 'Number'\n        }\n      }\n    }\n  }\n};\n\nexport const JobSchedulePatchParameter = {\n  required: false,\n  serializedName: 'JobSchedulePatchParameter',\n  type: {\n    name: 'Composite',\n    className: 'JobSchedulePatchParameter',\n    modelProperties: {\n      schedule: {\n        required: false,\n        serializedName: 'schedule',\n        type: {\n          name: 'Composite',\n          className: 'Schedule'\n        }\n      },\n      jobSpecification: {\n        required: false,\n        serializedName: 'jobSpecification',\n        type: {\n          name: 'Composite',\n          className: 'JobSpecification'\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleUpdateParameter = {\n  required: false,\n  serializedName: 'JobScheduleUpdateParameter',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleUpdateParameter',\n    modelProperties: {\n      schedule: {\n        required: true,\n        serializedName: 'schedule',\n        type: {\n          name: 'Composite',\n          className: 'Schedule'\n        }\n      },\n      jobSpecification: {\n        required: true,\n        serializedName: 'jobSpecification',\n        defaultValue: {},\n        type: {\n          name: 'Composite',\n          className: 'JobSpecification'\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const JobDisableParameter = {\n  required: false,\n  serializedName: 'JobDisableParameter',\n  type: {\n    name: 'Composite',\n    className: 'JobDisableParameter',\n    modelProperties: {\n      disableTasks: {\n        required: true,\n        serializedName: 'disableTasks',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'requeue', 'terminate', 'wait' ]\n        }\n      }\n    }\n  }\n};\n\nexport const JobTerminateParameter = {\n  required: false,\n  serializedName: 'JobTerminateParameter',\n  type: {\n    name: 'Composite',\n    className: 'JobTerminateParameter',\n    modelProperties: {\n      terminateReason: {\n        required: false,\n        serializedName: 'terminateReason',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const JobPatchParameter = {\n  required: false,\n  serializedName: 'JobPatchParameter',\n  type: {\n    name: 'Composite',\n    className: 'JobPatchParameter',\n    modelProperties: {\n      priority: {\n        required: false,\n        serializedName: 'priority',\n        type: {\n          name: 'Number'\n        }\n      },\n      onAllTasksComplete: {\n        required: false,\n        serializedName: 'onAllTasksComplete',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'noAction', 'terminateJob' ]\n        }\n      },\n      constraints: {\n        required: false,\n        serializedName: 'constraints',\n        type: {\n          name: 'Composite',\n          className: 'JobConstraints'\n        }\n      },\n      poolInfo: {\n        required: false,\n        serializedName: 'poolInfo',\n        type: {\n          name: 'Composite',\n          className: 'PoolInformation'\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const JobUpdateParameter = {\n  required: false,\n  serializedName: 'JobUpdateParameter',\n  type: {\n    name: 'Composite',\n    className: 'JobUpdateParameter',\n    modelProperties: {\n      priority: {\n        required: false,\n        serializedName: 'priority',\n        type: {\n          name: 'Number'\n        }\n      },\n      constraints: {\n        required: false,\n        serializedName: 'constraints',\n        type: {\n          name: 'Composite',\n          className: 'JobConstraints'\n        }\n      },\n      poolInfo: {\n        required: true,\n        serializedName: 'poolInfo',\n        defaultValue: {},\n        type: {\n          name: 'Composite',\n          className: 'PoolInformation'\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      },\n      onAllTasksComplete: {\n        required: false,\n        serializedName: 'onAllTasksComplete',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'noAction', 'terminateJob' ]\n        }\n      }\n    }\n  }\n};\n\nexport const PoolEnableAutoScaleParameter = {\n  required: false,\n  serializedName: 'PoolEnableAutoScaleParameter',\n  type: {\n    name: 'Composite',\n    className: 'PoolEnableAutoScaleParameter',\n    modelProperties: {\n      autoScaleFormula: {\n        required: false,\n        serializedName: 'autoScaleFormula',\n        type: {\n          name: 'String'\n        }\n      },\n      autoScaleEvaluationInterval: {\n        required: false,\n        serializedName: 'autoScaleEvaluationInterval',\n        type: {\n          name: 'TimeSpan'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolEvaluateAutoScaleParameter = {\n  required: false,\n  serializedName: 'PoolEvaluateAutoScaleParameter',\n  type: {\n    name: 'Composite',\n    className: 'PoolEvaluateAutoScaleParameter',\n    modelProperties: {\n      autoScaleFormula: {\n        required: true,\n        serializedName: 'autoScaleFormula',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolResizeParameter = {\n  required: false,\n  serializedName: 'PoolResizeParameter',\n  type: {\n    name: 'Composite',\n    className: 'PoolResizeParameter',\n    modelProperties: {\n      targetDedicatedNodes: {\n        required: false,\n        serializedName: 'targetDedicatedNodes',\n        type: {\n          name: 'Number'\n        }\n      },\n      targetLowPriorityNodes: {\n        required: false,\n        serializedName: 'targetLowPriorityNodes',\n        type: {\n          name: 'Number'\n        }\n      },\n      resizeTimeout: {\n        required: false,\n        serializedName: 'resizeTimeout',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      nodeDeallocationOption: {\n        required: false,\n        serializedName: 'nodeDeallocationOption',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'requeue', 'terminate', 'taskCompletion', 'retainedData' ]\n        }\n      }\n    }\n  }\n};\n\nexport const PoolUpdatePropertiesParameter = {\n  required: false,\n  serializedName: 'PoolUpdatePropertiesParameter',\n  type: {\n    name: 'Composite',\n    className: 'PoolUpdatePropertiesParameter',\n    modelProperties: {\n      startTask: {\n        required: false,\n        serializedName: 'startTask',\n        type: {\n          name: 'Composite',\n          className: 'StartTask'\n        }\n      },\n      certificateReferences: {\n        required: true,\n        serializedName: 'certificateReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CertificateReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'CertificateReference'\n              }\n          }\n        }\n      },\n      applicationPackageReferences: {\n        required: true,\n        serializedName: 'applicationPackageReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ApplicationPackageReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'ApplicationPackageReference'\n              }\n          }\n        }\n      },\n      metadata: {\n        required: true,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PoolUpgradeOSParameter = {\n  required: false,\n  serializedName: 'PoolUpgradeOSParameter',\n  type: {\n    name: 'Composite',\n    className: 'PoolUpgradeOSParameter',\n    modelProperties: {\n      targetOSVersion: {\n        required: true,\n        serializedName: 'targetOSVersion',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolPatchParameter = {\n  required: false,\n  serializedName: 'PoolPatchParameter',\n  type: {\n    name: 'Composite',\n    className: 'PoolPatchParameter',\n    modelProperties: {\n      startTask: {\n        required: false,\n        serializedName: 'startTask',\n        type: {\n          name: 'Composite',\n          className: 'StartTask'\n        }\n      },\n      certificateReferences: {\n        required: false,\n        serializedName: 'certificateReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CertificateReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'CertificateReference'\n              }\n          }\n        }\n      },\n      applicationPackageReferences: {\n        required: false,\n        serializedName: 'applicationPackageReferences',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ApplicationPackageReferenceElementType',\n              type: {\n                name: 'Composite',\n                className: 'ApplicationPackageReference'\n              }\n          }\n        }\n      },\n      metadata: {\n        required: false,\n        serializedName: 'metadata',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'MetadataItemElementType',\n              type: {\n                name: 'Composite',\n                className: 'MetadataItem'\n              }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TaskUpdateParameter = {\n  required: false,\n  serializedName: 'TaskUpdateParameter',\n  type: {\n    name: 'Composite',\n    className: 'TaskUpdateParameter',\n    modelProperties: {\n      constraints: {\n        required: false,\n        serializedName: 'constraints',\n        type: {\n          name: 'Composite',\n          className: 'TaskConstraints'\n        }\n      }\n    }\n  }\n};\n\nexport const NodeUpdateUserParameter = {\n  required: false,\n  serializedName: 'NodeUpdateUserParameter',\n  type: {\n    name: 'Composite',\n    className: 'NodeUpdateUserParameter',\n    modelProperties: {\n      password: {\n        required: false,\n        serializedName: 'password',\n        type: {\n          name: 'String'\n        }\n      },\n      expiryTime: {\n        required: false,\n        serializedName: 'expiryTime',\n        type: {\n          name: 'DateTime'\n        }\n      },\n      sshPublicKey: {\n        required: false,\n        serializedName: 'sshPublicKey',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const NodeRebootParameter = {\n  required: false,\n  serializedName: 'NodeRebootParameter',\n  type: {\n    name: 'Composite',\n    className: 'NodeRebootParameter',\n    modelProperties: {\n      nodeRebootOption: {\n        required: false,\n        serializedName: 'nodeRebootOption',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'requeue', 'terminate', 'taskCompletion', 'retainedData' ]\n        }\n      }\n    }\n  }\n};\n\nexport const NodeReimageParameter = {\n  required: false,\n  serializedName: 'NodeReimageParameter',\n  type: {\n    name: 'Composite',\n    className: 'NodeReimageParameter',\n    modelProperties: {\n      nodeReimageOption: {\n        required: false,\n        serializedName: 'nodeReimageOption',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'requeue', 'terminate', 'taskCompletion', 'retainedData' ]\n        }\n      }\n    }\n  }\n};\n\nexport const NodeDisableSchedulingParameter = {\n  required: false,\n  serializedName: 'NodeDisableSchedulingParameter',\n  type: {\n    name: 'Composite',\n    className: 'NodeDisableSchedulingParameter',\n    modelProperties: {\n      nodeDisableSchedulingOption: {\n        required: false,\n        serializedName: 'nodeDisableSchedulingOption',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'requeue', 'terminate', 'taskCompletion' ]\n        }\n      }\n    }\n  }\n};\n\nexport const NodeRemoveParameter = {\n  required: false,\n  serializedName: 'NodeRemoveParameter',\n  type: {\n    name: 'Composite',\n    className: 'NodeRemoveParameter',\n    modelProperties: {\n      nodeList: {\n        required: true,\n        serializedName: 'nodeList',\n        constraints: {\n          MaxItems: 100\n        },\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'stringElementType',\n              type: {\n                name: 'String'\n              }\n          }\n        }\n      },\n      resizeTimeout: {\n        required: false,\n        serializedName: 'resizeTimeout',\n        type: {\n          name: 'TimeSpan'\n        }\n      },\n      nodeDeallocationOption: {\n        required: false,\n        serializedName: 'nodeDeallocationOption',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'requeue', 'terminate', 'taskCompletion', 'retainedData' ]\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationListOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ApplicationListOptions',\n    modelProperties: {\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationGetOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ApplicationGetOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolListUsageMetricsOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolListUsageMetricsOptions',\n    modelProperties: {\n      startTime: {\n        required: false,\n        type: {\n          name: 'DateTime'\n        }\n      },\n      endTime: {\n        required: false,\n        type: {\n          name: 'DateTime'\n        }\n      },\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolGetAllLifetimeStatisticsOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolGetAllLifetimeStatisticsOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolAddOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolAddOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolListOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolListOptions',\n    modelProperties: {\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      expand: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolDeleteMethodOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolDeleteMethodOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolExistsOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolExistsOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolGetOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolGetOptions',\n    modelProperties: {\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      expand: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolPatchOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolPatchOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolDisableAutoScaleOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolDisableAutoScaleOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolEnableAutoScaleOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolEnableAutoScaleOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolEvaluateAutoScaleOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolEvaluateAutoScaleOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolResizeOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolResizeOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolStopResizeOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolStopResizeOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolUpdatePropertiesOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolUpdatePropertiesOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolUpgradeOSOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolUpgradeOSOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolRemoveNodesOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolRemoveNodesOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const AccountListNodeAgentSkusOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'AccountListNodeAgentSkusOptions',\n    modelProperties: {\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobGetAllLifetimeStatisticsOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobGetAllLifetimeStatisticsOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobDeleteMethodOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobDeleteMethodOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobGetOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobGetOptions',\n    modelProperties: {\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      expand: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobPatchOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobPatchOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobUpdateOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobUpdateOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobDisableOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobDisableOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobEnableOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobEnableOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobTerminateOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobTerminateOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobAddOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobAddOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobListOptions',\n    modelProperties: {\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      expand: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListFromJobScheduleOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobListFromJobScheduleOptions',\n    modelProperties: {\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      expand: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListPreparationAndReleaseTaskStatusOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobListPreparationAndReleaseTaskStatusOptions',\n    modelProperties: {\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobGetTaskCountsOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobGetTaskCountsOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateAddOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'CertificateAddOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateListOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'CertificateListOptions',\n    modelProperties: {\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateCancelDeletionOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'CertificateCancelDeletionOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateDeleteMethodOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'CertificateDeleteMethodOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateGetOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'CertificateGetOptions',\n    modelProperties: {\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const FileDeleteFromTaskOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'FileDeleteFromTaskOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetFromTaskOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'FileGetFromTaskOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ocpRange: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetPropertiesFromTaskOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'FileGetPropertiesFromTaskOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const FileDeleteFromComputeNodeOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'FileDeleteFromComputeNodeOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetFromComputeNodeOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'FileGetFromComputeNodeOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ocpRange: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetPropertiesFromComputeNodeOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'FileGetPropertiesFromComputeNodeOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const FileListFromTaskOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'FileListFromTaskOptions',\n    modelProperties: {\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const FileListFromComputeNodeOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'FileListFromComputeNodeOptions',\n    modelProperties: {\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleExistsOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleExistsOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleDeleteMethodOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleDeleteMethodOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleGetOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleGetOptions',\n    modelProperties: {\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      expand: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobSchedulePatchOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobSchedulePatchOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleUpdateOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleUpdateOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleDisableOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleDisableOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleEnableOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleEnableOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleTerminateOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleTerminateOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleAddOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleAddOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleListOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleListOptions',\n    modelProperties: {\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      expand: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskAddOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'TaskAddOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskListOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'TaskListOptions',\n    modelProperties: {\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      expand: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskAddCollectionOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'TaskAddCollectionOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskDeleteMethodOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'TaskDeleteMethodOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskGetOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'TaskGetOptions',\n    modelProperties: {\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      expand: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskUpdateOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'TaskUpdateOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskListSubtasksOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'TaskListSubtasksOptions',\n    modelProperties: {\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskTerminateOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'TaskTerminateOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskReactivateOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'TaskReactivateOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifNoneMatch: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      ifModifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      },\n      ifUnmodifiedSince: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeAddUserOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeAddUserOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeDeleteUserOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeDeleteUserOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeUpdateUserOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeUpdateUserOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeGetOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeGetOptions',\n    modelProperties: {\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeRebootOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeRebootOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeReimageOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeReimageOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeDisableSchedulingOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeDisableSchedulingOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeEnableSchedulingOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeEnableSchedulingOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeGetRemoteLoginSettingsOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeGetRemoteLoginSettingsOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeGetRemoteDesktopOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeGetRemoteDesktopOptions',\n    modelProperties: {\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeListOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeListOptions',\n    modelProperties: {\n      filter: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      select: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      maxResults: {\n        required: false,\n        defaultValue: 1000,\n        type: {\n          name: 'Number'\n        }\n      },\n      timeout: {\n        required: false,\n        defaultValue: 30,\n        type: {\n          name: 'Number'\n        }\n      },\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationListNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ApplicationListNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolListUsageMetricsNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolListUsageMetricsNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolListNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'PoolListNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const AccountListNodeAgentSkusNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'AccountListNodeAgentSkusNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobListNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListFromJobScheduleNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobListFromJobScheduleNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListPreparationAndReleaseTaskStatusNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobListPreparationAndReleaseTaskStatusNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateListNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'CertificateListNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const FileListFromTaskNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'FileListFromTaskNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const FileListFromComputeNodeNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'FileListFromComputeNodeNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleListNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleListNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskListNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'TaskListNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeListNextOptions = {\n  required: false,\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeListNextOptions',\n    modelProperties: {\n      clientRequestId: {\n        required: false,\n        type: {\n          name: 'String'\n        }\n      },\n      returnClientRequestId: {\n        required: false,\n        defaultValue: false,\n        type: {\n          name: 'Boolean'\n        }\n      },\n      ocpDate: {\n        required: false,\n        type: {\n          name: 'DateTimeRfc1123'\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationListOptionalParams = {\n  required: false,\n  serializedName: 'ListOptions',\n  type: {\n    name: 'Composite',\n    className: 'ApplicationListOptionalParams',\n    modelProperties: {\n      applicationListOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ApplicationListOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationGetOptionalParams = {\n  required: false,\n  serializedName: 'GetOptions',\n  type: {\n    name: 'Composite',\n    className: 'ApplicationGetOptionalParams',\n    modelProperties: {\n      applicationGetOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ApplicationGetOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationListNextOptionalParams = {\n  required: false,\n  serializedName: 'ListNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'ApplicationListNextOptionalParams',\n    modelProperties: {\n      applicationListNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ApplicationListNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolListUsageMetricsOptionalParams = {\n  required: false,\n  serializedName: 'ListUsageMetricsOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolListUsageMetricsOptionalParams',\n    modelProperties: {\n      poolListUsageMetricsOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolListUsageMetricsOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolGetAllLifetimeStatisticsOptionalParams = {\n  required: false,\n  serializedName: 'GetAllLifetimeStatisticsOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolGetAllLifetimeStatisticsOptionalParams',\n    modelProperties: {\n      poolGetAllLifetimeStatisticsOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolGetAllLifetimeStatisticsOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolAddOptionalParams = {\n  required: false,\n  serializedName: 'AddOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolAddOptionalParams',\n    modelProperties: {\n      poolAddOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolAddOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolListOptionalParams = {\n  required: false,\n  serializedName: 'ListOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolListOptionalParams',\n    modelProperties: {\n      poolListOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolListOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolDeleteMethodOptionalParams = {\n  required: false,\n  serializedName: 'DeleteMethodOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolDeleteMethodOptionalParams',\n    modelProperties: {\n      poolDeleteMethodOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolDeleteMethodOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolExistsOptionalParams = {\n  required: false,\n  serializedName: 'ExistsOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolExistsOptionalParams',\n    modelProperties: {\n      poolExistsOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolExistsOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolGetOptionalParams = {\n  required: false,\n  serializedName: 'GetOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolGetOptionalParams',\n    modelProperties: {\n      poolGetOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolGetOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolPatchOptionalParams = {\n  required: false,\n  serializedName: 'PatchOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolPatchOptionalParams',\n    modelProperties: {\n      poolPatchOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolPatchOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolDisableAutoScaleOptionalParams = {\n  required: false,\n  serializedName: 'DisableAutoScaleOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolDisableAutoScaleOptionalParams',\n    modelProperties: {\n      poolDisableAutoScaleOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolDisableAutoScaleOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolEnableAutoScaleOptionalParams = {\n  required: false,\n  serializedName: 'EnableAutoScaleOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolEnableAutoScaleOptionalParams',\n    modelProperties: {\n      poolEnableAutoScaleOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolEnableAutoScaleOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolEvaluateAutoScaleOptionalParams = {\n  required: false,\n  serializedName: 'EvaluateAutoScaleOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolEvaluateAutoScaleOptionalParams',\n    modelProperties: {\n      poolEvaluateAutoScaleOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolEvaluateAutoScaleOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolResizeOptionalParams = {\n  required: false,\n  serializedName: 'ResizeOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolResizeOptionalParams',\n    modelProperties: {\n      poolResizeOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolResizeOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolStopResizeOptionalParams = {\n  required: false,\n  serializedName: 'StopResizeOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolStopResizeOptionalParams',\n    modelProperties: {\n      poolStopResizeOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolStopResizeOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolUpdatePropertiesOptionalParams = {\n  required: false,\n  serializedName: 'UpdatePropertiesOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolUpdatePropertiesOptionalParams',\n    modelProperties: {\n      poolUpdatePropertiesOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolUpdatePropertiesOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolUpgradeOSOptionalParams = {\n  required: false,\n  serializedName: 'UpgradeOSOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolUpgradeOSOptionalParams',\n    modelProperties: {\n      poolUpgradeOSOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolUpgradeOSOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolRemoveNodesOptionalParams = {\n  required: false,\n  serializedName: 'RemoveNodesOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolRemoveNodesOptionalParams',\n    modelProperties: {\n      poolRemoveNodesOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolRemoveNodesOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolListUsageMetricsNextOptionalParams = {\n  required: false,\n  serializedName: 'ListUsageMetricsNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolListUsageMetricsNextOptionalParams',\n    modelProperties: {\n      poolListUsageMetricsNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolListUsageMetricsNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolListNextOptionalParams = {\n  required: false,\n  serializedName: 'ListNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'PoolListNextOptionalParams',\n    modelProperties: {\n      poolListNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'PoolListNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const AccountListNodeAgentSkusOptionalParams = {\n  required: false,\n  serializedName: 'ListNodeAgentSkusOptions',\n  type: {\n    name: 'Composite',\n    className: 'AccountListNodeAgentSkusOptionalParams',\n    modelProperties: {\n      accountListNodeAgentSkusOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'AccountListNodeAgentSkusOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const AccountListNodeAgentSkusNextOptionalParams = {\n  required: false,\n  serializedName: 'ListNodeAgentSkusNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'AccountListNodeAgentSkusNextOptionalParams',\n    modelProperties: {\n      accountListNodeAgentSkusNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'AccountListNodeAgentSkusNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobGetAllLifetimeStatisticsOptionalParams = {\n  required: false,\n  serializedName: 'GetAllLifetimeStatisticsOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobGetAllLifetimeStatisticsOptionalParams',\n    modelProperties: {\n      jobGetAllLifetimeStatisticsOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobGetAllLifetimeStatisticsOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobDeleteMethodOptionalParams = {\n  required: false,\n  serializedName: 'DeleteMethodOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobDeleteMethodOptionalParams',\n    modelProperties: {\n      jobDeleteMethodOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobDeleteMethodOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobGetOptionalParams = {\n  required: false,\n  serializedName: 'GetOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobGetOptionalParams',\n    modelProperties: {\n      jobGetOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobGetOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobPatchOptionalParams = {\n  required: false,\n  serializedName: 'PatchOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobPatchOptionalParams',\n    modelProperties: {\n      jobPatchOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobPatchOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobUpdateOptionalParams = {\n  required: false,\n  serializedName: 'UpdateOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobUpdateOptionalParams',\n    modelProperties: {\n      jobUpdateOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobUpdateOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobDisableOptionalParams = {\n  required: false,\n  serializedName: 'DisableOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobDisableOptionalParams',\n    modelProperties: {\n      jobDisableOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobDisableOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobEnableOptionalParams = {\n  required: false,\n  serializedName: 'EnableOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobEnableOptionalParams',\n    modelProperties: {\n      jobEnableOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobEnableOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobTerminateOptionalParams = {\n  required: false,\n  serializedName: 'TerminateOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobTerminateOptionalParams',\n    modelProperties: {\n      terminateReason: {\n        required: false,\n        serializedName: 'terminateReason',\n        type: {\n          name: 'String'\n        }\n      },\n      jobTerminateOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobTerminateOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobAddOptionalParams = {\n  required: false,\n  serializedName: 'AddOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobAddOptionalParams',\n    modelProperties: {\n      jobAddOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobAddOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListOptionalParams = {\n  required: false,\n  serializedName: 'ListOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobListOptionalParams',\n    modelProperties: {\n      jobListOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobListOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListFromJobScheduleOptionalParams = {\n  required: false,\n  serializedName: 'ListFromJobScheduleOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobListFromJobScheduleOptionalParams',\n    modelProperties: {\n      jobListFromJobScheduleOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobListFromJobScheduleOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListPreparationAndReleaseTaskStatusOptionalParams = {\n  required: false,\n  serializedName: 'ListPreparationAndReleaseTaskStatusOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobListPreparationAndReleaseTaskStatusOptionalParams',\n    modelProperties: {\n      jobListPreparationAndReleaseTaskStatusOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobListPreparationAndReleaseTaskStatusOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobGetTaskCountsOptionalParams = {\n  required: false,\n  serializedName: 'GetTaskCountsOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobGetTaskCountsOptionalParams',\n    modelProperties: {\n      jobGetTaskCountsOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobGetTaskCountsOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListNextOptionalParams = {\n  required: false,\n  serializedName: 'ListNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobListNextOptionalParams',\n    modelProperties: {\n      jobListNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobListNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListFromJobScheduleNextOptionalParams = {\n  required: false,\n  serializedName: 'ListFromJobScheduleNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobListFromJobScheduleNextOptionalParams',\n    modelProperties: {\n      jobListFromJobScheduleNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobListFromJobScheduleNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobListPreparationAndReleaseTaskStatusNextOptionalParams = {\n  required: false,\n  serializedName: 'ListPreparationAndReleaseTaskStatusNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobListPreparationAndReleaseTaskStatusNextOptionalParams',\n    modelProperties: {\n      jobListPreparationAndReleaseTaskStatusNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobListPreparationAndReleaseTaskStatusNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateAddOptionalParams = {\n  required: false,\n  serializedName: 'AddOptions',\n  type: {\n    name: 'Composite',\n    className: 'CertificateAddOptionalParams',\n    modelProperties: {\n      certificateAddOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'CertificateAddOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateListOptionalParams = {\n  required: false,\n  serializedName: 'ListOptions',\n  type: {\n    name: 'Composite',\n    className: 'CertificateListOptionalParams',\n    modelProperties: {\n      certificateListOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'CertificateListOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateCancelDeletionOptionalParams = {\n  required: false,\n  serializedName: 'CancelDeletionOptions',\n  type: {\n    name: 'Composite',\n    className: 'CertificateCancelDeletionOptionalParams',\n    modelProperties: {\n      certificateCancelDeletionOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'CertificateCancelDeletionOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateDeleteMethodOptionalParams = {\n  required: false,\n  serializedName: 'DeleteMethodOptions',\n  type: {\n    name: 'Composite',\n    className: 'CertificateDeleteMethodOptionalParams',\n    modelProperties: {\n      certificateDeleteMethodOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'CertificateDeleteMethodOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateGetOptionalParams = {\n  required: false,\n  serializedName: 'GetOptions',\n  type: {\n    name: 'Composite',\n    className: 'CertificateGetOptionalParams',\n    modelProperties: {\n      certificateGetOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'CertificateGetOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateListNextOptionalParams = {\n  required: false,\n  serializedName: 'ListNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'CertificateListNextOptionalParams',\n    modelProperties: {\n      certificateListNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'CertificateListNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const FileDeleteFromTaskOptionalParams = {\n  required: false,\n  serializedName: 'DeleteFromTaskOptions',\n  type: {\n    name: 'Composite',\n    className: 'FileDeleteFromTaskOptionalParams',\n    modelProperties: {\n      recursive: {\n        required: false,\n        serializedName: 'recursive',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      fileDeleteFromTaskOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'FileDeleteFromTaskOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetFromTaskOptionalParams = {\n  required: false,\n  serializedName: 'GetFromTaskOptions',\n  type: {\n    name: 'Composite',\n    className: 'FileGetFromTaskOptionalParams',\n    modelProperties: {\n      fileGetFromTaskOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'FileGetFromTaskOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetPropertiesFromTaskOptionalParams = {\n  required: false,\n  serializedName: 'GetPropertiesFromTaskOptions',\n  type: {\n    name: 'Composite',\n    className: 'FileGetPropertiesFromTaskOptionalParams',\n    modelProperties: {\n      fileGetPropertiesFromTaskOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'FileGetPropertiesFromTaskOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const FileDeleteFromComputeNodeOptionalParams = {\n  required: false,\n  serializedName: 'DeleteFromComputeNodeOptions',\n  type: {\n    name: 'Composite',\n    className: 'FileDeleteFromComputeNodeOptionalParams',\n    modelProperties: {\n      recursive: {\n        required: false,\n        serializedName: 'recursive',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      fileDeleteFromComputeNodeOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'FileDeleteFromComputeNodeOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetFromComputeNodeOptionalParams = {\n  required: false,\n  serializedName: 'GetFromComputeNodeOptions',\n  type: {\n    name: 'Composite',\n    className: 'FileGetFromComputeNodeOptionalParams',\n    modelProperties: {\n      fileGetFromComputeNodeOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'FileGetFromComputeNodeOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetPropertiesFromComputeNodeOptionalParams = {\n  required: false,\n  serializedName: 'GetPropertiesFromComputeNodeOptions',\n  type: {\n    name: 'Composite',\n    className: 'FileGetPropertiesFromComputeNodeOptionalParams',\n    modelProperties: {\n      fileGetPropertiesFromComputeNodeOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'FileGetPropertiesFromComputeNodeOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const FileListFromTaskOptionalParams = {\n  required: false,\n  serializedName: 'ListFromTaskOptions',\n  type: {\n    name: 'Composite',\n    className: 'FileListFromTaskOptionalParams',\n    modelProperties: {\n      recursive: {\n        required: false,\n        serializedName: 'recursive',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      fileListFromTaskOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'FileListFromTaskOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const FileListFromComputeNodeOptionalParams = {\n  required: false,\n  serializedName: 'ListFromComputeNodeOptions',\n  type: {\n    name: 'Composite',\n    className: 'FileListFromComputeNodeOptionalParams',\n    modelProperties: {\n      recursive: {\n        required: false,\n        serializedName: 'recursive',\n        type: {\n          name: 'Boolean'\n        }\n      },\n      fileListFromComputeNodeOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'FileListFromComputeNodeOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const FileListFromTaskNextOptionalParams = {\n  required: false,\n  serializedName: 'ListFromTaskNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'FileListFromTaskNextOptionalParams',\n    modelProperties: {\n      fileListFromTaskNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'FileListFromTaskNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const FileListFromComputeNodeNextOptionalParams = {\n  required: false,\n  serializedName: 'ListFromComputeNodeNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'FileListFromComputeNodeNextOptionalParams',\n    modelProperties: {\n      fileListFromComputeNodeNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'FileListFromComputeNodeNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleExistsOptionalParams = {\n  required: false,\n  serializedName: 'ExistsOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleExistsOptionalParams',\n    modelProperties: {\n      jobScheduleExistsOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleExistsOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleDeleteMethodOptionalParams = {\n  required: false,\n  serializedName: 'DeleteMethodOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleDeleteMethodOptionalParams',\n    modelProperties: {\n      jobScheduleDeleteMethodOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleDeleteMethodOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleGetOptionalParams = {\n  required: false,\n  serializedName: 'GetOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleGetOptionalParams',\n    modelProperties: {\n      jobScheduleGetOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleGetOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobSchedulePatchOptionalParams = {\n  required: false,\n  serializedName: 'PatchOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobSchedulePatchOptionalParams',\n    modelProperties: {\n      jobSchedulePatchOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobSchedulePatchOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleUpdateOptionalParams = {\n  required: false,\n  serializedName: 'UpdateOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleUpdateOptionalParams',\n    modelProperties: {\n      jobScheduleUpdateOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleUpdateOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleDisableOptionalParams = {\n  required: false,\n  serializedName: 'DisableOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleDisableOptionalParams',\n    modelProperties: {\n      jobScheduleDisableOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleDisableOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleEnableOptionalParams = {\n  required: false,\n  serializedName: 'EnableOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleEnableOptionalParams',\n    modelProperties: {\n      jobScheduleEnableOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleEnableOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleTerminateOptionalParams = {\n  required: false,\n  serializedName: 'TerminateOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleTerminateOptionalParams',\n    modelProperties: {\n      jobScheduleTerminateOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleTerminateOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleAddOptionalParams = {\n  required: false,\n  serializedName: 'AddOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleAddOptionalParams',\n    modelProperties: {\n      jobScheduleAddOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleAddOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleListOptionalParams = {\n  required: false,\n  serializedName: 'ListOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleListOptionalParams',\n    modelProperties: {\n      jobScheduleListOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleListOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleListNextOptionalParams = {\n  required: false,\n  serializedName: 'ListNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'JobScheduleListNextOptionalParams',\n    modelProperties: {\n      jobScheduleListNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'JobScheduleListNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskAddOptionalParams = {\n  required: false,\n  serializedName: 'AddOptions',\n  type: {\n    name: 'Composite',\n    className: 'TaskAddOptionalParams',\n    modelProperties: {\n      taskAddOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'TaskAddOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskListOptionalParams = {\n  required: false,\n  serializedName: 'ListOptions',\n  type: {\n    name: 'Composite',\n    className: 'TaskListOptionalParams',\n    modelProperties: {\n      taskListOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'TaskListOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskAddCollectionOptionalParams = {\n  required: false,\n  serializedName: 'AddCollectionOptions',\n  type: {\n    name: 'Composite',\n    className: 'TaskAddCollectionOptionalParams',\n    modelProperties: {\n      taskAddCollectionOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'TaskAddCollectionOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskDeleteMethodOptionalParams = {\n  required: false,\n  serializedName: 'DeleteMethodOptions',\n  type: {\n    name: 'Composite',\n    className: 'TaskDeleteMethodOptionalParams',\n    modelProperties: {\n      taskDeleteMethodOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'TaskDeleteMethodOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskGetOptionalParams = {\n  required: false,\n  serializedName: 'GetOptions',\n  type: {\n    name: 'Composite',\n    className: 'TaskGetOptionalParams',\n    modelProperties: {\n      taskGetOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'TaskGetOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskUpdateOptionalParams = {\n  required: false,\n  serializedName: 'UpdateOptions',\n  type: {\n    name: 'Composite',\n    className: 'TaskUpdateOptionalParams',\n    modelProperties: {\n      constraints: {\n        required: false,\n        serializedName: 'constraints',\n        type: {\n          name: 'Composite',\n          className: 'TaskConstraints'\n        }\n      },\n      taskUpdateOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'TaskUpdateOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskListSubtasksOptionalParams = {\n  required: false,\n  serializedName: 'ListSubtasksOptions',\n  type: {\n    name: 'Composite',\n    className: 'TaskListSubtasksOptionalParams',\n    modelProperties: {\n      taskListSubtasksOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'TaskListSubtasksOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskTerminateOptionalParams = {\n  required: false,\n  serializedName: 'TerminateOptions',\n  type: {\n    name: 'Composite',\n    className: 'TaskTerminateOptionalParams',\n    modelProperties: {\n      taskTerminateOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'TaskTerminateOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskReactivateOptionalParams = {\n  required: false,\n  serializedName: 'ReactivateOptions',\n  type: {\n    name: 'Composite',\n    className: 'TaskReactivateOptionalParams',\n    modelProperties: {\n      taskReactivateOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'TaskReactivateOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const TaskListNextOptionalParams = {\n  required: false,\n  serializedName: 'ListNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'TaskListNextOptionalParams',\n    modelProperties: {\n      taskListNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'TaskListNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeAddUserOptionalParams = {\n  required: false,\n  serializedName: 'AddUserOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeAddUserOptionalParams',\n    modelProperties: {\n      computeNodeAddUserOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeAddUserOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeDeleteUserOptionalParams = {\n  required: false,\n  serializedName: 'DeleteUserOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeDeleteUserOptionalParams',\n    modelProperties: {\n      computeNodeDeleteUserOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeDeleteUserOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeUpdateUserOptionalParams = {\n  required: false,\n  serializedName: 'UpdateUserOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeUpdateUserOptionalParams',\n    modelProperties: {\n      computeNodeUpdateUserOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeUpdateUserOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeGetOptionalParams = {\n  required: false,\n  serializedName: 'GetOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeGetOptionalParams',\n    modelProperties: {\n      computeNodeGetOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeGetOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeRebootOptionalParams = {\n  required: false,\n  serializedName: 'RebootOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeRebootOptionalParams',\n    modelProperties: {\n      nodeRebootOption: {\n        required: false,\n        serializedName: 'nodeRebootOption',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'requeue', 'terminate', 'taskCompletion', 'retainedData' ]\n        }\n      },\n      computeNodeRebootOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeRebootOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeReimageOptionalParams = {\n  required: false,\n  serializedName: 'ReimageOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeReimageOptionalParams',\n    modelProperties: {\n      nodeReimageOption: {\n        required: false,\n        serializedName: 'nodeReimageOption',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'requeue', 'terminate', 'taskCompletion', 'retainedData' ]\n        }\n      },\n      computeNodeReimageOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeReimageOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeDisableSchedulingOptionalParams = {\n  required: false,\n  serializedName: 'DisableSchedulingOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeDisableSchedulingOptionalParams',\n    modelProperties: {\n      nodeDisableSchedulingOption: {\n        required: false,\n        serializedName: 'nodeDisableSchedulingOption',\n        type: {\n          name: 'Enum',\n          allowedValues: [ 'requeue', 'terminate', 'taskCompletion' ]\n        }\n      },\n      computeNodeDisableSchedulingOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeDisableSchedulingOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeEnableSchedulingOptionalParams = {\n  required: false,\n  serializedName: 'EnableSchedulingOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeEnableSchedulingOptionalParams',\n    modelProperties: {\n      computeNodeEnableSchedulingOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeEnableSchedulingOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeGetRemoteLoginSettingsOptionalParams = {\n  required: false,\n  serializedName: 'GetRemoteLoginSettingsOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeGetRemoteLoginSettingsOptionalParams',\n    modelProperties: {\n      computeNodeGetRemoteLoginSettingsOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeGetRemoteLoginSettingsOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeGetRemoteDesktopOptionalParams = {\n  required: false,\n  serializedName: 'GetRemoteDesktopOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeGetRemoteDesktopOptionalParams',\n    modelProperties: {\n      computeNodeGetRemoteDesktopOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeGetRemoteDesktopOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeListOptionalParams = {\n  required: false,\n  serializedName: 'ListOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeListOptionalParams',\n    modelProperties: {\n      computeNodeListOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeListOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeListNextOptionalParams = {\n  required: false,\n  serializedName: 'ListNextOptions',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeListNextOptionalParams',\n    modelProperties: {\n      computeNodeListNextOptions: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Composite',\n          className: 'ComputeNodeListNextOptions'\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationListResult = {\n  required: false,\n  serializedName: 'ApplicationListResult',\n  type: {\n    name: 'Composite',\n    className: 'ApplicationListResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ApplicationSummaryElementType',\n              type: {\n                name: 'Composite',\n                className: 'ApplicationSummary'\n              }\n          }\n        }\n      },\n      odatanextLink: {\n        required: false,\n        serializedName: 'odata\\\\.nextLink',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const PoolListUsageMetricsResult = {\n  required: false,\n  serializedName: 'PoolListUsageMetricsResult',\n  type: {\n    name: 'Composite',\n    className: 'PoolListUsageMetricsResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'PoolUsageMetricsElementType',\n              type: {\n                name: 'Composite',\n                className: 'PoolUsageMetrics'\n              }\n          }\n        }\n      },\n      odatanextLink: {\n        required: false,\n        serializedName: 'odata\\\\.nextLink',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const CloudPoolListResult = {\n  required: false,\n  serializedName: 'CloudPoolListResult',\n  type: {\n    name: 'Composite',\n    className: 'CloudPoolListResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CloudPoolElementType',\n              type: {\n                name: 'Composite',\n                className: 'CloudPool'\n              }\n          }\n        }\n      },\n      odatanextLink: {\n        required: false,\n        serializedName: 'odata\\\\.nextLink',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const AccountListNodeAgentSkusResult = {\n  required: false,\n  serializedName: 'AccountListNodeAgentSkusResult',\n  type: {\n    name: 'Composite',\n    className: 'AccountListNodeAgentSkusResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'NodeAgentSkuElementType',\n              type: {\n                name: 'Composite',\n                className: 'NodeAgentSku'\n              }\n          }\n        }\n      },\n      odatanextLink: {\n        required: false,\n        serializedName: 'odata\\\\.nextLink',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const CloudJobListResult = {\n  required: false,\n  serializedName: 'CloudJobListResult',\n  type: {\n    name: 'Composite',\n    className: 'CloudJobListResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CloudJobElementType',\n              type: {\n                name: 'Composite',\n                className: 'CloudJob'\n              }\n          }\n        }\n      },\n      odatanextLink: {\n        required: false,\n        serializedName: 'odata\\\\.nextLink',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const CloudJobListPreparationAndReleaseTaskStatusResult = {\n  required: false,\n  serializedName: 'CloudJobListPreparationAndReleaseTaskStatusResult',\n  type: {\n    name: 'Composite',\n    className: 'CloudJobListPreparationAndReleaseTaskStatusResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'JobPreparationAndReleaseTaskExecutionInformationElementType',\n              type: {\n                name: 'Composite',\n                className: 'JobPreparationAndReleaseTaskExecutionInformation'\n              }\n          }\n        }\n      },\n      odatanextLink: {\n        required: false,\n        serializedName: 'odata\\\\.nextLink',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateListResult = {\n  required: false,\n  serializedName: 'CertificateListResult',\n  type: {\n    name: 'Composite',\n    className: 'CertificateListResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CertificateElementType',\n              type: {\n                name: 'Composite',\n                className: 'Certificate'\n              }\n          }\n        }\n      },\n      odatanextLink: {\n        required: false,\n        serializedName: 'odata\\\\.nextLink',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const NodeFileListResult = {\n  required: false,\n  serializedName: 'NodeFileListResult',\n  type: {\n    name: 'Composite',\n    className: 'NodeFileListResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'NodeFileElementType',\n              type: {\n                name: 'Composite',\n                className: 'NodeFile'\n              }\n          }\n        }\n      },\n      odatanextLink: {\n        required: false,\n        serializedName: 'odata\\\\.nextLink',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const CloudJobScheduleListResult = {\n  required: false,\n  serializedName: 'CloudJobScheduleListResult',\n  type: {\n    name: 'Composite',\n    className: 'CloudJobScheduleListResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CloudJobScheduleElementType',\n              type: {\n                name: 'Composite',\n                className: 'CloudJobSchedule'\n              }\n          }\n        }\n      },\n      odatanextLink: {\n        required: false,\n        serializedName: 'odata\\\\.nextLink',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const CloudTaskListResult = {\n  required: false,\n  serializedName: 'CloudTaskListResult',\n  type: {\n    name: 'Composite',\n    className: 'CloudTaskListResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'CloudTaskElementType',\n              type: {\n                name: 'Composite',\n                className: 'CloudTask'\n              }\n          }\n        }\n      },\n      odatanextLink: {\n        required: false,\n        serializedName: 'odata\\\\.nextLink',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeNodeListResult = {\n  required: false,\n  serializedName: 'ComputeNodeListResult',\n  type: {\n    name: 'Composite',\n    className: 'ComputeNodeListResult',\n    modelProperties: {\n      value: {\n        required: false,\n        serializedName: '',\n        type: {\n          name: 'Sequence',\n          element: {\n              required: false,\n              serializedName: 'ComputeNodeElementType',\n              type: {\n                name: 'Composite',\n                className: 'ComputeNode'\n              }\n          }\n        }\n      },\n      odatanextLink: {\n        required: false,\n        serializedName: 'odata\\\\.nextLink',\n        type: {\n          name: 'String'\n        }\n      }\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/models/mappers.ts","module.exports = msRest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"msRest\"\n// module id = 1\n// module chunks = 0","module.exports = msRestAzure;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"msRestAzure\"\n// module id = 2\n// module chunks = 0","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as msRest from \"ms-rest-js\";\nimport * as msRestAzure from \"ms-rest-azure-js\";\nimport * as operations from \"./operations\";\n\nconst packageName = 'foo';\nconst packageVersion = '3.0.0-preview';\n\nclass BatchServiceClient extends msRestAzure.AzureServiceClient {\n\n  credentials: msRest.ServiceClientCredentials;\n\n  apiVersion: string;\n\n  acceptLanguage: string;\n\n  longRunningOperationRetryTimeout: number;\n\n  generateClientRequestId: boolean;\n  baseUri: string;\n\n  // Operation groups\n  application: operations.Application;\n  pool: operations.Pool;\n  account: operations.Account;\n  job: operations.Job;\n  certificate: operations.CertificateOperations;\n  file: operations.File;\n  jobSchedule: operations.JobSchedule;\n  task: operations.Task;\n  computeNode: operations.ComputeNodeOperations;\n  serializer: msRest.Serializer;\n\n  /**\n   * @class\n   * Initializes a new instance of the BatchServiceClient class.\n   * @constructor\n   *\n   * @param {msRest.ServiceClientCredentials} credentials - Credentials needed for the client to connect to Azure.\n   *\n   * @param {string} [baseUri] - The base URI of the service.\n   *\n   * @param {object} [options] - The parameter options\n   *\n   * @param {Array} [options.filters] - Filters to be added to the request pipeline\n   *\n   * @param {object} [options.requestOptions] - The request options. Detailed info can be found at\n   * {@link https://github.github.io/fetch/#Request Options doc}\n   *\n   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy\n   *\n   * @param {string} [options.acceptLanguage] - Gets or sets the preferred language for the response.\n   *\n   * @param {number} [options.longRunningOperationRetryTimeout] - Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30.\n   *\n   * @param {boolean} [options.generateClientRequestId] - When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.\n   *\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, baseUri?: string, options?: msRestAzure.AzureServiceClientOptions) {\n    if (credentials === null || credentials === undefined) {\n      throw new Error('\\'credentials\\' cannot be null.');\n    }\n\n    if (!options) options = {};\n\n    super(credentials, options);\n\n    this.apiVersion = '2017-09-01.6.0';\n    this.acceptLanguage = 'en-US';\n    this.longRunningOperationRetryTimeout = 30;\n    this.generateClientRequestId = true;\n    this.baseUri = baseUri as string;\n    if (!this.baseUri) {\n      this.baseUri = 'https://batch.core.windows.net';\n    }\n    this.credentials = credentials;\n\n    this.addUserAgentInfo(`${packageName}/${packageVersion}`);\n    if(options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\n      this.acceptLanguage = options.acceptLanguage;\n    }\n    if(options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {\n      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\n    }\n    if(options.generateClientRequestId !== null && options.generateClientRequestId !== undefined) {\n      this.generateClientRequestId = options.generateClientRequestId;\n    }\n    this.application = new operations.Application(this);\n    this.pool = new operations.Pool(this);\n    this.account = new operations.Account(this);\n    this.job = new operations.Job(this);\n    this.certificate = new operations.CertificateOperations(this);\n    this.file = new operations.File(this);\n    this.jobSchedule = new operations.JobSchedule(this);\n    this.task = new operations.Task(this);\n    this.computeNode = new operations.ComputeNodeOperations(this);\n    this.serializer = new msRest.Serializer(Mappers);\n  }\n}\n\nexport { BatchServiceClient, Models as BatchServiceModels, Mappers as BatchServiceMappers };\n\n\n\n// WEBPACK FOOTER //\n// ./lib/batchServiceClient.ts","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport { BaseResource, CloudError } from \"ms-rest-azure-js\";\nimport * as moment from \"moment\";\nimport { RequestOptionsBase } from \"ms-rest-js\";\n\nexport { BaseResource, CloudError };\n\n\n/**\n * @interface\n * An interface representing PoolUsageMetrics.\n * @summary Usage metrics for a pool across an aggregation interval.\n *\n */\nexport interface PoolUsageMetrics {\n  /**\n   * @member {string} poolId The ID of the pool whose metrics are aggregated in\n   * this entry.\n   */\n  poolId: string;\n  /**\n   * @member {Date} startTime The start time of the aggregation interval\n   * covered by this entry.\n   */\n  startTime: Date;\n  /**\n   * @member {Date} endTime The end time of the aggregation interval covered by\n   * this entry.\n   */\n  endTime: Date;\n  /**\n   * @member {string} vmSize The size of virtual machines in the pool. All VMs\n   * in a pool are the same size. For information about available sizes of\n   * virtual machines for Cloud Services pools (pools created with\n   * cloudServiceConfiguration), see Sizes for Cloud Services\n   * (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).\n   * Batch supports all Cloud Services VM sizes except ExtraSmall,\n   * STANDARD_A1_V2 and STANDARD_A2_V2. For information about available VM\n   * sizes for pools using images from the Virtual Machines Marketplace (pools\n   * created with virtualMachineConfiguration) see Sizes for Virtual Machines\n   * (Linux)\n   * (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)\n   * or Sizes for Virtual Machines (Windows)\n   * (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).\n   * Batch supports all Azure VM sizes except STANDARD_A0 and those with\n   * premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).\n   */\n  vmSize: string;\n  /**\n   * @member {number} totalCoreHours The total core hours used in the pool\n   * during this aggregation interval.\n   */\n  totalCoreHours: number;\n  /**\n   * @member {number} dataIngressGiB The cross data center network ingress to\n   * the pool during this interval, in GiB.\n   */\n  dataIngressGiB: number;\n  /**\n   * @member {number} dataEgressGiB The cross data center network egress from\n   * the pool during this interval, in GiB.\n   */\n  dataEgressGiB: number;\n}\n\n/**\n * @interface\n * An interface representing ImageReference.\n * @summary A reference to an Azure Virtual Machines Marketplace image or a\n * custom Azure Virtual Machine image. To get the list of all Azure Marketplace\n * image references verified by Azure Batch, see the 'List node agent SKUs'\n * operation.\n *\n */\nexport interface ImageReference {\n  /**\n   * @member {string} [publisher] The publisher of the Azure Virtual Machines\n   * Marketplace image. For example, Canonical or MicrosoftWindowsServer.\n   */\n  publisher?: string;\n  /**\n   * @member {string} [offer] The offer type of the Azure Virtual Machines\n   * Marketplace image. For example, UbuntuServer or WindowsServer.\n   */\n  offer?: string;\n  /**\n   * @member {string} [sku] The SKU of the Azure Virtual Machines Marketplace\n   * image. For example, 14.04.0-LTS or 2012-R2-Datacenter.\n   */\n  sku?: string;\n  /**\n   * @member {string} [version] The version of the Azure Virtual Machines\n   * Marketplace image. A value of 'latest' can be specified to select the\n   * latest version of an image. If omitted, the default is 'latest'.\n   */\n  version?: string;\n  /**\n   * @member {string} [virtualMachineImageId] The ARM resource identifier of\n   * the virtual machine image. Computes nodes of the pool will be created\n   * using this custom image. This is of the form\n   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}.\n   * This property is mutually exclusive with other ImageReference properties.\n   * The virtual machine image must be in the same region and subscription as\n   * the Azure Batch account. For information about the firewall settings for\n   * the Batch node agent to communicate with the Batch service see\n   * https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.\n   */\n  virtualMachineImageId?: string;\n}\n\n/**\n * @interface\n * An interface representing NodeAgentSku.\n * @summary A node agent SKU supported by the Batch service.\n *\n * The Batch node agent is a program that runs on each node in the pool, and\n * provides the command-and-control interface between the node and the Batch\n * service. There are different implementations of the node agent, known as\n * SKUs, for different operating systems.\n *\n */\nexport interface NodeAgentSku {\n  /**\n   * @member {string} [id] The ID of the node agent SKU.\n   */\n  id?: string;\n  /**\n   * @member {ImageReference[]} [verifiedImageReferences] The list of Azure\n   * Marketplace images verified to be compatible with this node agent SKU.\n   * This collection is not exhaustive (the node agent may be compatible with\n   * other images).\n   */\n  verifiedImageReferences?: ImageReference[];\n  /**\n   * @member {string} [osType] The type of operating system (e.g. Windows or\n   * Linux) compatible with the node agent SKU. Possible values include:\n   * 'linux', 'windows'\n   */\n  osType?: string;\n}\n\n/**\n * @interface\n * An interface representing AuthenticationTokenSettings.\n * @summary The settings for an authentication token that the task can use to\n * perform Batch service operations.\n *\n */\nexport interface AuthenticationTokenSettings {\n  /**\n   * @member {string[]} [access] The Batch resources to which the token grants\n   * access. The authentication token grants access to a limited set of Batch\n   * service operations. Currently the only supported value for the access\n   * property is 'job', which grants access to all operations related to the\n   * job which contains the task.\n   */\n  access?: string[];\n}\n\n/**\n * @interface\n * An interface representing UsageStatistics.\n * @summary Statistics related to pool usage information.\n *\n */\nexport interface UsageStatistics {\n  /**\n   * @member {Date} startTime The start time of the time range covered by the\n   * statistics.\n   */\n  startTime: Date;\n  /**\n   * @member {Date} lastUpdateTime The time at which the statistics were last\n   * updated. All statistics are limited to the range between startTime and\n   * lastUpdateTime.\n   */\n  lastUpdateTime: Date;\n  /**\n   * @member {moment.Duration} dedicatedCoreTime The aggregated wall-clock time\n   * of the dedicated compute node cores being part of the pool.\n   */\n  dedicatedCoreTime: moment.Duration;\n}\n\n/**\n * @interface\n * An interface representing ResourceStatistics.\n * @summary Statistics related to resource consumption by compute nodes in a\n * pool.\n *\n */\nexport interface ResourceStatistics {\n  /**\n   * @member {Date} startTime The start time of the time range covered by the\n   * statistics.\n   */\n  startTime: Date;\n  /**\n   * @member {Date} lastUpdateTime The time at which the statistics were last\n   * updated. All statistics are limited to the range between startTime and\n   * lastUpdateTime.\n   */\n  lastUpdateTime: Date;\n  /**\n   * @member {number} avgCPUPercentage The average CPU usage across all nodes\n   * in the pool (percentage per node).\n   */\n  avgCPUPercentage: number;\n  /**\n   * @member {number} avgMemoryGiB The average memory usage in GiB across all\n   * nodes in the pool.\n   */\n  avgMemoryGiB: number;\n  /**\n   * @member {number} peakMemoryGiB The peak memory usage in GiB across all\n   * nodes in the pool.\n   */\n  peakMemoryGiB: number;\n  /**\n   * @member {number} avgDiskGiB The average used disk space in GiB across all\n   * nodes in the pool.\n   */\n  avgDiskGiB: number;\n  /**\n   * @member {number} peakDiskGiB The peak used disk space in GiB across all\n   * nodes in the pool.\n   */\n  peakDiskGiB: number;\n  /**\n   * @member {number} diskReadIOps The total number of disk read operations\n   * across all nodes in the pool.\n   */\n  diskReadIOps: number;\n  /**\n   * @member {number} diskWriteIOps The total number of disk write operations\n   * across all nodes in the pool.\n   */\n  diskWriteIOps: number;\n  /**\n   * @member {number} diskReadGiB The total amount of data in GiB of disk reads\n   * across all nodes in the pool.\n   */\n  diskReadGiB: number;\n  /**\n   * @member {number} diskWriteGiB The total amount of data in GiB of disk\n   * writes across all nodes in the pool.\n   */\n  diskWriteGiB: number;\n  /**\n   * @member {number} networkReadGiB The total amount of data in GiB of network\n   * reads across all nodes in the pool.\n   */\n  networkReadGiB: number;\n  /**\n   * @member {number} networkWriteGiB The total amount of data in GiB of\n   * network writes across all nodes in the pool.\n   */\n  networkWriteGiB: number;\n}\n\n/**\n * @interface\n * An interface representing PoolStatistics.\n * @summary Contains utilization and resource usage statistics for the lifetime\n * of a pool.\n *\n */\nexport interface PoolStatistics {\n  /**\n   * @member {string} url The URL for the statistics.\n   */\n  url: string;\n  /**\n   * @member {Date} startTime The start time of the time range covered by the\n   * statistics.\n   */\n  startTime: Date;\n  /**\n   * @member {Date} lastUpdateTime The time at which the statistics were last\n   * updated. All statistics are limited to the range between startTime and\n   * lastUpdateTime.\n   */\n  lastUpdateTime: Date;\n  /**\n   * @member {UsageStatistics} [usageStats] Statistics related to pool usage,\n   * such as the amount of core-time used.\n   */\n  usageStats?: UsageStatistics;\n  /**\n   * @member {ResourceStatistics} [resourceStats] Statistics related to\n   * resource consumption by compute nodes in the pool.\n   */\n  resourceStats?: ResourceStatistics;\n}\n\n/**\n * @interface\n * An interface representing JobStatistics.\n * @summary Resource usage statistics for a job.\n *\n */\nexport interface JobStatistics {\n  /**\n   * @member {string} url The URL of the statistics.\n   */\n  url: string;\n  /**\n   * @member {Date} startTime The start time of the time range covered by the\n   * statistics.\n   */\n  startTime: Date;\n  /**\n   * @member {Date} lastUpdateTime The time at which the statistics were last\n   * updated. All statistics are limited to the range between startTime and\n   * lastUpdateTime.\n   */\n  lastUpdateTime: Date;\n  /**\n   * @member {moment.Duration} userCPUTime The total user mode CPU time (summed\n   * across all cores and all compute nodes) consumed by all tasks in the job.\n   */\n  userCPUTime: moment.Duration;\n  /**\n   * @member {moment.Duration} kernelCPUTime The total kernel mode CPU time\n   * (summed across all cores and all compute nodes) consumed by all tasks in\n   * the job.\n   */\n  kernelCPUTime: moment.Duration;\n  /**\n   * @member {moment.Duration} wallClockTime The total wall clock time of all\n   * tasks in the job.  The wall clock time is the elapsed time from when the\n   * task started running on a compute node to when it finished (or to the last\n   * time the statistics were updated, if the task had not finished by then).\n   * If a task was retried, this includes the wall clock time of all the task\n   * retries.\n   */\n  wallClockTime: moment.Duration;\n  /**\n   * @member {number} readIOps The total number of disk read operations made by\n   * all tasks in the job.\n   */\n  readIOps: number;\n  /**\n   * @member {number} writeIOps The total number of disk write operations made\n   * by all tasks in the job.\n   */\n  writeIOps: number;\n  /**\n   * @member {number} readIOGiB The total amount of data in GiB read from disk\n   * by all tasks in the job.\n   */\n  readIOGiB: number;\n  /**\n   * @member {number} writeIOGiB The total amount of data in GiB written to\n   * disk by all tasks in the job.\n   */\n  writeIOGiB: number;\n  /**\n   * @member {number} numSucceededTasks The total number of tasks successfully\n   * completed in the job during the given time range. A task completes\n   * successfully if it returns exit code 0.\n   */\n  numSucceededTasks: number;\n  /**\n   * @member {number} numFailedTasks The total number of tasks in the job that\n   * failed during the given time range. A task fails if it exhausts its\n   * maximum retry count without returning exit code 0.\n   */\n  numFailedTasks: number;\n  /**\n   * @member {number} numTaskRetries The total number of retries on all the\n   * tasks in the job during the given time range.\n   */\n  numTaskRetries: number;\n  /**\n   * @member {moment.Duration} waitTime The total wait time of all tasks in the\n   * job. The wait time for a task is defined as the elapsed time between the\n   * creation of the task and the start of task execution. (If the task is\n   * retried due to failures, the wait time is the time to the most recent task\n   * execution.) This value is only reported in the account lifetime\n   * statistics; it is not included in the job statistics.\n   */\n  waitTime: moment.Duration;\n}\n\n/**\n * @interface\n * An interface representing NameValuePair.\n * @summary Represents a name-value pair.\n *\n */\nexport interface NameValuePair {\n  /**\n   * @member {string} [name] The name in the name-value pair.\n   */\n  name?: string;\n  /**\n   * @member {string} [value] The value in the name-value pair.\n   */\n  value?: string;\n}\n\n/**\n * @interface\n * An interface representing DeleteCertificateError.\n * @summary An error encountered by the Batch service when deleting a\n * certificate.\n *\n */\nexport interface DeleteCertificateError {\n  /**\n   * @member {string} [code] An identifier for the certificate deletion error.\n   * Codes are invariant and are intended to be consumed programmatically.\n   */\n  code?: string;\n  /**\n   * @member {string} [message] A message describing the certificate deletion\n   * error, intended to be suitable for display in a user interface.\n   */\n  message?: string;\n  /**\n   * @member {NameValuePair[]} [values] A list of additional error details\n   * related to the certificate deletion error. This list includes details such\n   * as the active pools and nodes referencing this certificate. However, if a\n   * large number of resources reference the certificate, the list contains\n   * only about the first hundred.\n   */\n  values?: NameValuePair[];\n}\n\n/**\n * @interface\n * An interface representing Certificate.\n * A certificate that can be installed on compute nodes and can be used to\n * authenticate operations on the machine.\n *\n */\nexport interface Certificate {\n  /**\n   * @member {string} [thumbprint] The X.509 thumbprint of the certificate.\n   * This is a sequence of up to 40 hex digits.\n   */\n  thumbprint?: string;\n  /**\n   * @member {string} [thumbprintAlgorithm] The algorithm used to derive the\n   * thumbprint.\n   */\n  thumbprintAlgorithm?: string;\n  /**\n   * @member {string} [url] The URL of the certificate.\n   */\n  url?: string;\n  /**\n   * @member {string} [state] The current state of the certificate. Possible\n   * values include: 'active', 'deleting', 'deleteFailed'\n   */\n  state?: string;\n  /**\n   * @member {Date} [stateTransitionTime] The time at which the certificate\n   * entered its current state.\n   */\n  stateTransitionTime?: Date;\n  /**\n   * @member {string} [previousState] The previous state of the certificate.\n   * This property is not set if the certificate is in its initial active\n   * state. Possible values include: 'active', 'deleting', 'deleteFailed'\n   */\n  previousState?: string;\n  /**\n   * @member {Date} [previousStateTransitionTime] The time at which the\n   * certificate entered its previous state. This property is not set if the\n   * certificate is in its initial Active state.\n   */\n  previousStateTransitionTime?: Date;\n  /**\n   * @member {string} [publicData] The public part of the certificate as a\n   * base-64 encoded .cer file.\n   */\n  publicData?: string;\n  /**\n   * @member {DeleteCertificateError} [deleteCertificateError] The error that\n   * occurred on the last attempt to delete this certificate. This property is\n   * set only if the certificate is in the DeleteFailed state.\n   */\n  deleteCertificateError?: DeleteCertificateError;\n}\n\n/**\n * @interface\n * An interface representing ApplicationPackageReference.\n * @summary A reference to an application package to be deployed to compute\n * nodes.\n *\n */\nexport interface ApplicationPackageReference {\n  /**\n   * @member {string} applicationId The ID of the application to deploy.\n   */\n  applicationId: string;\n  /**\n   * @member {string} [version] The version of the application to deploy. If\n   * omitted, the default version is deployed. If this is omitted on a pool,\n   * and no default version is specified for this application, the request\n   * fails with the error code InvalidApplicationPackageReferences and HTTP\n   * status code 409. If this is omitted on a task, and no default version is\n   * specified for this application, the task fails with a pre-processing\n   * error.\n   */\n  version?: string;\n}\n\n/**\n * @interface\n * An interface representing ApplicationSummary.\n * @summary Contains information about an application in an Azure Batch\n * account.\n *\n */\nexport interface ApplicationSummary {\n  /**\n   * @member {string} id A string that uniquely identifies the application\n   * within the account.\n   */\n  id: string;\n  /**\n   * @member {string} displayName The display name for the application.\n   */\n  displayName: string;\n  /**\n   * @member {string[]} versions The list of available versions of the\n   * application.\n   */\n  versions: string[];\n}\n\n/**\n * @interface\n * An interface representing CertificateAddParameter.\n * @summary A certificate that can be installed on compute nodes and can be\n * used to authenticate operations on the machine.\n *\n */\nexport interface CertificateAddParameter {\n  /**\n   * @member {string} thumbprint The X.509 thumbprint of the certificate. This\n   * is a sequence of up to 40 hex digits (it may include spaces but these are\n   * removed).\n   */\n  thumbprint: string;\n  /**\n   * @member {string} thumbprintAlgorithm The algorithm used to derive the\n   * thumbprint. This must be sha1.\n   */\n  thumbprintAlgorithm: string;\n  /**\n   * @member {string} data The base64-encoded contents of the certificate. The\n   * maximum size is 10KB.\n   */\n  data: string;\n  /**\n   * @member {string} [certificateFormat] The format of the certificate data.\n   * Possible values include: 'pfx', 'cer'\n   */\n  certificateFormat?: string;\n  /**\n   * @member {string} [password] The password to access the certificate's\n   * private key. This is required if the certificate format is pfx. It should\n   * be omitted if the certificate format is cer.\n   */\n  password?: string;\n}\n\n/**\n * @interface\n * An interface representing FileProperties.\n * @summary The properties of a file on a compute node.\n *\n */\nexport interface FileProperties {\n  /**\n   * @member {Date} [creationTime] The file creation time. The creation time is\n   * not returned for files on Linux compute nodes.\n   */\n  creationTime?: Date;\n  /**\n   * @member {Date} lastModified The time at which the file was last modified.\n   */\n  lastModified: Date;\n  /**\n   * @member {number} contentLength The length of the file.\n   */\n  contentLength: number;\n  /**\n   * @member {string} [contentType] The content type of the file.\n   */\n  contentType?: string;\n  /**\n   * @member {string} [fileMode] The file mode attribute in octal format. The\n   * file mode is returned only for files on Linux compute nodes.\n   */\n  fileMode?: string;\n}\n\n/**\n * @interface\n * An interface representing NodeFile.\n * @summary Information about a file or directory on a compute node.\n *\n */\nexport interface NodeFile {\n  /**\n   * @member {string} [name] The file path.\n   */\n  name?: string;\n  /**\n   * @member {string} [url] The URL of the file.\n   */\n  url?: string;\n  /**\n   * @member {boolean} [isDirectory] Whether the object represents a directory.\n   */\n  isDirectory?: boolean;\n  /**\n   * @member {FileProperties} [properties] The file properties.\n   */\n  properties?: FileProperties;\n}\n\n/**\n * @interface\n * An interface representing Schedule.\n * @summary The schedule according to which jobs will be created\n *\n */\nexport interface Schedule {\n  /**\n   * @member {Date} [doNotRunUntil] The earliest time at which any job may be\n   * created under this job schedule. If you do not specify a doNotRunUntil\n   * time, the schedule becomes ready to create jobs immediately.\n   */\n  doNotRunUntil?: Date;\n  /**\n   * @member {Date} [doNotRunAfter] A time after which no job will be created\n   * under this job schedule. The schedule will move to the completed state as\n   * soon as this deadline is past and there is no active job under this job\n   * schedule. If you do not specify a doNotRunAfter time, and you are creating\n   * a recurring job schedule, the job schedule will remain active until you\n   * explicitly terminate it.\n   */\n  doNotRunAfter?: Date;\n  /**\n   * @member {moment.Duration} [startWindow] The time interval, starting from\n   * the time at which the schedule indicates a job should be created, within\n   * which a job must be created. If a job is not created within the\n   * startWindow interval, then the 'opportunity' is lost; no job will be\n   * created until the next recurrence of the schedule. If the schedule is\n   * recurring, and the startWindow is longer than the recurrence interval,\n   * then this is equivalent to an infinite startWindow, because the job that\n   * is 'due' in one recurrenceInterval is not carried forward into the next\n   * recurrence interval. The default is infinite. The minimum value is 1\n   * minute. If you specify a lower value, the Batch service rejects the\n   * schedule with an error; if you are calling the REST API directly, the HTTP\n   * status code is 400 (Bad Request).\n   */\n  startWindow?: moment.Duration;\n  /**\n   * @member {moment.Duration} [recurrenceInterval] The time interval between\n   * the start times of two successive jobs under the job schedule. A job\n   * schedule can have at most one active job under it at any given time.\n   * Because a job schedule can have at most one active job under it at any\n   * given time, if it is time to create a new job under a job schedule, but\n   * the previous job is still running, the Batch service will not create the\n   * new job until the previous job finishes. If the previous job does not\n   * finish within the startWindow period of the new recurrenceInterval, then\n   * no new job will be scheduled for that interval. For recurring jobs, you\n   * should normally specify a jobManagerTask in the jobSpecification. If you\n   * do not use jobManagerTask, you will need an external process to monitor\n   * when jobs are created, add tasks to the jobs and terminate the jobs ready\n   * for the next recurrence. The default is that the schedule does not recur:\n   * one job is created, within the startWindow after the doNotRunUntil time,\n   * and the schedule is complete as soon as that job finishes. The minimum\n   * value is 1 minute. If you specify a lower value, the Batch service rejects\n   * the schedule with an error; if you are calling the REST API directly, the\n   * HTTP status code is 400 (Bad Request).\n   */\n  recurrenceInterval?: moment.Duration;\n}\n\n/**\n * @interface\n * An interface representing JobConstraints.\n * @summary The execution constraints for a job.\n *\n */\nexport interface JobConstraints {\n  /**\n   * @member {moment.Duration} [maxWallClockTime] The maximum elapsed time that\n   * the job may run, measured from the time the job is created. If the job\n   * does not complete within the time limit, the Batch service terminates it\n   * and any tasks that are still running. In this case, the termination reason\n   * will be MaxWallClockTimeExpiry. If this property is not specified, there\n   * is no time limit on how long the job may run.\n   */\n  maxWallClockTime?: moment.Duration;\n  /**\n   * @member {number} [maxTaskRetryCount] The maximum number of times each task\n   * may be retried. The Batch service retries a task if its exit code is\n   * nonzero. Note that this value specifically controls the number of retries.\n   * The Batch service will try each task once, and may then retry up to this\n   * limit. For example, if the maximum retry count is 3, Batch tries a task up\n   * to 4 times (one initial try and 3 retries). If the maximum retry count is\n   * 0, the Batch service does not retry tasks. If the maximum retry count is\n   * -1, the Batch service retries tasks without limit. The default value is 0\n   * (no retries).\n   */\n  maxTaskRetryCount?: number;\n}\n\n/**\n * @interface\n * An interface representing ContainerRegistry.\n * @summary A private container registry.\n *\n */\nexport interface ContainerRegistry {\n  /**\n   * @member {string} [registryServer] The registry URL. If omitted, the\n   * default is \"docker.io\".\n   */\n  registryServer?: string;\n  /**\n   * @member {string} userName The user name to log into the registry server.\n   */\n  userName: string;\n  /**\n   * @member {string} password The password to log into the registry server.\n   */\n  password: string;\n}\n\n/**\n * @interface\n * An interface representing TaskContainerSettings.\n * @summary The container settings for a task.\n *\n */\nexport interface TaskContainerSettings {\n  /**\n   * @member {string} [containerRunOptions] Additional options to the container\n   * create command. These additional options are supplied as arguments to the\n   * \"docker create\" command, in addition to those controlled by the Batch\n   * Service.\n   */\n  containerRunOptions?: string;\n  /**\n   * @member {string} imageName The image to use to create the container in\n   * which the task will run. This is the full image reference, as would be\n   * specified to \"docker pull\". If no tag is provided as part of the image\n   * name, the tag \":latest\" is used as a default.\n   */\n  imageName: string;\n  /**\n   * @member {ContainerRegistry} [registry] The private registry which contains\n   * the container image. This setting can be omitted if was already provided\n   * at pool creation.\n   */\n  registry?: ContainerRegistry;\n}\n\n/**\n * @interface\n * An interface representing ResourceFile.\n * @summary A file to be downloaded from Azure blob storage to a compute node.\n *\n */\nexport interface ResourceFile {\n  /**\n   * @member {string} blobSource The URL of the file within Azure Blob Storage.\n   * This URL must be readable using anonymous access; that is, the Batch\n   * service does not present any credentials when downloading the blob. There\n   * are two ways to get such a URL for a blob in Azure storage: include a\n   * Shared Access Signature (SAS) granting read permissions on the blob, or\n   * set the ACL for the blob or its container to allow public access.\n   */\n  blobSource: string;\n  /**\n   * @member {string} filePath The location on the compute node to which to\n   * download the file, relative to the task's working directory.\n   */\n  filePath: string;\n  /**\n   * @member {string} [fileMode] The file permission mode attribute in octal\n   * format. This property applies only to files being downloaded to Linux\n   * compute nodes. It will be ignored if it is specified for a resourceFile\n   * which will be downloaded to a Windows node. If this property is not\n   * specified for a Linux node, then a default value of 0770 is applied to the\n   * file.\n   */\n  fileMode?: string;\n}\n\n/**\n * @interface\n * An interface representing EnvironmentSetting.\n * @summary An environment variable to be set on a task process.\n *\n */\nexport interface EnvironmentSetting {\n  /**\n   * @member {string} name The name of the environment variable.\n   */\n  name: string;\n  /**\n   * @member {string} [value] The value of the environment variable.\n   */\n  value?: string;\n}\n\n/**\n * @interface\n * An interface representing ExitOptions.\n * @summary Specifies how the Batch service responds to a particular exit\n * condition.\n *\n */\nexport interface ExitOptions {\n  /**\n   * @member {string} [jobAction] An action to take on the job containing the\n   * task, if the task completes with the given exit condition and the job's\n   * onTaskFailed property is 'performExitOptionsJobAction'. Values are:\n   *\n   * none - Take no action.\n   * disable - Disable the job. This is equivalent to calling the disable job\n   * API, with a disableTasks value of requeue.\n   * terminate - Terminate the job. The terminateReason in the job's\n   * executionInfo is set to \"TaskFailed\". The default is none for exit code 0\n   * and terminate for all other exit conditions.\n   *\n   * If the job's onTaskFailed property is noAction, then specifying this\n   * property returns an error and the add task request fails with an invalid\n   * property value error; if you are calling the REST API directly, the HTTP\n   * status code is 400 (Bad Request). Possible values include: 'none',\n   * 'disable', 'terminate'\n   */\n  jobAction?: string;\n  /**\n   * @member {string} [dependencyAction] An action that the Batch service\n   * performs on tasks that depend on this task. Values are:\n   *\n   * satisfy - Satisfy the task's dependencies.\n   * block - Block the task's dependencies.\n   *\n   * The default is 'satisfy' for exit code 0, and 'block' for all other exit\n   * conditions. If the job's usesTaskDependencies property is set to false,\n   * then specifying the dependencyAction property returns an erro and the add\n   * task request fails with an invalid property value error; if you are\n   * calling the REST API directly, the HTTP status code is 400  (Bad Request).\n   * Possible values include: 'satisfy', 'block'\n   */\n  dependencyAction?: string;\n}\n\n/**\n * @interface\n * An interface representing ExitCodeMapping.\n * @summary How the Batch service should respond if a task exits with a\n * particular exit code.\n *\n */\nexport interface ExitCodeMapping {\n  /**\n   * @member {number} code A process exit code.\n   */\n  code: number;\n  /**\n   * @member {ExitOptions} exitOptions How the Batch service should respond if\n   * the task exits with this exit code.\n   */\n  exitOptions: ExitOptions;\n}\n\n/**\n * @interface\n * An interface representing ExitCodeRangeMapping.\n * @summary A range of exit codes and how the Batch service should respond to\n * exit codes within that range.\n *\n */\nexport interface ExitCodeRangeMapping {\n  /**\n   * @member {number} start The first exit code in the range.\n   */\n  start: number;\n  /**\n   * @member {number} end The last exit code in the range.\n   */\n  end: number;\n  /**\n   * @member {ExitOptions} exitOptions How the Batch service should respond if\n   * the task exits with an exit code in the range start to end (inclusive).\n   */\n  exitOptions: ExitOptions;\n}\n\n/**\n * @interface\n * An interface representing ExitConditions.\n * @summary Specifies how the Batch service should respond when the task\n * completes.\n *\n */\nexport interface ExitConditions {\n  /**\n   * @member {ExitCodeMapping[]} [exitCodes] A list of individual task exit\n   * codes and how the Batch service should respond to them.\n   */\n  exitCodes?: ExitCodeMapping[];\n  /**\n   * @member {ExitCodeRangeMapping[]} [exitCodeRanges] A list of task exit code\n   * ranges and how the Batch service should respond to them.\n   */\n  exitCodeRanges?: ExitCodeRangeMapping[];\n  /**\n   * @member {ExitOptions} [preProcessingError] How the Batch service should\n   * respond if the task fails to start due to an error.\n   */\n  preProcessingError?: ExitOptions;\n  /**\n   * @member {ExitOptions} [fileUploadError] How the Batch service should\n   * respond if a file upload error occurs. If the task exited with an exit\n   * code that was specified via exitCodes or exitCodeRanges, and then\n   * encountered a file upload error, then the action specified by the exit\n   * code takes precedence.\n   */\n  fileUploadError?: ExitOptions;\n  /**\n   * @member {ExitOptions} [default] How the Batch service should respond if\n   * the task fails with an exit condition not covered by any of the other\n   * properties. This value is used if the task exits with any nonzero exit\n   * code not listed in the exitCodes or exitCodeRanges collection, with a\n   * pre-processing error if the preProcessingError property is not present, or\n   * with a file upload error if the fileUploadError property is not present.\n   * If you want non-default behaviour on exit code 0, you must list it\n   * explicitly using the exitCodes or exitCodeRanges collection.\n   */\n  default?: ExitOptions;\n}\n\n/**\n * @interface\n * An interface representing AutoUserSpecification.\n * @summary Specifies the parameters for the auto user that runs a task on the\n * Batch service.\n *\n */\nexport interface AutoUserSpecification {\n  /**\n   * @member {string} [scope] The scope for the auto user. Values are:\n   *\n   * pool - specifies that the task runs as the common auto user account which\n   * is created on every node in a pool.\n   * task - specifies that the service should create a new user for the task.\n   * The default value is task. Possible values include: 'task', 'pool'\n   */\n  scope?: string;\n  /**\n   * @member {string} [elevationLevel] The elevation level of the auto user.\n   * nonAdmin - The auto user is a standard user without elevated access. admin\n   * - The auto user is a user with elevated access and operates with full\n   * Administrator permissions. The default value is nonAdmin. Possible values\n   * include: 'nonAdmin', 'admin'\n   */\n  elevationLevel?: string;\n}\n\n/**\n * @interface\n * An interface representing UserIdentity.\n * @summary The definition of the user identity under which the task is run.\n *\n * Specify either the userName or autoUser property, but not both.\n *\n */\nexport interface UserIdentity {\n  /**\n   * @member {string} [userName] The name of the user identity under which the\n   * task is run. The userName and autoUser properties are mutually exclusive;\n   * you must specify one but not both.\n   */\n  userName?: string;\n  /**\n   * @member {AutoUserSpecification} [autoUser] The auto user under which the\n   * task is run. The userName and autoUser properties are mutually exclusive;\n   * you must specify one but not both.\n   */\n  autoUser?: AutoUserSpecification;\n}\n\n/**\n * @interface\n * An interface representing LinuxUserConfiguration.\n * @summary Properties used to create a user account on a Linux node.\n *\n */\nexport interface LinuxUserConfiguration {\n  /**\n   * @member {number} [uid] The user ID of the user account. The uid and gid\n   * properties must be specified together or not at all. If not specified the\n   * underlying operating system picks the uid.\n   */\n  uid?: number;\n  /**\n   * @member {number} [gid] The group ID for the user account. The uid and gid\n   * properties must be specified together or not at all. If not specified the\n   * underlying operating system picks the gid.\n   */\n  gid?: number;\n  /**\n   * @member {string} [sshPrivateKey] The SSH private key for the user account.\n   * The private key must not be password protected. The private key is used to\n   * automatically configure asymmetric-key based authentication for SSH\n   * between nodes in a Linux pool when the pool's enableInterNodeCommunication\n   * property is true (it is ignored if enableInterNodeCommunication is false).\n   * It does this by placing the key pair into the user's .ssh directory. If\n   * not specified, password-less SSH is not configured between nodes (no\n   * modification of the user's .ssh directory is done).\n   */\n  sshPrivateKey?: string;\n}\n\n/**\n * @interface\n * An interface representing UserAccount.\n * @summary Properties used to create a user used to execute tasks on an Azure\n * Batch node.\n *\n */\nexport interface UserAccount {\n  /**\n   * @member {string} name The name of the user account.\n   */\n  name: string;\n  /**\n   * @member {string} password The password for the user account.\n   */\n  password: string;\n  /**\n   * @member {string} [elevationLevel] The elevation level of the user account.\n   * nonAdmin - The auto user is a standard user without elevated access. admin\n   * - The auto user is a user with elevated access and operates with full\n   * Administrator permissions. The default value is nonAdmin. Possible values\n   * include: 'nonAdmin', 'admin'\n   */\n  elevationLevel?: string;\n  /**\n   * @member {LinuxUserConfiguration} [linuxUserConfiguration] The\n   * Linux-specific user configuration for the user account. This property is\n   * ignored if specified on a Windows pool. If not specified, the user is\n   * created with the default options.\n   */\n  linuxUserConfiguration?: LinuxUserConfiguration;\n}\n\n/**\n * @interface\n * An interface representing TaskConstraints.\n * @summary Execution constraints to apply to a task.\n *\n */\nexport interface TaskConstraints {\n  /**\n   * @member {moment.Duration} [maxWallClockTime] The maximum elapsed time that\n   * the task may run, measured from the time the task starts. If the task does\n   * not complete within the time limit, the Batch service terminates it. If\n   * this is not specified, there is no time limit on how long the task may\n   * run.\n   */\n  maxWallClockTime?: moment.Duration;\n  /**\n   * @member {moment.Duration} [retentionTime] The minimum time to retain the\n   * task directory on the compute node where it ran, from the time it\n   * completes execution. After this time, the Batch service may delete the\n   * task directory and all its contents. The default is infinite, i.e. the\n   * task directory will be retained until the compute node is removed or\n   * reimaged.\n   */\n  retentionTime?: moment.Duration;\n  /**\n   * @member {number} [maxTaskRetryCount] The maximum number of times the task\n   * may be retried. The Batch service retries a task if its exit code is\n   * nonzero. Note that this value specifically controls the number of retries.\n   * The Batch service will try the task once, and may then retry up to this\n   * limit. For example, if the maximum retry count is 3, Batch tries the task\n   * up to 4 times (one initial try and 3 retries). If the maximum retry count\n   * is 0, the Batch service does not retry the task. If the maximum retry\n   * count is -1, the Batch service retries the task without limit.\n   */\n  maxTaskRetryCount?: number;\n}\n\n/**\n * @interface\n * An interface representing OutputFileBlobContainerDestination.\n * @summary Specifies a file upload destination within an Azure blob storage\n * container.\n *\n */\nexport interface OutputFileBlobContainerDestination {\n  /**\n   * @member {string} [path] The destination blob or virtual directory within\n   * the Azure Storage container. If filePattern refers to a specific file\n   * (i.e. contains no wildcards), then path is the name of the blob to which\n   * to upload that file. If filePattern contains one or more wildcards (and\n   * therefore may match multiple files), then path is the name of the blob\n   * virtual directory (which is prepended to each blob name) to which to\n   * upload the file(s). If omitted, file(s) are uploaded to the root of the\n   * container with a blob name matching their file name.\n   */\n  path?: string;\n  /**\n   * @member {string} containerUrl The URL of the container within Azure Blob\n   * Storage to which to upload the file(s). The URL must include a Shared\n   * Access Signature (SAS) granting write permissions to the container.\n   */\n  containerUrl: string;\n}\n\n/**\n * @interface\n * An interface representing OutputFileDestination.\n * @summary The destination to which a file should be uploaded.\n *\n */\nexport interface OutputFileDestination {\n  /**\n   * @member {OutputFileBlobContainerDestination} [container] A location in\n   * Azure blob storage to which files are uploaded.\n   */\n  container?: OutputFileBlobContainerDestination;\n}\n\n/**\n * @interface\n * An interface representing OutputFileUploadOptions.\n * @summary Details about an output file upload operation, including under what\n * conditions to perform the upload.\n *\n */\nexport interface OutputFileUploadOptions {\n  /**\n   * @member {string} uploadCondition The conditions under which the task\n   * output file or set of files should be uploaded. The default is\n   * taskCompletion. Possible values include: 'taskSuccess', 'taskFailure',\n   * 'taskCompletion'\n   */\n  uploadCondition: string;\n}\n\n/**\n * @interface\n * An interface representing OutputFile.\n * @summary A specification for uploading files from an Azure Batch node to\n * another location after the Batch service has finished executing the task\n * process.\n *\n */\nexport interface OutputFile {\n  /**\n   * @member {string} filePattern A pattern indicating which file(s) to upload.\n   * Both relative and absolute paths are supported. Relative paths are\n   * relative to the task working directory. The following wildcards are\n   * supported: * matches 0 or more characters (for example pattern abc* would\n   * match abc or abcdef), ** matches any directory, ? matches any single\n   * character, [abc] matches one character in the brackets, and [a-c] matches\n   * one character in the range. Brackets can include a negation to match any\n   * character not specified (for example [!abc] matches any character but a,\n   * b, or c). If a file name starts with \".\" it is ignored by default but may\n   * be matched by specifying it explicitly (for example *.gif will not match\n   * .a.gif, but .*.gif will). A simple example: **\\*.txt matches any file that\n   * does not start in '.' and ends with .txt in the task working directory or\n   * any subdirectory. If the filename contains a wildcard character it can be\n   * escaped using brackets (for example abc[*] would match a file named abc*).\n   * Note that both \\ and / are treated as directory separators on Windows, but\n   * only / is on Linux. Environment variables (%var% on Windows or $var on\n   * Linux) are expanded prior to the pattern being applied.\n   */\n  filePattern: string;\n  /**\n   * @member {OutputFileDestination} destination The destination for the output\n   * file(s).\n   */\n  destination: OutputFileDestination;\n  /**\n   * @member {OutputFileUploadOptions} uploadOptions Additional options for the\n   * upload operation, including under what conditions to perform the upload.\n   */\n  uploadOptions: OutputFileUploadOptions;\n}\n\n/**\n * @interface\n * An interface representing JobManagerTask.\n * @summary Specifies details of a Job Manager task.\n *\n * The Job Manager task is automatically started when the job is created. The\n * Batch service tries to schedule the Job Manager task before any other tasks\n * in the job. When shrinking a pool, the Batch service tries to preserve\n * compute nodes where Job Manager tasks are running for as long as possible\n * (that is, nodes running 'normal' tasks are removed before nodes running Job\n * Manager tasks). When a Job Manager task fails and needs to be restarted, the\n * system tries to schedule it at the highest priority. If there are no idle\n * nodes available, the system may terminate one of the running tasks in the\n * pool and return it to the queue in order to make room for the Job Manager\n * task to restart. Note that a Job Manager task in one job does not have\n * priority over tasks in other jobs. Across jobs, only job level priorities\n * are observed. For example, if a Job Manager in a priority 0 job needs to be\n * restarted, it will not displace tasks of a priority 1 job.\n *\n */\nexport interface JobManagerTask {\n  /**\n   * @member {string} id A string that uniquely identifies the Job Manager task\n   * within the job. The ID can contain any combination of alphanumeric\n   * characters including hyphens and underscores and cannot contain more than\n   * 64 characters.\n   */\n  id: string;\n  /**\n   * @member {string} [displayName] The display name of the Job Manager task.\n   * It need not be unique and can contain any Unicode characters up to a\n   * maximum length of 1024.\n   */\n  displayName?: string;\n  /**\n   * @member {string} commandLine The command line of the Job Manager task. The\n   * command line does not run under a shell, and therefore cannot take\n   * advantage of shell features such as environment variable expansion. If you\n   * want to take advantage of such features, you should invoke the shell in\n   * the command line, for example using \"cmd /c MyCommand\" in Windows or\n   * \"/bin/sh -c MyCommand\" in Linux.\n   */\n  commandLine: string;\n  /**\n   * @member {TaskContainerSettings} [containerSettings] The settings for the\n   * container under which the Job Manager task runs. If the pool that will run\n   * this task has containerConfiguration set, this must be set as well. If the\n   * pool that will run this task doesn't have containerConfiguration set, this\n   * must not be set. When this is specified, all directories recursively below\n   * the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the\n   * node) are mapped into the container, all task environment variables are\n   * mapped into the container, and the task command line is executed in the\n   * container.\n   */\n  containerSettings?: TaskContainerSettings;\n  /**\n   * @member {ResourceFile[]} [resourceFiles] A list of files that the Batch\n   * service will download to the compute node before running the command line.\n   * Files listed under this element are located in the task's working\n   * directory.\n   */\n  resourceFiles?: ResourceFile[];\n  /**\n   * @member {OutputFile[]} [outputFiles] A list of files that the Batch\n   * service will upload from the compute node after running the command line.\n   * For multi-instance tasks, the files will only be uploaded from the compute\n   * node on which the primary task is executed.\n   */\n  outputFiles?: OutputFile[];\n  /**\n   * @member {EnvironmentSetting[]} [environmentSettings] A list of environment\n   * variable settings for the Job Manager task.\n   */\n  environmentSettings?: EnvironmentSetting[];\n  /**\n   * @member {TaskConstraints} [constraints] Constraints that apply to the Job\n   * Manager task.\n   */\n  constraints?: TaskConstraints;\n  /**\n   * @member {boolean} [killJobOnCompletion] Whether completion of the Job\n   * Manager task signifies completion of the entire job. If true, when the Job\n   * Manager task completes, the Batch service marks the job as complete. If\n   * any tasks are still running at this time (other than Job Release), those\n   * tasks are terminated. If false, the completion of the Job Manager task\n   * does not affect the job status. In this case, you should either use the\n   * onAllTasksComplete attribute to terminate the job, or have a client or\n   * user terminate the job explicitly. An example of this is if the Job\n   * Manager creates a set of tasks but then takes no further role in their\n   * execution. The default value is true. If you are using the\n   * onAllTasksComplete and onTaskFailure attributes to control job lifetime,\n   * and using the Job Manager task only to create the tasks for the job (not\n   * to monitor progress), then it is important to set killJobOnCompletion to\n   * false.\n   */\n  killJobOnCompletion?: boolean;\n  /**\n   * @member {UserIdentity} [userIdentity] The user identity under which the\n   * Job Manager task runs. If omitted, the task runs as a non-administrative\n   * user unique to the task.\n   */\n  userIdentity?: UserIdentity;\n  /**\n   * @member {boolean} [runExclusive] Whether the Job Manager task requires\n   * exclusive use of the compute node where it runs. If true, no other tasks\n   * will run on the same compute node for as long as the Job Manager is\n   * running. If false, other tasks can run simultaneously with the Job Manager\n   * on a compute node. The Job Manager task counts normally against the node's\n   * concurrent task limit, so this is only relevant if the node allows\n   * multiple concurrent tasks. The default value is true.\n   */\n  runExclusive?: boolean;\n  /**\n   * @member {ApplicationPackageReference[]} [applicationPackageReferences] A\n   * list of application packages that the Batch service will deploy to the\n   * compute node before running the command line. Application packages are\n   * downloaded and deployed to a shared directory, not the task working\n   * directory. Therefore, if a referenced package is already on the compute\n   * node, and is up to date, then it is not re-downloaded; the existing copy\n   * on the compute node is used. If a referenced application package cannot be\n   * installed, for example because the package has been deleted or because\n   * download failed, the task fails.\n   */\n  applicationPackageReferences?: ApplicationPackageReference[];\n  /**\n   * @member {AuthenticationTokenSettings} [authenticationTokenSettings] The\n   * settings for an authentication token that the task can use to perform\n   * Batch service operations. If this property is set, the Batch service\n   * provides the task with an authentication token which can be used to\n   * authenticate Batch service operations without requiring an account access\n   * key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN\n   * environment variable. The operations that the task can carry out using the\n   * token depend on the settings. For example, a task can request job\n   * permissions in order to add other tasks to the job, or check the status of\n   * the job or of other tasks under the job.\n   */\n  authenticationTokenSettings?: AuthenticationTokenSettings;\n  /**\n   * @member {boolean} [allowLowPriorityNode] Whether the Job Manager task may\n   * run on a low-priority compute node. The default value is false.\n   */\n  allowLowPriorityNode?: boolean;\n}\n\n/**\n * @interface\n * An interface representing JobPreparationTask.\n * @summary A Job Preparation task to run before any tasks of the job on any\n * given compute node.\n *\n * You can use Job Preparation to prepare a compute node to run tasks for the\n * job. Activities commonly performed in Job Preparation include: Downloading\n * common resource files used by all the tasks in the job. The Job Preparation\n * task can download these common resource files to the shared location on the\n * compute node. (AZ_BATCH_NODE_ROOT_DIR\\shared), or starting a local service\n * on the compute node so that all tasks of that job can communicate with it.\n * If the Job Preparation task fails (that is, exhausts its retry count before\n * exiting with exit code 0), Batch will not run tasks of this job on the\n * compute node. The node remains ineligible to run tasks of this job until it\n * is reimaged. The node remains active and can be used for other jobs. The Job\n * Preparation task can run multiple times on the same compute node. Therefore,\n * you should write the Job Preparation task to handle re-execution. If the\n * compute node is rebooted, the Job Preparation task is run again on the node\n * before scheduling any other task of the job, if\n * rerunOnNodeRebootAfterSuccess is true or if the Job Preparation task did not\n * previously complete. If the compute node is reimaged, the Job Preparation\n * task is run again before scheduling any task of the job.\n *\n */\nexport interface JobPreparationTask {\n  /**\n   * @member {string} [id] A string that uniquely identifies the Job\n   * Preparation task within the job. The ID can contain any combination of\n   * alphanumeric characters including hyphens and underscores and cannot\n   * contain more than 64 characters. If you do not specify this property, the\n   * Batch service assigns a default value of 'jobpreparation'. No other task\n   * in the job can have the same ID as the Job Preparation task. If you try to\n   * submit a task with the same id, the Batch service rejects the request with\n   * error code TaskIdSameAsJobPreparationTask; if you are calling the REST API\n   * directly, the HTTP status code is 409 (Conflict).\n   */\n  id?: string;\n  /**\n   * @member {string} commandLine The command line of the Job Preparation task.\n   * The command line does not run under a shell, and therefore cannot take\n   * advantage of shell features such as environment variable expansion. If you\n   * want to take advantage of such features, you should invoke the shell in\n   * the command line, for example using \"cmd /c MyCommand\" in Windows or\n   * \"/bin/sh -c MyCommand\" in Linux.\n   */\n  commandLine: string;\n  /**\n   * @member {TaskContainerSettings} [containerSettings] The settings for the\n   * container under which the Job Preparation task runs. When this is\n   * specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR\n   * (the root of Azure Batch directories on the node) are mapped into the\n   * container, all task environment variables are mapped into the container,\n   * and the task command line is executed in the container.\n   */\n  containerSettings?: TaskContainerSettings;\n  /**\n   * @member {ResourceFile[]} [resourceFiles] A list of files that the Batch\n   * service will download to the compute node before running the command line.\n   * Files listed under this element are located in the task's working\n   * directory.\n   */\n  resourceFiles?: ResourceFile[];\n  /**\n   * @member {EnvironmentSetting[]} [environmentSettings] A list of environment\n   * variable settings for the Job Preparation task.\n   */\n  environmentSettings?: EnvironmentSetting[];\n  /**\n   * @member {TaskConstraints} [constraints] Constraints that apply to the Job\n   * Preparation task.\n   */\n  constraints?: TaskConstraints;\n  /**\n   * @member {boolean} [waitForSuccess] Whether the Batch service should wait\n   * for the Job Preparation task to complete successfully before scheduling\n   * any other tasks of the job on the compute node. A Job Preparation task has\n   * completed successfully if it exits with exit code 0. If true and the Job\n   * Preparation task fails on a compute node, the Batch service retries the\n   * Job Preparation task up to its maximum retry count (as specified in the\n   * constraints element). If the task has still not completed successfully\n   * after all retries, then the Batch service will not schedule tasks of the\n   * job to the compute node. The compute node remains active and eligible to\n   * run tasks of other jobs. If false, the Batch service will not wait for the\n   * Job Preparation task to complete. In this case, other tasks of the job can\n   * start executing on the compute node while the Job Preparation task is\n   * still running; and even if the Job Preparation task fails, new tasks will\n   * continue to be scheduled on the node. The default value is true.\n   */\n  waitForSuccess?: boolean;\n  /**\n   * @member {UserIdentity} [userIdentity] The user identity under which the\n   * Job Preparation task runs. If omitted, the task runs as a\n   * non-administrative user unique to the task on Windows nodes, or a a\n   * non-administrative user unique to the pool on Linux nodes.\n   */\n  userIdentity?: UserIdentity;\n  /**\n   * @member {boolean} [rerunOnNodeRebootAfterSuccess] Whether the Batch\n   * service should rerun the Job Preparation task after a compute node\n   * reboots. The Job Preparation task is always rerun if a compute node is\n   * reimaged, or if the Job Preparation task did not complete (e.g. because\n   * the reboot occurred while the task was running). Therefore, you should\n   * always write a Job Preparation task to be idempotent and to behave\n   * correctly if run multiple times. The default value is true.\n   */\n  rerunOnNodeRebootAfterSuccess?: boolean;\n}\n\n/**\n * @interface\n * An interface representing JobReleaseTask.\n * @summary A Job Release task to run on job completion on any compute node\n * where the job has run.\n *\n * The Job Release task runs when the job ends, because of one of the\n * following: The user calls the Terminate Job API, or the Delete Job API while\n * the job is still active, the job's maximum wall clock time constraint is\n * reached, and the job is still active, or the job's Job Manager task\n * completed, and the job is configured to terminate when the Job Manager\n * completes. The Job Release task runs on each compute node where tasks of the\n * job have run and the Job Preparation task ran and completed. If you reimage\n * a compute node after it has run the Job Preparation task, and the job ends\n * without any further tasks of the job running on that compute node (and hence\n * the Job Preparation task does not re-run), then the Job Release task does\n * not run on that node. If a compute node reboots while the Job Release task\n * is still running, the Job Release task runs again when the compute node\n * starts up. The job is not marked as complete until all Job Release tasks\n * have completed. The Job Release task runs in the background. It does not\n * occupy a scheduling slot; that is, it does not count towards the\n * maxTasksPerNode limit specified on the pool.\n *\n */\nexport interface JobReleaseTask {\n  /**\n   * @member {string} [id] A string that uniquely identifies the Job Release\n   * task within the job. The ID can contain any combination of alphanumeric\n   * characters including hyphens and underscores and cannot contain more than\n   * 64 characters. If you do not specify this property, the Batch service\n   * assigns a default value of 'jobrelease'. No other task in the job can have\n   * the same ID as the Job Release task. If you try to submit a task with the\n   * same id, the Batch service rejects the request with error code\n   * TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the\n   * HTTP status code is 409 (Conflict).\n   */\n  id?: string;\n  /**\n   * @member {string} commandLine The command line of the Job Release task. The\n   * command line does not run under a shell, and therefore cannot take\n   * advantage of shell features such as environment variable expansion. If you\n   * want to take advantage of such features, you should invoke the shell in\n   * the command line, for example using \"cmd /c MyCommand\" in Windows or\n   * \"/bin/sh -c MyCommand\" in Linux.\n   */\n  commandLine: string;\n  /**\n   * @member {TaskContainerSettings} [containerSettings] The settings for the\n   * container under which the Job Release task runs. When this is specified,\n   * all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of\n   * Azure Batch directories on the node) are mapped into the container, all\n   * task environment variables are mapped into the container, and the task\n   * command line is executed in the container.\n   */\n  containerSettings?: TaskContainerSettings;\n  /**\n   * @member {ResourceFile[]} [resourceFiles] A list of files that the Batch\n   * service will download to the compute node before running the command line.\n   * Files listed under this element are located in the task's working\n   * directory.\n   */\n  resourceFiles?: ResourceFile[];\n  /**\n   * @member {EnvironmentSetting[]} [environmentSettings] A list of environment\n   * variable settings for the Job Release task.\n   */\n  environmentSettings?: EnvironmentSetting[];\n  /**\n   * @member {moment.Duration} [maxWallClockTime] The maximum elapsed time that\n   * the Job Release task may run on a given compute node, measured from the\n   * time the task starts. If the task does not complete within the time limit,\n   * the Batch service terminates it. The default value is 15 minutes. You may\n   * not specify a timeout longer than 15 minutes. If you do, the Batch service\n   * rejects it with an error; if you are calling the REST API directly, the\n   * HTTP status code is 400 (Bad Request).\n   */\n  maxWallClockTime?: moment.Duration;\n  /**\n   * @member {moment.Duration} [retentionTime] The minimum time to retain the\n   * task directory for the Job Release task on the compute node. After this\n   * time, the Batch service may delete the task directory and all its\n   * contents. The default is infinite, i.e. the task directory will be\n   * retained until the compute node is removed or reimaged.\n   */\n  retentionTime?: moment.Duration;\n  /**\n   * @member {UserIdentity} [userIdentity] The user identity under which the\n   * Job Release task runs. If omitted, the task runs as a non-administrative\n   * user unique to the task.\n   */\n  userIdentity?: UserIdentity;\n}\n\n/**\n * @interface\n * An interface representing TaskSchedulingPolicy.\n * @summary Specifies how tasks should be distributed across compute nodes.\n *\n */\nexport interface TaskSchedulingPolicy {\n  /**\n   * @member {string} nodeFillType How tasks are distributed across compute\n   * nodes in a pool. Values are:\n   *\n   * pack - As many tasks as possible (maxTasksPerNode) should be assigned to\n   * each node in the pool before any tasks are assigned to the next node in\n   * the pool.\n   * spread - Tasks should be assigned evenly across all nodes in the pool.\n   * Possible values include: 'spread', 'pack'\n   */\n  nodeFillType: string;\n}\n\n/**\n * @interface\n * An interface representing StartTask.\n * @summary A task which is run when a compute node joins a pool in the Azure\n * Batch service, or when the compute node is rebooted or reimaged.\n *\n */\nexport interface StartTask {\n  /**\n   * @member {string} commandLine The command line of the start task. The\n   * command line does not run under a shell, and therefore cannot take\n   * advantage of shell features such as environment variable expansion. If you\n   * want to take advantage of such features, you should invoke the shell in\n   * the command line, for example using \"cmd /c MyCommand\" in Windows or\n   * \"/bin/sh -c MyCommand\" in Linux.\n   */\n  commandLine: string;\n  /**\n   * @member {TaskContainerSettings} [containerSettings] The settings for the\n   * container under which the start task runs. When this is specified, all\n   * directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of\n   * Azure Batch directories on the node) are mapped into the container, all\n   * task environment variables are mapped into the container, and the task\n   * command line is executed in the container.\n   */\n  containerSettings?: TaskContainerSettings;\n  /**\n   * @member {ResourceFile[]} [resourceFiles] A list of files that the Batch\n   * service will download to the compute node before running the command line.\n   * Files listed under this element are located in the task's working\n   * directory.\n   */\n  resourceFiles?: ResourceFile[];\n  /**\n   * @member {EnvironmentSetting[]} [environmentSettings] A list of environment\n   * variable settings for the start task.\n   */\n  environmentSettings?: EnvironmentSetting[];\n  /**\n   * @member {UserIdentity} [userIdentity] The user identity under which the\n   * start task runs. If omitted, the task runs as a non-administrative user\n   * unique to the task.\n   */\n  userIdentity?: UserIdentity;\n  /**\n   * @member {number} [maxTaskRetryCount] The maximum number of times the task\n   * may be retried. The Batch service retries a task if its exit code is\n   * nonzero. Note that this value specifically controls the number of retries.\n   * The Batch service will try the task once, and may then retry up to this\n   * limit. For example, if the maximum retry count is 3, Batch tries the task\n   * up to 4 times (one initial try and 3 retries). If the maximum retry count\n   * is 0, the Batch service does not retry the task. If the maximum retry\n   * count is -1, the Batch service retries the task without limit.\n   */\n  maxTaskRetryCount?: number;\n  /**\n   * @member {boolean} [waitForSuccess] Whether the Batch service should wait\n   * for the start task to complete successfully (that is, to exit with exit\n   * code 0) before scheduling any tasks on the compute node. If true and the\n   * start task fails on a compute node, the Batch service retries the start\n   * task up to its maximum retry count (maxTaskRetryCount). If the task has\n   * still not completed successfully after all retries, then the Batch service\n   * marks the compute node unusable, and will not schedule tasks to it. This\n   * condition can be detected via the node state and failure info details. If\n   * false, the Batch service will not wait for the start task to complete. In\n   * this case, other tasks can start executing on the compute node while the\n   * start task is still running; and even if the start task fails, new tasks\n   * will continue to be scheduled on the node. The default is false.\n   */\n  waitForSuccess?: boolean;\n}\n\n/**\n * @interface\n * An interface representing CertificateReference.\n * @summary A reference to a certificate to be installed on compute nodes in a\n * pool.\n *\n */\nexport interface CertificateReference {\n  /**\n   * @member {string} thumbprint The thumbprint of the certificate.\n   */\n  thumbprint: string;\n  /**\n   * @member {string} thumbprintAlgorithm The algorithm with which the\n   * thumbprint is associated. This must be sha1.\n   */\n  thumbprintAlgorithm: string;\n  /**\n   * @member {string} [storeLocation] The location of the certificate store on\n   * the compute node into which to install the certificate. The default value\n   * is currentUser. This property is applicable only for pools configured with\n   * Windows nodes (that is, created with cloudServiceConfiguration, or with\n   * virtualMachineConfiguration using a Windows image reference). For Linux\n   * compute nodes, the certificates are stored in a directory inside the task\n   * working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is\n   * supplied to the task to query for this location. For certificates with\n   * visibility of 'remoteUser', a 'certs' directory is created in the user's\n   * home directory (e.g., /home/{user-name}/certs) and certificates are placed\n   * in that directory. Possible values include: 'currentUser', 'localMachine'\n   */\n  storeLocation?: string;\n  /**\n   * @member {string} [storeName] The name of the certificate store on the\n   * compute node into which to install the certificate. This property is\n   * applicable only for pools configured with Windows nodes (that is, created\n   * with cloudServiceConfiguration, or with virtualMachineConfiguration using\n   * a Windows image reference). Common store names include: My, Root, CA,\n   * Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook,\n   * but any custom store name can also be used. The default value is My.\n   */\n  storeName?: string;\n  /**\n   * @member {string[]} [visibility] Which user accounts on the compute node\n   * should have access to the private data of the certificate. Values are:\n   *\n   * starttask - The user account under which the start task is run.\n   * task - The accounts under which job tasks are run.\n   * remoteuser - The accounts under which users remotely access the node.\n   *\n   * You can specify more than one visibility in this collection. The default\n   * is all accounts.\n   */\n  visibility?: string[];\n}\n\n/**\n * @interface\n * An interface representing MetadataItem.\n * @summary A name-value pair associated with a Batch service resource.\n *\n * The Batch service does not assign any meaning to this metadata; it is solely\n * for the use of user code.\n *\n */\nexport interface MetadataItem {\n  /**\n   * @member {string} name The name of the metadata item.\n   */\n  name: string;\n  /**\n   * @member {string} value The value of the metadata item.\n   */\n  value: string;\n}\n\n/**\n * @interface\n * An interface representing CloudServiceConfiguration.\n * @summary The configuration for nodes in a pool based on the Azure Cloud\n * Services platform.\n *\n */\nexport interface CloudServiceConfiguration {\n  /**\n   * @member {string} osFamily The Azure Guest OS family to be installed on the\n   * virtual machines in the pool. Possible values are: 2 - OS Family 2,\n   * equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3, equivalent to\n   * Windows Server 2012. 4 - OS Family 4, equivalent to Windows Server 2012\n   * R2. 5 - OS Family 5, equivalent to Windows Server 2016. For more\n   * information, see Azure Guest OS Releases\n   * (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).\n   */\n  osFamily: string;\n  /**\n   * @member {string} [targetOSVersion] The Azure Guest OS version to be\n   * installed on the virtual machines in the pool. The default value is *\n   * which specifies the latest operating system version for the specified OS\n   * family.\n   */\n  targetOSVersion?: string;\n  /**\n   * @member {string} [currentOSVersion] The Azure Guest OS Version currently\n   * installed on the virtual machines in the pool. This may differ from\n   * targetOSVersion if the pool state is Upgrading. In this case some virtual\n   * machines may be on the targetOSVersion and some may be on the\n   * currentOSVersion during the upgrade process. Once all virtual machines\n   * have upgraded, currentOSVersion is updated to be the same as\n   * targetOSVersion.\n   */\n  readonly currentOSVersion?: string;\n}\n\n/**\n * @interface\n * An interface representing OSDisk.\n * @summary Settings for the operating system disk of the virtual machine.\n *\n */\nexport interface OSDisk {\n  /**\n   * @member {string} [caching] The type of caching to enable for the OS disk.\n   * Values are:\n   *\n   * none - The caching mode for the disk is not enabled.\n   * readOnly - The caching mode for the disk is read only.\n   * readWrite - The caching mode for the disk is read and write.\n   *\n   * The default value for caching is none. For information about the caching\n   * options see:\n   * https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.\n   * Possible values include: 'none', 'readOnly', 'readWrite'\n   */\n  caching?: string;\n}\n\n/**\n * @interface\n * An interface representing WindowsConfiguration.\n * @summary Windows operating system settings to apply to the virtual machine.\n *\n */\nexport interface WindowsConfiguration {\n  /**\n   * @member {boolean} [enableAutomaticUpdates] Whether automatic updates are\n   * enabled on the virtual machine. If omitted, the default value is true.\n   */\n  enableAutomaticUpdates?: boolean;\n}\n\n/**\n * @interface\n * An interface representing DataDisk.\n * @summary Settings which will be used by the data disks associated to compute\n * nodes in the pool.\n *\n */\nexport interface DataDisk {\n  /**\n   * @member {number} lun The logical unit number. The lun is used to uniquely\n   * identify each data disk. If attaching multiple disks, each should have a\n   * distinct lun.\n   */\n  lun: number;\n  /**\n   * @member {string} [caching] The type of caching to be enabled for the data\n   * disks. Values are:\n   *\n   * none - The caching mode for the disk is not enabled.\n   * readOnly - The caching mode for the disk is read only.\n   * readWrite - The caching mode for the disk is read and write.\n   *\n   * The default value for caching is none. For information about the caching\n   * options see:\n   * https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.\n   * Possible values include: 'none', 'readOnly', 'readWrite'\n   */\n  caching?: string;\n  /**\n   * @member {number} diskSizeGB The initial disk size in gigabytes.\n   */\n  diskSizeGB: number;\n  /**\n   * @member {string} [storageAccountType] The storage account type to be used\n   * for the data disk. If omitted, the default is \"Standard_LRS\". Values are:\n   *\n   * Standard_LRS - The data disk should use standard locally redundant\n   * storage.\n   * Premium_LRS - The data disk should use premium locally redundant storage.\n   * Possible values include: 'Standard_LRS', 'Premium_LRS'\n   */\n  storageAccountType?: string;\n}\n\n/**\n * @interface\n * An interface representing ContainerConfiguration.\n * @summary The configuration for container-enabled pools.\n *\n */\nexport interface ContainerConfiguration {\n  /**\n   * @member {string[]} [containerImageNames] The collection of container image\n   * names. This is the full image reference, as would be specified to \"docker\n   * pull\". An image will be sourced from the default Docker registry unless\n   * the image is fully qualified with an alternative registry.\n   */\n  containerImageNames?: string[];\n  /**\n   * @member {ContainerRegistry[]} [containerRegistries] Additional private\n   * registries from which containers can be pulled. If any images must be\n   * downloaded from a private registry which requires credentials, then those\n   * credentials must be provided here.\n   */\n  containerRegistries?: ContainerRegistry[];\n}\n\n/**\n * @interface\n * An interface representing VirtualMachineConfiguration.\n * @summary The configuration for compute nodes in a pool based on the Azure\n * Virtual Machines infrastructure.\n *\n */\nexport interface VirtualMachineConfiguration {\n  /**\n   * @member {ImageReference} imageReference A reference to the Azure Virtual\n   * Machines Marketplace image or the custom Virtual Machine image to use.\n   */\n  imageReference: ImageReference;\n  /**\n   * @member {OSDisk} [osDisk] Settings for the operating system disk of the\n   * Virtual Machine.\n   */\n  osDisk?: OSDisk;\n  /**\n   * @member {string} nodeAgentSKUId The SKU of the Batch node agent to be\n   * provisioned on compute nodes in the pool. The Batch node agent is a\n   * program that runs on each node in the pool, and provides the\n   * command-and-control interface between the node and the Batch service.\n   * There are different implementations of the node agent, known as SKUs, for\n   * different operating systems. You must specify a node agent SKU which\n   * matches the selected image reference. To get the list of supported node\n   * agent SKUs along with their list of verified image references, see the\n   * 'List supported node agent SKUs' operation.\n   */\n  nodeAgentSKUId: string;\n  /**\n   * @member {WindowsConfiguration} [windowsConfiguration] Windows operating\n   * system settings on the virtual machine. This property must not be\n   * specified if the imageReference or osDisk property specifies a Linux OS\n   * image.\n   */\n  windowsConfiguration?: WindowsConfiguration;\n  /**\n   * @member {DataDisk[]} [dataDisks] The configuration for data disks attached\n   * to the comptue nodes in the pool. This property must be specified if the\n   * compute nodes in the pool need to have empty data disks attached to them.\n   * This cannot be updated.\n   */\n  dataDisks?: DataDisk[];\n  /**\n   * @member {string} [licenseType] The type of on-premises license to be used\n   * when deploying the operating system. This only applies to images that\n   * contain the Windows operating system, and should only be used when you\n   * hold valid on-premises licenses for the nodes which will be deployed. If\n   * omitted, no on-premises licensing discount is applied. Values are:\n   *\n   * Windows_Server - The on-premises license is for Windows Server.\n   * Windows_Client - The on-premises license is for Windows Client.\n   */\n  licenseType?: string;\n  /**\n   * @member {ContainerConfiguration} [containerConfiguration] The container\n   * configuration for the pool. If specified, setup is performed on each node\n   * in the pool to allow tasks to run in containers. All regular tasks and job\n   * manager tasks run on this pool must specify the containerSettings\n   * property, and all other tasks may specify it.\n   */\n  containerConfiguration?: ContainerConfiguration;\n}\n\n/**\n * @interface\n * An interface representing NetworkSecurityGroupRule.\n * @summary A network security group rule to apply to an inbound endpoint.\n *\n */\nexport interface NetworkSecurityGroupRule {\n  /**\n   * @member {number} priority The priority for this rule. Priorities within a\n   * pool must be unique and are evaluated in order of priority. The lower the\n   * number the higher the priority. For example, rules could be specified with\n   * order numbers of 150, 250, and 350. The rule with the order number of 150\n   * takes precedence over the rule that has an order of 250. Allowed\n   * priorities are 150 to 3500. If any reserved or duplicate values are\n   * provided the request fails with HTTP status code 400.\n   */\n  priority: number;\n  /**\n   * @member {string} access The action that should be taken for a specified IP\n   * address, subnet range or tag. Possible values include: 'allow', 'deny'\n   */\n  access: string;\n  /**\n   * @member {string} sourceAddressPrefix The source address prefix or tag to\n   * match for the rule. Valid values are a single IP address (i.e.\n   * 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all\n   * addresses).  If any other values are provided the request fails with HTTP\n   * status code 400.\n   */\n  sourceAddressPrefix: string;\n}\n\n/**\n * @interface\n * An interface representing InboundNATPool.\n * @summary A inbound NAT pool that can be used to address specific ports on\n * compute nodes in a Batch pool externally.\n *\n */\nexport interface InboundNATPool {\n  /**\n   * @member {string} name The name of the endpoint. The name must be unique\n   * within a Batch pool, can contain letters, numbers, underscores, periods,\n   * and hyphens. Names must start with a letter or number, must end with a\n   * letter, number, or underscore, and cannot exceed 77 characters.  If any\n   * invalid values are provided the request fails with HTTP status code 400.\n   */\n  name: string;\n  /**\n   * @member {string} protocol The protocol of the endpoint. Possible values\n   * include: 'tcp', 'udp'\n   */\n  protocol: string;\n  /**\n   * @member {number} backendPort The port number on the compute node. This\n   * must be unique within a Batch pool. Acceptable values are between 1 and\n   * 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any\n   * reserved values are provided the request fails with HTTP status code 400.\n   */\n  backendPort: number;\n  /**\n   * @member {number} frontendPortRangeStart The first port number in the range\n   * of external ports that will be used to provide inbound access to the\n   * backendPort on individual compute nodes. Acceptable values range between 1\n   * and 65534 except ports from 50000 to 55000 which are reserved. All ranges\n   * within a pool must be distinct and cannot overlap. If any reserved or\n   * overlapping values are provided the request fails with HTTP status code\n   * 400.\n   */\n  frontendPortRangeStart: number;\n  /**\n   * @member {number} frontendPortRangeEnd The last port number in the range of\n   * external ports that will be used to provide inbound access to the\n   * backendPort on individual compute nodes. Acceptable values range between 1\n   * and 65534 except ports from 50000 to 55000 which are reserved by the Batch\n   * service. All ranges within a pool must be distinct and cannot overlap. If\n   * any reserved or overlapping values are provided the request fails with\n   * HTTP status code 400.\n   */\n  frontendPortRangeEnd: number;\n  /**\n   * @member {NetworkSecurityGroupRule[]} [networkSecurityGroupRules] A list of\n   * network security group rules that will be applied to the endpoint. The\n   * maximum number of rules that can be specified across all the endpoints on\n   * a Batch pool is 25. If no network security group rules are specified, a\n   * default rule will be created to allow inbound access to the specified\n   * backendPort. If the maximum number of network security group rules is\n   * exceeded the request fails with HTTP status code 400.\n   */\n  networkSecurityGroupRules?: NetworkSecurityGroupRule[];\n}\n\n/**\n * @interface\n * An interface representing PoolEndpointConfiguration.\n * @summary The endpoint configuration for a pool.\n *\n */\nexport interface PoolEndpointConfiguration {\n  /**\n   * @member {InboundNATPool[]} inboundNATPools A list of inbound NAT pools\n   * that can be used to address specific ports on an individual compute node\n   * externally. The maximum number of inbound NAT pools per Batch pool is 5.\n   * If the maximum number of inbound NAT pools is exceeded the request fails\n   * with HTTP status code 400.\n   */\n  inboundNATPools: InboundNATPool[];\n}\n\n/**\n * @interface\n * An interface representing NetworkConfiguration.\n * The network configuration for a pool.\n *\n */\nexport interface NetworkConfiguration {\n  /**\n   * @member {string} [subnetId] The ARM resource identifier of the virtual\n   * network subnet which the compute nodes of the pool will join. This is of\n   * the form\n   * /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.\n   * The virtual network must be in the same region and subscription as the\n   * Azure Batch account. The specified subnet should have enough free IP\n   * addresses to accommodate the number of nodes in the pool. If the subnet\n   * doesn't have enough free IP addresses, the pool will partially allocate\n   * compute nodes, and a resize error will occur. The 'MicrosoftAzureBatch'\n   * service principal must have the 'Classic Virtual Machine Contributor'\n   * Role-Based Access Control (RBAC) role for the specified VNet. The\n   * specified subnet must allow communication from the Azure Batch service to\n   * be able to schedule tasks on the compute nodes. This can be verified by\n   * checking if the specified VNet has any associated Network Security Groups\n   * (NSG). If communication to the compute nodes in the specified subnet is\n   * denied by an NSG, then the Batch service will set the state of the compute\n   * nodes to unusable. For pools created with virtualMachineConfiguration only\n   * ARM virtual networks ('Microsoft.Network/virtualNetworks') are supported,\n   * but for pools created with cloudServiceConfiguration both ARM and classic\n   * virtual networks are supported. If the specified VNet has any associated\n   * Network Security Groups (NSG), then a few reserved system ports must be\n   * enabled for inbound communication. For pools created with a virtual\n   * machine configuration, enable ports 29876 and 29877, as well as port 22\n   * for Linux and port 3389 for Windows. For pools created with a cloud\n   * service configuration, enable ports 10100, 20100, and 30100. Also enable\n   * outbound connections to Azure Storage on port 443. For more details see:\n   * https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration\n   */\n  subnetId?: string;\n  /**\n   * @member {PoolEndpointConfiguration} [endpointConfiguration] The\n   * configuration for endpoints on compute nodes in the Batch pool. Pool\n   * endpoint configuration is only supported on pools with the\n   * virtualMachineConfiguration property.\n   */\n  endpointConfiguration?: PoolEndpointConfiguration;\n}\n\n/**\n * @interface\n * An interface representing PoolSpecification.\n * @summary Specification for creating a new pool.\n *\n */\nexport interface PoolSpecification {\n  /**\n   * @member {string} [displayName] The display name for the pool. The display\n   * name need not be unique and can contain any Unicode characters up to a\n   * maximum length of 1024.\n   */\n  displayName?: string;\n  /**\n   * @member {string} vmSize The size of the virtual machines in the pool. All\n   * virtual machines in a pool are the same size. For information about\n   * available sizes of virtual machines for Cloud Services pools (pools\n   * created with cloudServiceConfiguration), see Sizes for Cloud Services\n   * (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).\n   * Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and\n   * A2V2. For information about available VM sizes for pools using images from\n   * the Virtual Machines Marketplace (pools created with\n   * virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)\n   * (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)\n   * or Sizes for Virtual Machines (Windows)\n   * (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).\n   * Batch supports all Azure VM sizes except STANDARD_A0 and those with\n   * premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).\n   */\n  vmSize: string;\n  /**\n   * @member {CloudServiceConfiguration} [cloudServiceConfiguration] The cloud\n   * service configuration for the pool. This property must be specified if the\n   * pool needs to be created with Azure PaaS VMs. This property and\n   * virtualMachineConfiguration are mutually exclusive and one of the\n   * properties must be specified. If neither is specified then the Batch\n   * service returns an error; if you are calling the REST API directly, the\n   * HTTP status code is 400 (Bad Request). This property cannot be specified\n   * if the Batch account was created with its poolAllocationMode property set\n   * to 'UserSubscription'.\n   */\n  cloudServiceConfiguration?: CloudServiceConfiguration;\n  /**\n   * @member {VirtualMachineConfiguration} [virtualMachineConfiguration] The\n   * virtual machine configuration for the pool. This property must be\n   * specified if the pool needs to be created with Azure IaaS VMs. This\n   * property and cloudServiceConfiguration are mutually exclusive and one of\n   * the properties must be specified. If neither is specified then the Batch\n   * service returns an error; if you are calling the REST API directly, the\n   * HTTP status code is 400 (Bad Request).\n   */\n  virtualMachineConfiguration?: VirtualMachineConfiguration;\n  /**\n   * @member {number} [maxTasksPerNode] The maximum number of tasks that can\n   * run concurrently on a single compute node in the pool. The default value\n   * is 1. The maximum value of this setting depends on the size of the compute\n   * nodes in the pool (the vmSize setting).\n   */\n  maxTasksPerNode?: number;\n  /**\n   * @member {TaskSchedulingPolicy} [taskSchedulingPolicy] How tasks are\n   * distributed across compute nodes in a pool.\n   */\n  taskSchedulingPolicy?: TaskSchedulingPolicy;\n  /**\n   * @member {moment.Duration} [resizeTimeout] The timeout for allocation of\n   * compute nodes to the pool. This timeout applies only to manual scaling; it\n   * has no effect when enableAutoScale is set to true. The default value is 15\n   * minutes. The minimum value is 5 minutes. If you specify a value less than\n   * 5 minutes, the Batch service rejects the request with an error; if you are\n   * calling the REST API directly, the HTTP status code is 400 (Bad Request).\n   */\n  resizeTimeout?: moment.Duration;\n  /**\n   * @member {number} [targetDedicatedNodes] The desired number of dedicated\n   * compute nodes in the pool. This property must not be specified if\n   * enableAutoScale is set to true. If enableAutoScale is set to false, then\n   * you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.\n   */\n  targetDedicatedNodes?: number;\n  /**\n   * @member {number} [targetLowPriorityNodes] The desired number of\n   * low-priority compute nodes in the pool. This property must not be\n   * specified if enableAutoScale is set to true. If enableAutoScale is set to\n   * false, then you must set either targetDedicatedNodes,\n   * targetLowPriorityNodes, or both.\n   */\n  targetLowPriorityNodes?: number;\n  /**\n   * @member {boolean} [enableAutoScale] Whether the pool size should\n   * automatically adjust over time. If false, at least one of\n   * targetDedicateNodes and targetLowPriorityNodes must be specified. If true,\n   * the autoScaleFormula element is required. The pool automatically resizes\n   * according to the formula. The default value is false.\n   */\n  enableAutoScale?: boolean;\n  /**\n   * @member {string} [autoScaleFormula] The formula for the desired number of\n   * compute nodes in the pool. This property must not be specified if\n   * enableAutoScale is set to false. It is required if enableAutoScale is set\n   * to true. The formula is checked for validity before the pool is created.\n   * If the formula is not valid, the Batch service rejects the request with\n   * detailed error information.\n   */\n  autoScaleFormula?: string;\n  /**\n   * @member {moment.Duration} [autoScaleEvaluationInterval] The time interval\n   * at which to automatically adjust the pool size according to the autoscale\n   * formula. The default value is 15 minutes. The minimum and maximum value\n   * are 5 minutes and 168 hours respectively. If you specify a value less than\n   * 5 minutes or greater than 168 hours, the Batch service rejects the request\n   * with an invalid property value error; if you are calling the REST API\n   * directly, the HTTP status code is 400 (Bad Request).\n   */\n  autoScaleEvaluationInterval?: moment.Duration;\n  /**\n   * @member {boolean} [enableInterNodeCommunication] Whether the pool permits\n   * direct communication between nodes. Enabling inter-node communication\n   * limits the maximum size of the pool due to deployment restrictions on the\n   * nodes of the pool. This may result in the pool not reaching its desired\n   * size. The default value is false.\n   */\n  enableInterNodeCommunication?: boolean;\n  /**\n   * @member {NetworkConfiguration} [networkConfiguration] The network\n   * configuration for the pool.\n   */\n  networkConfiguration?: NetworkConfiguration;\n  /**\n   * @member {StartTask} [startTask] A task to run on each compute node as it\n   * joins the pool. The task runs when the node is added to the pool or when\n   * the node is restarted.\n   */\n  startTask?: StartTask;\n  /**\n   * @member {CertificateReference[]} [certificateReferences] A list of\n   * certificates to be installed on each compute node in the pool. For Windows\n   * compute nodes, the Batch service installs the certificates to the\n   * specified certificate store and location. For Linux compute nodes, the\n   * certificates are stored in a directory inside the task working directory\n   * and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the\n   * task to query for this location. For certificates with visibility of\n   * 'remoteUser', a 'certs' directory is created in the user's home directory\n   * (e.g., /home/{user-name}/certs) and certificates are placed in that\n   * directory.\n   */\n  certificateReferences?: CertificateReference[];\n  /**\n   * @member {ApplicationPackageReference[]} [applicationPackageReferences] The\n   * list of application packages to be installed on each compute node in the\n   * pool.\n   */\n  applicationPackageReferences?: ApplicationPackageReference[];\n  /**\n   * @member {string[]} [applicationLicenses] The list of application licenses\n   * the Batch service will make available on each compute node in the pool.\n   * The list of application licenses must be a subset of available Batch\n   * service application licenses. If a license is requested which is not\n   * supported, pool creation will fail.\n   */\n  applicationLicenses?: string[];\n  /**\n   * @member {UserAccount[]} [userAccounts] The list of user accounts to be\n   * created on each node in the pool.\n   */\n  userAccounts?: UserAccount[];\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the pool as metadata. The Batch service does not assign any meaning\n   * to metadata; it is solely for the use of user code.\n   */\n  metadata?: MetadataItem[];\n}\n\n/**\n * @interface\n * An interface representing AutoPoolSpecification.\n * @summary Specifies characteristics for a temporary 'auto pool'. The Batch\n * service will create this auto pool when the job is submitted.\n *\n */\nexport interface AutoPoolSpecification {\n  /**\n   * @member {string} [autoPoolIdPrefix] A prefix to be added to the unique\n   * identifier when a pool is automatically created. The Batch service assigns\n   * each auto pool a unique identifier on creation. To distinguish between\n   * pools created for different purposes, you can specify this element to add\n   * a prefix to the ID that is assigned. The prefix can be up to 20 characters\n   * long.\n   */\n  autoPoolIdPrefix?: string;\n  /**\n   * @member {string} poolLifetimeOption The minimum lifetime of created auto\n   * pools, and how multiple jobs on a schedule are assigned to pools. When the\n   * pool lifetime is jobSchedule the pool exists for the lifetime of the job\n   * schedule. The Batch Service creates the pool when it creates the first job\n   * on the schedule. You may apply this option only to job schedules, not to\n   * jobs. When the pool lifetime is job the pool exists for the lifetime of\n   * the job to which it is dedicated. The Batch service creates the pool when\n   * it creates the job. If the 'job' option is applied to a job schedule, the\n   * Batch service creates a new auto pool for every job created on the\n   * schedule. Possible values include: 'jobSchedule', 'job'\n   */\n  poolLifetimeOption: string;\n  /**\n   * @member {boolean} [keepAlive] Whether to keep an auto pool alive after its\n   * lifetime expires. If false, the Batch service deletes the pool once its\n   * lifetime (as determined by the poolLifetimeOption setting) expires; that\n   * is, when the job or job schedule completes. If true, the Batch service\n   * does not delete the pool automatically. It is up to the user to delete\n   * auto pools created with this option.\n   */\n  keepAlive?: boolean;\n  /**\n   * @member {PoolSpecification} [pool] The pool specification for the auto\n   * pool.\n   */\n  pool?: PoolSpecification;\n}\n\n/**\n * @interface\n * An interface representing PoolInformation.\n * @summary Specifies how a job should be assigned to a pool.\n *\n */\nexport interface PoolInformation {\n  /**\n   * @member {string} [poolId] The ID of an existing pool. All the tasks of the\n   * job will run on the specified pool. You must ensure that the pool\n   * referenced by this property exists. If the pool does not exist at the time\n   * the Batch service tries to schedule a job, no tasks for the job will run\n   * until you create a pool with that id. Note that the Batch service will not\n   * reject the job request; it will simply not run tasks until the pool\n   * exists. You must specify either the pool ID or the auto pool\n   * specification, but not both.\n   */\n  poolId?: string;\n  /**\n   * @member {AutoPoolSpecification} [autoPoolSpecification] Characteristics\n   * for a temporary 'auto pool'. The Batch service will create this auto pool\n   * when the job is submitted. If auto pool creation fails, the Batch service\n   * moves the job to a completed state, and the pool creation error is set in\n   * the job's scheduling error property. The Batch service manages the\n   * lifetime (both creation and, unless keepAlive is specified, deletion) of\n   * the auto pool. Any user actions that affect the lifetime of the auto pool\n   * while the job is active will result in unexpected behavior. You must\n   * specify either the pool ID or the auto pool specification, but not both.\n   */\n  autoPoolSpecification?: AutoPoolSpecification;\n}\n\n/**\n * @interface\n * An interface representing JobSpecification.\n * @summary Specifies details of the jobs to be created on a schedule.\n *\n */\nexport interface JobSpecification {\n  /**\n   * @member {number} [priority] The priority of jobs created under this\n   * schedule. Priority values can range from -1000 to 1000, with -1000 being\n   * the lowest priority and 1000 being the highest priority. The default value\n   * is 0. This priority is used as the default for all jobs under the job\n   * schedule. You can update a job's priority after it has been created using\n   * by using the update job API.\n   */\n  priority?: number;\n  /**\n   * @member {string} [displayName] The display name for jobs created under\n   * this schedule. The name need not be unique and can contain any Unicode\n   * characters up to a maximum length of 1024.\n   */\n  displayName?: string;\n  /**\n   * @member {boolean} [usesTaskDependencies] Whether tasks in the job can\n   * define dependencies on each other. The default is false.\n   */\n  usesTaskDependencies?: boolean;\n  /**\n   * @member {string} [onAllTasksComplete] The action the Batch service should\n   * take when all tasks in a job created under this schedule are in the\n   * completed state. Note that if a job contains no tasks, then all tasks are\n   * considered complete. This option is therefore most commonly used with a\n   * Job Manager task; if you want to use automatic job termination without a\n   * Job Manager, you should initially set onAllTasksComplete to noAction and\n   * update the job properties to set onAllTasksComplete to terminateJob once\n   * you have finished adding tasks. The default is noAction. Possible values\n   * include: 'noAction', 'terminateJob'\n   */\n  onAllTasksComplete?: string;\n  /**\n   * @member {string} [onTaskFailure] The action the Batch service should take\n   * when any task fails in a job created under this schedule. A task is\n   * considered to have failed if it have failed if has a failureInfo. A\n   * failureInfo is set if the task completes with a non-zero exit code after\n   * exhausting its retry count, or if there was an error starting the task,\n   * for example due to a resource file download error. The default is\n   * noAction. Possible values include: 'noAction',\n   * 'performExitOptionsJobAction'\n   */\n  onTaskFailure?: string;\n  /**\n   * @member {JobConstraints} [constraints] The execution constraints for jobs\n   * created under this schedule.\n   */\n  constraints?: JobConstraints;\n  /**\n   * @member {JobManagerTask} [jobManagerTask] The details of a Job Manager\n   * task to be launched when a job is started under this schedule. If the job\n   * does not specify a Job Manager task, the user must explicitly add tasks to\n   * the job using the Task API. If the job does specify a Job Manager task,\n   * the Batch service creates the Job Manager task when the job is created,\n   * and will try to schedule the Job Manager task before scheduling other\n   * tasks in the job.\n   */\n  jobManagerTask?: JobManagerTask;\n  /**\n   * @member {JobPreparationTask} [jobPreparationTask] The Job Preparation task\n   * for jobs created under this schedule. If a job has a Job Preparation task,\n   * the Batch service will run the Job Preparation task on a compute node\n   * before starting any tasks of that job on that compute node.\n   */\n  jobPreparationTask?: JobPreparationTask;\n  /**\n   * @member {JobReleaseTask} [jobReleaseTask] The Job Release task for jobs\n   * created under this schedule. The primary purpose of the Job Release task\n   * is to undo changes to compute nodes made by the Job Preparation task.\n   * Example activities include deleting local files, or shutting down services\n   * that were started as part of job preparation. A Job Release task cannot be\n   * specified without also specifying a Job Preparation task for the job. The\n   * Batch service runs the Job Release task on the compute nodes that have run\n   * the Job Preparation task.\n   */\n  jobReleaseTask?: JobReleaseTask;\n  /**\n   * @member {EnvironmentSetting[]} [commonEnvironmentSettings] A list of\n   * common environment variable settings. These environment variables are set\n   * for all tasks in jobs created under this schedule (including the Job\n   * Manager, Job Preparation and Job Release tasks). Individual tasks can\n   * override an environment setting specified here by specifying the same\n   * setting name with a different value.\n   */\n  commonEnvironmentSettings?: EnvironmentSetting[];\n  /**\n   * @member {PoolInformation} poolInfo The pool on which the Batch service\n   * runs the tasks of jobs created under this schedule.\n   */\n  poolInfo: PoolInformation;\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with each job created under this schedule as metadata. The Batch service\n   * does not assign any meaning to metadata; it is solely for the use of user\n   * code.\n   */\n  metadata?: MetadataItem[];\n}\n\n/**\n * @interface\n * An interface representing RecentJob.\n * @summary Information about the most recent job to run under the job\n * schedule.\n *\n */\nexport interface RecentJob {\n  /**\n   * @member {string} [id] The ID of the job.\n   */\n  id?: string;\n  /**\n   * @member {string} [url] The URL of the job.\n   */\n  url?: string;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleExecutionInformation.\n * @summary Contains information about jobs that have been and will be run\n * under a job schedule.\n *\n */\nexport interface JobScheduleExecutionInformation {\n  /**\n   * @member {Date} [nextRunTime] The next time at which a job will be created\n   * under this schedule. This property is meaningful only if the schedule is\n   * in the active state when the time comes around. For example, if the\n   * schedule is disabled, no job will be created at nextRunTime unless the job\n   * is enabled before then.\n   */\n  nextRunTime?: Date;\n  /**\n   * @member {RecentJob} [recentJob] Information about the most recent job\n   * under the job schedule. This property is present only if the at least one\n   * job has run under the schedule.\n   */\n  recentJob?: RecentJob;\n  /**\n   * @member {Date} [endTime] The time at which the schedule ended. This\n   * property is set only if the job schedule is in the completed state.\n   */\n  endTime?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleStatistics.\n * @summary Resource usage statistics for a job schedule.\n *\n */\nexport interface JobScheduleStatistics {\n  /**\n   * @member {string} url The URL of the statistics.\n   */\n  url: string;\n  /**\n   * @member {Date} startTime The start time of the time range covered by the\n   * statistics.\n   */\n  startTime: Date;\n  /**\n   * @member {Date} lastUpdateTime The time at which the statistics were last\n   * updated. All statistics are limited to the range between startTime and\n   * lastUpdateTime.\n   */\n  lastUpdateTime: Date;\n  /**\n   * @member {moment.Duration} userCPUTime The total user mode CPU time (summed\n   * across all cores and all compute nodes) consumed by all tasks in all jobs\n   * created under the schedule.\n   */\n  userCPUTime: moment.Duration;\n  /**\n   * @member {moment.Duration} kernelCPUTime The total kernel mode CPU time\n   * (summed across all cores and all compute nodes) consumed by all tasks in\n   * all jobs created under the schedule.\n   */\n  kernelCPUTime: moment.Duration;\n  /**\n   * @member {moment.Duration} wallClockTime The total wall clock time of all\n   * the tasks in all the jobs created under the schedule. The wall clock time\n   * is the elapsed time from when the task started running on a compute node\n   * to when it finished (or to the last time the statistics were updated, if\n   * the task had not finished by then). If a task was retried, this includes\n   * the wall clock time of all the task retries.\n   */\n  wallClockTime: moment.Duration;\n  /**\n   * @member {number} readIOps The total number of disk read operations made by\n   * all tasks in all jobs created under the schedule.\n   */\n  readIOps: number;\n  /**\n   * @member {number} writeIOps The total number of disk write operations made\n   * by all tasks in all jobs created under the schedule.\n   */\n  writeIOps: number;\n  /**\n   * @member {number} readIOGiB The total gibibytes read from disk by all tasks\n   * in all jobs created under the schedule.\n   */\n  readIOGiB: number;\n  /**\n   * @member {number} writeIOGiB The total gibibytes written to disk by all\n   * tasks in all jobs created under the schedule.\n   */\n  writeIOGiB: number;\n  /**\n   * @member {number} numSucceededTasks The total number of tasks successfully\n   * completed during the given time range in jobs created under the schedule.\n   * A task completes successfully if it returns exit code 0.\n   */\n  numSucceededTasks: number;\n  /**\n   * @member {number} numFailedTasks The total number of tasks that failed\n   * during the given time range in jobs created under the schedule. A task\n   * fails if it exhausts its maximum retry count without returning exit code\n   * 0.\n   */\n  numFailedTasks: number;\n  /**\n   * @member {number} numTaskRetries The total number of retries during the\n   * given time range on all tasks in all jobs created under the schedule.\n   */\n  numTaskRetries: number;\n  /**\n   * @member {moment.Duration} waitTime The total wait time of all tasks in all\n   * jobs created under the schedule. The wait time for a task is defined as\n   * the elapsed time between the creation of the task and the start of task\n   * execution. (If the task is retried due to failures, the wait time is the\n   * time to the most recent task execution.). This value is only reported in\n   * the account lifetime statistics; it is not included in the job statistics.\n   */\n  waitTime: moment.Duration;\n}\n\n/**\n * @interface\n * An interface representing CloudJobSchedule.\n * @summary A job schedule that allows recurring jobs by specifying when to run\n * jobs and a specification used to create each job.\n *\n */\nexport interface CloudJobSchedule {\n  /**\n   * @member {string} [id] A string that uniquely identifies the schedule\n   * within the account.\n   */\n  id?: string;\n  /**\n   * @member {string} [displayName] The display name for the schedule.\n   */\n  displayName?: string;\n  /**\n   * @member {string} [url] The URL of the job schedule.\n   */\n  url?: string;\n  /**\n   * @member {string} [eTag] The ETag of the job schedule. This is an opaque\n   * string. You can use it to detect whether the job schedule has changed\n   * between requests. In particular, you can be pass the ETag with an Update\n   * Job Schedule request to specify that your changes should take effect only\n   * if nobody else has modified the schedule in the meantime.\n   */\n  eTag?: string;\n  /**\n   * @member {Date} [lastModified] The last modified time of the job schedule.\n   * This is the last time at which the schedule level data, such as the job\n   * specification or recurrence information, changed. It does not factor in\n   * job-level changes such as new jobs being created or jobs changing state.\n   */\n  lastModified?: Date;\n  /**\n   * @member {Date} [creationTime] The creation time of the job schedule.\n   */\n  creationTime?: Date;\n  /**\n   * @member {string} [state] The current state of the job schedule. Possible\n   * values include: 'active', 'completed', 'disabled', 'terminating',\n   * 'deleting'\n   */\n  state?: string;\n  /**\n   * @member {Date} [stateTransitionTime] The time at which the job schedule\n   * entered the current state.\n   */\n  stateTransitionTime?: Date;\n  /**\n   * @member {string} [previousState] The previous state of the job schedule.\n   * This property is not present if the job schedule is in its initial active\n   * state. Possible values include: 'active', 'completed', 'disabled',\n   * 'terminating', 'deleting'\n   */\n  previousState?: string;\n  /**\n   * @member {Date} [previousStateTransitionTime] The time at which the job\n   * schedule entered its previous state. This property is not present if the\n   * job schedule is in its initial active state.\n   */\n  previousStateTransitionTime?: Date;\n  /**\n   * @member {Schedule} [schedule] The schedule according to which jobs will be\n   * created.\n   */\n  schedule?: Schedule;\n  /**\n   * @member {JobSpecification} [jobSpecification] The details of the jobs to\n   * be created on this schedule.\n   */\n  jobSpecification?: JobSpecification;\n  /**\n   * @member {JobScheduleExecutionInformation} [executionInfo] Information\n   * about jobs that have been and will be run under this schedule.\n   */\n  executionInfo?: JobScheduleExecutionInformation;\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the schedule as metadata. The Batch service does not assign any\n   * meaning to metadata; it is solely for the use of user code.\n   */\n  metadata?: MetadataItem[];\n  /**\n   * @member {JobScheduleStatistics} [stats] The lifetime resource usage\n   * statistics for the job schedule.\n   */\n  stats?: JobScheduleStatistics;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleAddParameter.\n * @summary A job schedule that allows recurring jobs by specifying when to run\n * jobs and a specification used to create each job.\n *\n */\nexport interface JobScheduleAddParameter {\n  /**\n   * @member {string} id A string that uniquely identifies the schedule within\n   * the account. The ID can contain any combination of alphanumeric characters\n   * including hyphens and underscores, and cannot contain more than 64\n   * characters. The ID is case-preserving and case-insensitive (that is, you\n   * may not have two IDs within an account that differ only by case).\n   */\n  id: string;\n  /**\n   * @member {string} [displayName] The display name for the schedule. The\n   * display name need not be unique and can contain any Unicode characters up\n   * to a maximum length of 1024.\n   */\n  displayName?: string;\n  /**\n   * @member {Schedule} schedule The schedule according to which jobs will be\n   * created.\n   */\n  schedule: Schedule;\n  /**\n   * @member {JobSpecification} jobSpecification The details of the jobs to be\n   * created on this schedule.\n   */\n  jobSpecification: JobSpecification;\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the schedule as metadata. The Batch service does not assign any\n   * meaning to metadata; it is solely for the use of user code.\n   */\n  metadata?: MetadataItem[];\n}\n\n/**\n * @interface\n * An interface representing JobSchedulingError.\n * @summary An error encountered by the Batch service when scheduling a job.\n *\n */\nexport interface JobSchedulingError {\n  /**\n   * @member {string} category The category of the job scheduling error.\n   * Possible values include: 'userError', 'serverError'\n   */\n  category: string;\n  /**\n   * @member {string} [code] An identifier for the job scheduling error. Codes\n   * are invariant and are intended to be consumed programmatically.\n   */\n  code?: string;\n  /**\n   * @member {string} [message] A message describing the job scheduling error,\n   * intended to be suitable for display in a user interface.\n   */\n  message?: string;\n  /**\n   * @member {NameValuePair[]} [details] A list of additional error details\n   * related to the scheduling error.\n   */\n  details?: NameValuePair[];\n}\n\n/**\n * @interface\n * An interface representing JobExecutionInformation.\n * @summary Contains information about the execution of a job in the Azure\n * Batch service.\n *\n */\nexport interface JobExecutionInformation {\n  /**\n   * @member {Date} startTime The start time of the job. This is the time at\n   * which the job was created.\n   */\n  startTime: Date;\n  /**\n   * @member {Date} [endTime] The completion time of the job. This property is\n   * set only if the job is in the completed state.\n   */\n  endTime?: Date;\n  /**\n   * @member {string} [poolId] The ID of the pool to which this job is\n   * assigned. This element contains the actual pool where the job is assigned.\n   * When you get job details from the service, they also contain a poolInfo\n   * element, which contains the pool configuration data from when the job was\n   * added or updated. That poolInfo element may also contain a poolId element.\n   * If it does, the two IDs are the same. If it does not, it means the job ran\n   * on an auto pool, and this property contains the ID of that auto pool.\n   */\n  poolId?: string;\n  /**\n   * @member {JobSchedulingError} [schedulingError] Details of any error\n   * encountered by the service in starting the job. This property is not set\n   * if there was no error starting the job.\n   */\n  schedulingError?: JobSchedulingError;\n  /**\n   * @member {string} [terminateReason] A string describing the reason the job\n   * ended. This property is set only if the job is in the completed state. If\n   * the Batch service terminates the job, it sets the reason as follows:\n   * JMComplete - the Job Manager task completed, and killJobOnCompletion was\n   * set to true. MaxWallClockTimeExpiry - the job reached its maxWallClockTime\n   * constraint. TerminateJobSchedule - the job ran as part of a schedule, and\n   * the schedule terminated. AllTasksComplete - the job's onAllTasksComplete\n   * attribute is set to terminateJob, and all tasks in the job are complete.\n   * TaskFailed - the job's onTaskFailure attribute is set to\n   * performExitOptionsJobAction, and a task in the job failed with an exit\n   * condition that specified a jobAction of terminateJob. Any other string is\n   * a user-defined reason specified in a call to the 'Terminate a job'\n   * operation.\n   */\n  terminateReason?: string;\n}\n\n/**\n * @interface\n * An interface representing CloudJob.\n * @summary An Azure Batch job.\n *\n */\nexport interface CloudJob {\n  /**\n   * @member {string} [id] A string that uniquely identifies the job within the\n   * account. The ID is case-preserving and case-insensitive (that is, you may\n   * not have two IDs within an account that differ only by case).\n   */\n  id?: string;\n  /**\n   * @member {string} [displayName] The display name for the job.\n   */\n  displayName?: string;\n  /**\n   * @member {boolean} [usesTaskDependencies] Whether tasks in the job can\n   * define dependencies on each other. The default is false.\n   */\n  usesTaskDependencies?: boolean;\n  /**\n   * @member {string} [url] The URL of the job.\n   */\n  url?: string;\n  /**\n   * @member {string} [eTag] The ETag of the job. This is an opaque string. You\n   * can use it to detect whether the job has changed between requests. In\n   * particular, you can be pass the ETag when updating a job to specify that\n   * your changes should take effect only if nobody else has modified the job\n   * in the meantime.\n   */\n  eTag?: string;\n  /**\n   * @member {Date} [lastModified] The last modified time of the job. This is\n   * the last time at which the job level data, such as the job state or\n   * priority, changed. It does not factor in task-level changes such as adding\n   * new tasks or tasks changing state.\n   */\n  lastModified?: Date;\n  /**\n   * @member {Date} [creationTime] The creation time of the job.\n   */\n  creationTime?: Date;\n  /**\n   * @member {string} [state] The current state of the job. Possible values\n   * include: 'active', 'disabling', 'disabled', 'enabling', 'terminating',\n   * 'completed', 'deleting'\n   */\n  state?: string;\n  /**\n   * @member {Date} [stateTransitionTime] The time at which the job entered its\n   * current state.\n   */\n  stateTransitionTime?: Date;\n  /**\n   * @member {string} [previousState] The previous state of the job. This\n   * property is not set if the job is in its initial Active state. Possible\n   * values include: 'active', 'disabling', 'disabled', 'enabling',\n   * 'terminating', 'completed', 'deleting'\n   */\n  previousState?: string;\n  /**\n   * @member {Date} [previousStateTransitionTime] The time at which the job\n   * entered its previous state. This property is not set if the job is in its\n   * initial Active state.\n   */\n  previousStateTransitionTime?: Date;\n  /**\n   * @member {number} [priority] The priority of the job. Priority values can\n   * range from -1000 to 1000, with -1000 being the lowest priority and 1000\n   * being the highest priority. The default value is 0.\n   */\n  priority?: number;\n  /**\n   * @member {JobConstraints} [constraints] The execution constraints for the\n   * job.\n   */\n  constraints?: JobConstraints;\n  /**\n   * @member {JobManagerTask} [jobManagerTask] Details of a Job Manager task to\n   * be launched when the job is started.\n   */\n  jobManagerTask?: JobManagerTask;\n  /**\n   * @member {JobPreparationTask} [jobPreparationTask] The Job Preparation\n   * task. The Job Preparation task is a special task run on each node before\n   * any other task of the job.\n   */\n  jobPreparationTask?: JobPreparationTask;\n  /**\n   * @member {JobReleaseTask} [jobReleaseTask] The Job Release task. The Job\n   * Release task is a special task run at the end of the job on each node that\n   * has run any other task of the job.\n   */\n  jobReleaseTask?: JobReleaseTask;\n  /**\n   * @member {EnvironmentSetting[]} [commonEnvironmentSettings] The list of\n   * common environment variable settings. These environment variables are set\n   * for all tasks in the job (including the Job Manager, Job Preparation and\n   * Job Release tasks). Individual tasks can override an environment setting\n   * specified here by specifying the same setting name with a different value.\n   */\n  commonEnvironmentSettings?: EnvironmentSetting[];\n  /**\n   * @member {PoolInformation} [poolInfo] The pool settings associated with the\n   * job.\n   */\n  poolInfo?: PoolInformation;\n  /**\n   * @member {string} [onAllTasksComplete] The action the Batch service should\n   * take when all tasks in the job are in the completed state. noAction - do\n   * nothing. The job remains active unless terminated or disabled by some\n   * other means. terminateJob - terminate the job. The job's terminateReason\n   * is set to 'AllTasksComplete'. The default is noAction. Possible values\n   * include: 'noAction', 'terminateJob'\n   */\n  onAllTasksComplete?: string;\n  /**\n   * @member {string} [onTaskFailure] The action the Batch service should take\n   * when any task in the job fails. A task is considered to have failed if has\n   * a failureInfo. A failureInfo is set if the task completes with a non-zero\n   * exit code after exhausting its retry count, or if there was an error\n   * starting the task, for example due to a resource file download error.\n   * noAction - do nothing. performExitOptionsJobAction - take the action\n   * associated with the task exit condition in the task's exitConditions\n   * collection. (This may still result in no action being taken, if that is\n   * what the task specifies.) The default is noAction. Possible values\n   * include: 'noAction', 'performExitOptionsJobAction'\n   */\n  onTaskFailure?: string;\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the job as metadata. The Batch service does not assign any meaning to\n   * metadata; it is solely for the use of user code.\n   */\n  metadata?: MetadataItem[];\n  /**\n   * @member {JobExecutionInformation} [executionInfo] The execution\n   * information for the job.\n   */\n  executionInfo?: JobExecutionInformation;\n  /**\n   * @member {JobStatistics} [stats] Resource usage statistics for the entire\n   * lifetime of the job.\n   */\n  stats?: JobStatistics;\n}\n\n/**\n * @interface\n * An interface representing JobAddParameter.\n * @summary An Azure Batch job to add.\n *\n */\nexport interface JobAddParameter {\n  /**\n   * @member {string} id A string that uniquely identifies the job within the\n   * account. The ID can contain any combination of alphanumeric characters\n   * including hyphens and underscores, and cannot contain more than 64\n   * characters. The ID is case-preserving and case-insensitive (that is, you\n   * may not have two IDs within an account that differ only by case).\n   */\n  id: string;\n  /**\n   * @member {string} [displayName] The display name for the job. The display\n   * name need not be unique and can contain any Unicode characters up to a\n   * maximum length of 1024.\n   */\n  displayName?: string;\n  /**\n   * @member {number} [priority] The priority of the job. Priority values can\n   * range from -1000 to 1000, with -1000 being the lowest priority and 1000\n   * being the highest priority. The default value is 0.\n   */\n  priority?: number;\n  /**\n   * @member {JobConstraints} [constraints] The execution constraints for the\n   * job.\n   */\n  constraints?: JobConstraints;\n  /**\n   * @member {JobManagerTask} [jobManagerTask] Details of a Job Manager task to\n   * be launched when the job is started. If the job does not specify a Job\n   * Manager task, the user must explicitly add tasks to the job. If the job\n   * does specify a Job Manager task, the Batch service creates the Job Manager\n   * task when the job is created, and will try to schedule the Job Manager\n   * task before scheduling other tasks in the job. The Job Manager task's\n   * typical purpose is to control and/or monitor job execution, for example by\n   * deciding what additional tasks to run, determining when the work is\n   * complete, etc. (However, a Job Manager task is not restricted to these\n   * activities - it is a fully-fledged task in the system and perform whatever\n   * actions are required for the job.) For example, a Job Manager task might\n   * download a file specified as a parameter, analyze the contents of that\n   * file and submit additional tasks based on those contents.\n   */\n  jobManagerTask?: JobManagerTask;\n  /**\n   * @member {JobPreparationTask} [jobPreparationTask] The Job Preparation\n   * task. If a job has a Job Preparation task, the Batch service will run the\n   * Job Preparation task on a compute node before starting any tasks of that\n   * job on that compute node.\n   */\n  jobPreparationTask?: JobPreparationTask;\n  /**\n   * @member {JobReleaseTask} [jobReleaseTask] The Job Release task. A Job\n   * Release task cannot be specified without also specifying a Job Preparation\n   * task for the job. The Batch service runs the Job Release task on the\n   * compute nodes that have run the Job Preparation task. The primary purpose\n   * of the Job Release task is to undo changes to compute nodes made by the\n   * Job Preparation task. Example activities include deleting local files, or\n   * shutting down services that were started as part of job preparation.\n   */\n  jobReleaseTask?: JobReleaseTask;\n  /**\n   * @member {EnvironmentSetting[]} [commonEnvironmentSettings] The list of\n   * common environment variable settings. These environment variables are set\n   * for all tasks in the job (including the Job Manager, Job Preparation and\n   * Job Release tasks). Individual tasks can override an environment setting\n   * specified here by specifying the same setting name with a different value.\n   */\n  commonEnvironmentSettings?: EnvironmentSetting[];\n  /**\n   * @member {PoolInformation} poolInfo The pool on which the Batch service\n   * runs the job's tasks.\n   */\n  poolInfo: PoolInformation;\n  /**\n   * @member {string} [onAllTasksComplete] The action the Batch service should\n   * take when all tasks in the job are in the completed state. Note that if a\n   * job contains no tasks, then all tasks are considered complete. This option\n   * is therefore most commonly used with a Job Manager task; if you want to\n   * use automatic job termination without a Job Manager, you should initially\n   * set onAllTasksComplete to noAction and update the job properties to set\n   * onAllTasksComplete to terminateJob once you have finished adding tasks.\n   * Permitted values are: noAction - do nothing. The job remains active unless\n   * terminated or disabled by some other means. terminateJob - terminate the\n   * job. The job's terminateReason is set to 'AllTasksComplete'. The default\n   * is noAction. Possible values include: 'noAction', 'terminateJob'\n   */\n  onAllTasksComplete?: string;\n  /**\n   * @member {string} [onTaskFailure] The action the Batch service should take\n   * when any task in the job fails. A task is considered to have failed if has\n   * a failureInfo. A failureInfo is set if the task completes with a non-zero\n   * exit code after exhausting its retry count, or if there was an error\n   * starting the task, for example due to a resource file download error.\n   * noAction - do nothing. performExitOptionsJobAction - take the action\n   * associated with the task exit condition in the task's exitConditions\n   * collection. (This may still result in no action being taken, if that is\n   * what the task specifies.) The default is noAction. Possible values\n   * include: 'noAction', 'performExitOptionsJobAction'\n   */\n  onTaskFailure?: string;\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the job as metadata. The Batch service does not assign any meaning to\n   * metadata; it is solely for the use of user code.\n   */\n  metadata?: MetadataItem[];\n  /**\n   * @member {boolean} [usesTaskDependencies] Whether tasks in the job can\n   * define dependencies on each other. The default is false.\n   */\n  usesTaskDependencies?: boolean;\n}\n\n/**\n * @interface\n * An interface representing TaskContainerExecutionInformation.\n * @summary Contains information about the container which a task is executing.\n *\n */\nexport interface TaskContainerExecutionInformation {\n  /**\n   * @member {string} [containerId] The ID of the container.\n   */\n  containerId?: string;\n  /**\n   * @member {string} [state] The state of the container. This is the state of\n   * the container according to the Docker service. It is equivalent to the\n   * status field returned by \"docker inspect\".\n   */\n  state?: string;\n  /**\n   * @member {string} [error] Detailed error information about the container.\n   * This is the detailed error string from the Docker service, if available.\n   * It is equivalent to the error field returned by \"docker inspect\".\n   */\n  error?: string;\n}\n\n/**\n * @interface\n * An interface representing TaskFailureInformation.\n * @summary Information about a task failure.\n *\n */\nexport interface TaskFailureInformation {\n  /**\n   * @member {string} category The category of the task error. Possible values\n   * include: 'userError', 'serverError'\n   */\n  category: string;\n  /**\n   * @member {string} [code] An identifier for the task error. Codes are\n   * invariant and are intended to be consumed programmatically.\n   */\n  code?: string;\n  /**\n   * @member {string} [message] A message describing the task error, intended\n   * to be suitable for display in a user interface.\n   */\n  message?: string;\n  /**\n   * @member {NameValuePair[]} [details] A list of additional details related\n   * to the error.\n   */\n  details?: NameValuePair[];\n}\n\n/**\n * @interface\n * An interface representing JobPreparationTaskExecutionInformation.\n * @summary Contains information about the execution of a Job Preparation task\n * on a compute node.\n *\n */\nexport interface JobPreparationTaskExecutionInformation {\n  /**\n   * @member {Date} startTime The time at which the task started running. If\n   * the task has been restarted or retried, this is the most recent time at\n   * which the task started running.\n   */\n  startTime: Date;\n  /**\n   * @member {Date} [endTime] The time at which the Job Preparation task\n   * completed. This property is set only if the task is in the Completed\n   * state.\n   */\n  endTime?: Date;\n  /**\n   * @member {string} state The current state of the Job Preparation task on\n   * the compute node. Values are:\n   *\n   * running - the task is currently running (including retrying).\n   * completed - the task has exited with exit code 0, or the task has\n   * exhausted its retry limit, or the Batch service was unable to start the\n   * task due to task preparation errors (such as resource file download\n   * failures). Possible values include: 'running', 'completed'\n   */\n  state: string;\n  /**\n   * @member {string} [taskRootDirectory] The root directory of the Job\n   * Preparation task on the compute node. You can use this path to retrieve\n   * files created by the task, such as log files.\n   */\n  taskRootDirectory?: string;\n  /**\n   * @member {string} [taskRootDirectoryUrl] The URL to the root directory of\n   * the Job Preparation task on the compute node.\n   */\n  taskRootDirectoryUrl?: string;\n  /**\n   * @member {number} [exitCode] The exit code of the program specified on the\n   * task command line. This parameter is returned only if the task is in the\n   * completed state. The exit code for a process reflects the specific\n   * convention implemented by the application developer for that process. If\n   * you use the exit code value to make decisions in your code, be sure that\n   * you know the exit code convention used by the application process. Note\n   * that the exit code may also be generated by the compute node operating\n   * system, such as when a process is forcibly terminated.\n   */\n  exitCode?: number;\n  /**\n   * @member {TaskContainerExecutionInformation} [containerInfo] Information\n   * about the container under which the task is executing. This property is\n   * set only if the task runs in a container context.\n   */\n  containerInfo?: TaskContainerExecutionInformation;\n  /**\n   * @member {TaskFailureInformation} [failureInfo] Information describing the\n   * task failure, if any. This property is set only if the task is in the\n   * completed state and encountered a failure.\n   */\n  failureInfo?: TaskFailureInformation;\n  /**\n   * @member {number} retryCount The number of times the task has been retried\n   * by the Batch service. Task application failures (non-zero exit code) are\n   * retried, pre-processing errors (the task could not be run) and file upload\n   * errors are not retried. The Batch service will retry the task up to the\n   * limit specified by the constraints. Task application failures (non-zero\n   * exit code) are retried, pre-processing errors (the task could not be run)\n   * and file upload errors are not retried. The Batch service will retry the\n   * task up to the limit specified by the constraints.\n   */\n  retryCount: number;\n  /**\n   * @member {Date} [lastRetryTime] The most recent time at which a retry of\n   * the Job Preparation task started running. This property is set only if the\n   * task was retried (i.e. retryCount is nonzero). If present, this is\n   * typically the same as startTime, but may be different if the task has been\n   * restarted for reasons other than retry; for example, if the compute node\n   * was rebooted during a retry, then the startTime is updated but the\n   * lastRetryTime is not.\n   */\n  lastRetryTime?: Date;\n  /**\n   * @member {string} [result] The result of the task execution. If the value\n   * is 'failed', then the details of the failure can be found in the\n   * failureInfo property. Possible values include: 'success', 'failure'\n   */\n  result?: string;\n}\n\n/**\n * @interface\n * An interface representing JobReleaseTaskExecutionInformation.\n * @summary Contains information about the execution of a Job Release task on a\n * compute node.\n *\n */\nexport interface JobReleaseTaskExecutionInformation {\n  /**\n   * @member {Date} startTime The time at which the task started running. If\n   * the task has been restarted or retried, this is the most recent time at\n   * which the task started running.\n   */\n  startTime: Date;\n  /**\n   * @member {Date} [endTime] The time at which the Job Release task completed.\n   * This property is set only if the task is in the Completed state.\n   */\n  endTime?: Date;\n  /**\n   * @member {string} state The current state of the Job Release task on the\n   * compute node. Values are:\n   *\n   * running - the task is currently running (including retrying).\n   * completed - the task has exited, or the Batch service was unable to start\n   * the task due to task preparation errors (such as resource file download\n   * failures). Possible values include: 'running', 'completed'\n   */\n  state: string;\n  /**\n   * @member {string} [taskRootDirectory] The root directory of the Job Release\n   * task on the compute node. You can use this path to retrieve files created\n   * by the task, such as log files.\n   */\n  taskRootDirectory?: string;\n  /**\n   * @member {string} [taskRootDirectoryUrl] The URL to the root directory of\n   * the Job Release task on the compute node.\n   */\n  taskRootDirectoryUrl?: string;\n  /**\n   * @member {number} [exitCode] The exit code of the program specified on the\n   * task command line. This parameter is returned only if the task is in the\n   * completed state. The exit code for a process reflects the specific\n   * convention implemented by the application developer for that process. If\n   * you use the exit code value to make decisions in your code, be sure that\n   * you know the exit code convention used by the application process. Note\n   * that the exit code may also be generated by the compute node operating\n   * system, such as when a process is forcibly terminated.\n   */\n  exitCode?: number;\n  /**\n   * @member {TaskContainerExecutionInformation} [containerInfo] Information\n   * about the container under which the task is executing. This property is\n   * set only if the task runs in a container context.\n   */\n  containerInfo?: TaskContainerExecutionInformation;\n  /**\n   * @member {TaskFailureInformation} [failureInfo] Information describing the\n   * task failure, if any. This property is set only if the task is in the\n   * completed state and encountered a failure.\n   */\n  failureInfo?: TaskFailureInformation;\n  /**\n   * @member {string} [result] The result of the task execution. If the value\n   * is 'failed', then the details of the failure can be found in the\n   * failureInfo property. Possible values include: 'success', 'failure'\n   */\n  result?: string;\n}\n\n/**\n * @interface\n * An interface representing JobPreparationAndReleaseTaskExecutionInformation.\n * @summary The status of the Job Preparation and Job Release tasks on a\n * compute node.\n *\n */\nexport interface JobPreparationAndReleaseTaskExecutionInformation {\n  /**\n   * @member {string} [poolId] The ID of the pool containing the compute node\n   * to which this entry refers.\n   */\n  poolId?: string;\n  /**\n   * @member {string} [nodeId] The ID of the compute node to which this entry\n   * refers.\n   */\n  nodeId?: string;\n  /**\n   * @member {string} [nodeUrl] The URL of the compute node to which this entry\n   * refers.\n   */\n  nodeUrl?: string;\n  /**\n   * @member {JobPreparationTaskExecutionInformation}\n   * [jobPreparationTaskExecutionInfo] Information about the execution status\n   * of the Job Preparation task on this compute node.\n   */\n  jobPreparationTaskExecutionInfo?: JobPreparationTaskExecutionInformation;\n  /**\n   * @member {JobReleaseTaskExecutionInformation} [jobReleaseTaskExecutionInfo]\n   * Information about the execution status of the Job Release task on this\n   * compute node. This property is set only if the Job Release task has run on\n   * the node.\n   */\n  jobReleaseTaskExecutionInfo?: JobReleaseTaskExecutionInformation;\n}\n\n/**\n * @interface\n * An interface representing TaskCounts.\n * @summary The task counts for a job.\n *\n */\nexport interface TaskCounts {\n  /**\n   * @member {number} active The number of tasks in the active state.\n   */\n  active: number;\n  /**\n   * @member {number} running The number of tasks in the running or preparing\n   * state.\n   */\n  running: number;\n  /**\n   * @member {number} completed The number of tasks in the completed state.\n   */\n  completed: number;\n  /**\n   * @member {number} succeeded The number of tasks which succeeded. A task\n   * succeeds if its result (found in the executionInfo property) is 'success'.\n   */\n  succeeded: number;\n  /**\n   * @member {number} failed The number of tasks which failed. A task fails if\n   * its result (found in the executionInfo property) is 'failure'.\n   */\n  failed: number;\n  /**\n   * @member {string} validationStatus Whether the task counts have been\n   * validated. If the validationStatus is unvalidated, then the Batch service\n   * has not been able to check state counts against the task states as\n   * reported in the List Tasks API. The validationStatus may be unvalidated if\n   * the job contains more than 200,000 tasks. Possible values include:\n   * 'validated', 'unvalidated'\n   */\n  validationStatus: string;\n}\n\n/**\n * @interface\n * An interface representing AutoScaleRunError.\n * @summary An error that occurred when executing or evaluating a pool\n * autoscale formula.\n *\n */\nexport interface AutoScaleRunError {\n  /**\n   * @member {string} [code] An identifier for the autoscale error. Codes are\n   * invariant and are intended to be consumed programmatically.\n   */\n  code?: string;\n  /**\n   * @member {string} [message] A message describing the autoscale error,\n   * intended to be suitable for display in a user interface.\n   */\n  message?: string;\n  /**\n   * @member {NameValuePair[]} [values] A list of additional error details\n   * related to the autoscale error.\n   */\n  values?: NameValuePair[];\n}\n\n/**\n * @interface\n * An interface representing AutoScaleRun.\n * @summary The results and errors from an execution of a pool autoscale\n * formula.\n *\n */\nexport interface AutoScaleRun {\n  /**\n   * @member {Date} timestamp The time at which the autoscale formula was last\n   * evaluated.\n   */\n  timestamp: Date;\n  /**\n   * @member {string} [results] The final values of all variables used in the\n   * evaluation of the autoscale formula. Each variable value is returned in\n   * the form $variable=value, and variables are separated by semicolons.\n   */\n  results?: string;\n  /**\n   * @member {AutoScaleRunError} [error] Details of the error encountered\n   * evaluating the autoscale formula on the pool, if the evaluation was\n   * unsuccessful.\n   */\n  error?: AutoScaleRunError;\n}\n\n/**\n * @interface\n * An interface representing ResizeError.\n * @summary An error that occurred when resizing a pool.\n *\n */\nexport interface ResizeError {\n  /**\n   * @member {string} [code] An identifier for the pool resize error. Codes are\n   * invariant and are intended to be consumed programmatically.\n   */\n  code?: string;\n  /**\n   * @member {string} [message] A message describing the pool resize error,\n   * intended to be suitable for display in a user interface.\n   */\n  message?: string;\n  /**\n   * @member {NameValuePair[]} [values] A list of additional error details\n   * related to the pool resize error.\n   */\n  values?: NameValuePair[];\n}\n\n/**\n * @interface\n * An interface representing CloudPool.\n * @summary A pool in the Azure Batch service.\n *\n */\nexport interface CloudPool {\n  /**\n   * @member {string} [id] A string that uniquely identifies the pool within\n   * the account. The ID can contain any combination of alphanumeric characters\n   * including hyphens and underscores, and cannot contain more than 64\n   * characters. The ID is case-preserving and case-insensitive (that is, you\n   * may not have two IDs within an account that differ only by case).\n   */\n  id?: string;\n  /**\n   * @member {string} [displayName] The display name for the pool. The display\n   * name need not be unique and can contain any Unicode characters up to a\n   * maximum length of 1024.\n   */\n  displayName?: string;\n  /**\n   * @member {string} [url] The URL of the pool.\n   */\n  url?: string;\n  /**\n   * @member {string} [eTag] The ETag of the pool. This is an opaque string.\n   * You can use it to detect whether the pool has changed between requests. In\n   * particular, you can be pass the ETag when updating a pool to specify that\n   * your changes should take effect only if nobody else has modified the pool\n   * in the meantime.\n   */\n  eTag?: string;\n  /**\n   * @member {Date} [lastModified] The last modified time of the pool. This is\n   * the last time at which the pool level data, such as the\n   * targetDedicatedNodes or enableAutoscale settings, changed. It does not\n   * factor in node-level changes such as a compute node changing state.\n   */\n  lastModified?: Date;\n  /**\n   * @member {Date} [creationTime] The creation time of the pool.\n   */\n  creationTime?: Date;\n  /**\n   * @member {string} [state] The current state of the pool. Values are:\n   *\n   * active - The pool is available to run tasks subject to the availability of\n   * compute nodes.\n   * deleting - The user has requested that the pool be deleted, but the delete\n   * operation has not yet completed.\n   * upgrading - The user has requested that the operating system of the pool's\n   * nodes be upgraded, but the upgrade operation has not yet completed (that\n   * is, some nodes in the pool have not yet been upgraded). While upgrading,\n   * the pool may be able to run tasks (with reduced capacity) but this is not\n   * guaranteed. Possible values include: 'active', 'deleting', 'upgrading'\n   */\n  state?: string;\n  /**\n   * @member {Date} [stateTransitionTime] The time at which the pool entered\n   * its current state.\n   */\n  stateTransitionTime?: Date;\n  /**\n   * @member {string} [allocationState] Whether the pool is resizing. Values\n   * are:\n   *\n   * steady - The pool is not resizing. There are no changes to the number of\n   * nodes in the pool in progress. A pool enters this state when it is created\n   * and when no operations are being performed on the pool to change the\n   * number of dedicated nodes.\n   * resizing - The pool is resizing; that is, compute nodes are being added to\n   * or removed from the pool.\n   * stopping - The pool was resizing, but the user has requested that the\n   * resize be stopped, but the stop request has not yet been completed.\n   * Possible values include: 'steady', 'resizing', 'stopping'\n   */\n  allocationState?: string;\n  /**\n   * @member {Date} [allocationStateTransitionTime] The time at which the pool\n   * entered its current allocation state.\n   */\n  allocationStateTransitionTime?: Date;\n  /**\n   * @member {string} [vmSize] The size of virtual machines in the pool. All\n   * virtual machines in a pool are the same size. For information about\n   * available sizes of virtual machines for Cloud Services pools (pools\n   * created with cloudServiceConfiguration), see Sizes for Cloud Services\n   * (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).\n   * Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and\n   * A2V2. For information about available VM sizes for pools using images from\n   * the Virtual Machines Marketplace (pools created with\n   * virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)\n   * (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)\n   * or Sizes for Virtual Machines (Windows)\n   * (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).\n   * Batch supports all Azure VM sizes except STANDARD_A0 and those with\n   * premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).\n   */\n  vmSize?: string;\n  /**\n   * @member {CloudServiceConfiguration} [cloudServiceConfiguration] The cloud\n   * service configuration for the pool. This property and\n   * virtualMachineConfiguration are mutually exclusive and one of the\n   * properties must be specified. This property cannot be specified if the\n   * Batch account was created with its poolAllocationMode property set to\n   * 'UserSubscription'.\n   */\n  cloudServiceConfiguration?: CloudServiceConfiguration;\n  /**\n   * @member {VirtualMachineConfiguration} [virtualMachineConfiguration] The\n   * virtual machine configuration for the pool. This property and\n   * cloudServiceConfiguration are mutually exclusive and one of the properties\n   * must be specified.\n   */\n  virtualMachineConfiguration?: VirtualMachineConfiguration;\n  /**\n   * @member {moment.Duration} [resizeTimeout] The timeout for allocation of\n   * compute nodes to the pool. This is the timeout for the most recent resize\n   * operation. (The initial sizing when the pool is created counts as a\n   * resize.) The default value is 15 minutes.\n   */\n  resizeTimeout?: moment.Duration;\n  /**\n   * @member {ResizeError[]} [resizeErrors] A list of errors encountered while\n   * performing the last resize on the pool. This property is set only if one\n   * or more errors occurred during the last pool resize, and only when the\n   * pool allocationState is Steady.\n   */\n  resizeErrors?: ResizeError[];\n  /**\n   * @member {number} [currentDedicatedNodes] The number of dedicated compute\n   * nodes currently in the pool.\n   */\n  currentDedicatedNodes?: number;\n  /**\n   * @member {number} [currentLowPriorityNodes] The number of low-priority\n   * compute nodes currently in the pool. Low-priority compute nodes which have\n   * been preempted are included in this count.\n   */\n  currentLowPriorityNodes?: number;\n  /**\n   * @member {number} [targetDedicatedNodes] The desired number of dedicated\n   * compute nodes in the pool.\n   */\n  targetDedicatedNodes?: number;\n  /**\n   * @member {number} [targetLowPriorityNodes] The desired number of\n   * low-priority compute nodes in the pool.\n   */\n  targetLowPriorityNodes?: number;\n  /**\n   * @member {boolean} [enableAutoScale] Whether the pool size should\n   * automatically adjust over time. If false, at least one of\n   * targetDedicateNodes and targetLowPriorityNodes must be specified. If true,\n   * the autoScaleFormula property is required and the pool automatically\n   * resizes according to the formula. The default value is false.\n   */\n  enableAutoScale?: boolean;\n  /**\n   * @member {string} [autoScaleFormula] A formula for the desired number of\n   * compute nodes in the pool. This property is set only if the pool\n   * automatically scales, i.e. enableAutoScale is true.\n   */\n  autoScaleFormula?: string;\n  /**\n   * @member {moment.Duration} [autoScaleEvaluationInterval] The time interval\n   * at which to automatically adjust the pool size according to the autoscale\n   * formula. This property is set only if the pool automatically scales, i.e.\n   * enableAutoScale is true.\n   */\n  autoScaleEvaluationInterval?: moment.Duration;\n  /**\n   * @member {AutoScaleRun} [autoScaleRun] The results and errors from the last\n   * execution of the autoscale formula. This property is set only if the pool\n   * automatically scales, i.e. enableAutoScale is true.\n   */\n  autoScaleRun?: AutoScaleRun;\n  /**\n   * @member {boolean} [enableInterNodeCommunication] Whether the pool permits\n   * direct communication between nodes. This imposes restrictions on which\n   * nodes can be assigned to the pool. Specifying this value can reduce the\n   * chance of the requested number of nodes to be allocated in the pool.\n   */\n  enableInterNodeCommunication?: boolean;\n  /**\n   * @member {NetworkConfiguration} [networkConfiguration] The network\n   * configuration for the pool.\n   */\n  networkConfiguration?: NetworkConfiguration;\n  /**\n   * @member {StartTask} [startTask] A task specified to run on each compute\n   * node as it joins the pool.\n   */\n  startTask?: StartTask;\n  /**\n   * @member {CertificateReference[]} [certificateReferences] The list of\n   * certificates to be installed on each compute node in the pool. For Windows\n   * compute nodes, the Batch service installs the certificates to the\n   * specified certificate store and location. For Linux compute nodes, the\n   * certificates are stored in a directory inside the task working directory\n   * and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the\n   * task to query for this location. For certificates with visibility of\n   * 'remoteUser', a 'certs' directory is created in the user's home directory\n   * (e.g., /home/{user-name}/certs) and certificates are placed in that\n   * directory.\n   */\n  certificateReferences?: CertificateReference[];\n  /**\n   * @member {ApplicationPackageReference[]} [applicationPackageReferences] The\n   * list of application packages to be installed on each compute node in the\n   * pool.\n   */\n  applicationPackageReferences?: ApplicationPackageReference[];\n  /**\n   * @member {string[]} [applicationLicenses] The list of application licenses\n   * the Batch service will make available on each compute node in the pool.\n   * The list of application licenses must be a subset of available Batch\n   * service application licenses. If a license is requested which is not\n   * supported, pool creation will fail.\n   */\n  applicationLicenses?: string[];\n  /**\n   * @member {number} [maxTasksPerNode] The maximum number of tasks that can\n   * run concurrently on a single compute node in the pool.\n   */\n  maxTasksPerNode?: number;\n  /**\n   * @member {TaskSchedulingPolicy} [taskSchedulingPolicy] How tasks are\n   * distributed across compute nodes in a pool.\n   */\n  taskSchedulingPolicy?: TaskSchedulingPolicy;\n  /**\n   * @member {UserAccount[]} [userAccounts] The list of user accounts to be\n   * created on each node in the pool.\n   */\n  userAccounts?: UserAccount[];\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the pool as metadata.\n   */\n  metadata?: MetadataItem[];\n  /**\n   * @member {PoolStatistics} [stats] Utilization and resource usage statistics\n   * for the entire lifetime of the pool.\n   */\n  stats?: PoolStatistics;\n}\n\n/**\n * @interface\n * An interface representing PoolAddParameter.\n * @summary A pool in the Azure Batch service to add.\n *\n */\nexport interface PoolAddParameter {\n  /**\n   * @member {string} id A string that uniquely identifies the pool within the\n   * account. The ID can contain any combination of alphanumeric characters\n   * including hyphens and underscores, and cannot contain more than 64\n   * characters. The ID is case-preserving and case-insensitive (that is, you\n   * may not have two pool IDs within an account that differ only by case).\n   */\n  id: string;\n  /**\n   * @member {string} [displayName] The display name for the pool. The display\n   * name need not be unique and can contain any Unicode characters up to a\n   * maximum length of 1024.\n   */\n  displayName?: string;\n  /**\n   * @member {string} vmSize The size of virtual machines in the pool. All\n   * virtual machines in a pool are the same size. For information about\n   * available sizes of virtual machines for Cloud Services pools (pools\n   * created with cloudServiceConfiguration), see Sizes for Cloud Services\n   * (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).\n   * Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and\n   * A2V2. For information about available VM sizes for pools using images from\n   * the Virtual Machines Marketplace (pools created with\n   * virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)\n   * (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)\n   * or Sizes for Virtual Machines (Windows)\n   * (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).\n   * Batch supports all Azure VM sizes except STANDARD_A0 and those with\n   * premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).\n   */\n  vmSize: string;\n  /**\n   * @member {CloudServiceConfiguration} [cloudServiceConfiguration] The cloud\n   * service configuration for the pool. This property and\n   * virtualMachineConfiguration are mutually exclusive and one of the\n   * properties must be specified. This property cannot be specified if the\n   * Batch account was created with its poolAllocationMode property set to\n   * 'UserSubscription'.\n   */\n  cloudServiceConfiguration?: CloudServiceConfiguration;\n  /**\n   * @member {VirtualMachineConfiguration} [virtualMachineConfiguration] The\n   * virtual machine configuration for the pool. This property and\n   * cloudServiceConfiguration are mutually exclusive and one of the properties\n   * must be specified.\n   */\n  virtualMachineConfiguration?: VirtualMachineConfiguration;\n  /**\n   * @member {moment.Duration} [resizeTimeout] The timeout for allocation of\n   * compute nodes to the pool. This timeout applies only to manual scaling; it\n   * has no effect when enableAutoScale is set to true. The default value is 15\n   * minutes. The minimum value is 5 minutes. If you specify a value less than\n   * 5 minutes, the Batch service returns an error; if you are calling the REST\n   * API directly, the HTTP status code is 400 (Bad Request).\n   */\n  resizeTimeout?: moment.Duration;\n  /**\n   * @member {number} [targetDedicatedNodes] The desired number of dedicated\n   * compute nodes in the pool. This property must not be specified if\n   * enableAutoScale is set to true. If enableAutoScale is set to false, then\n   * you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.\n   */\n  targetDedicatedNodes?: number;\n  /**\n   * @member {number} [targetLowPriorityNodes] The desired number of\n   * low-priority compute nodes in the pool. This property must not be\n   * specified if enableAutoScale is set to true. If enableAutoScale is set to\n   * false, then you must set either targetDedicatedNodes,\n   * targetLowPriorityNodes, or both.\n   */\n  targetLowPriorityNodes?: number;\n  /**\n   * @member {boolean} [enableAutoScale] Whether the pool size should\n   * automatically adjust over time. If false, at least one of\n   * targetDedicateNodes and targetLowPriorityNodes must be specified. If true,\n   * the autoScaleFormula property is required and the pool automatically\n   * resizes according to the formula. The default value is false.\n   */\n  enableAutoScale?: boolean;\n  /**\n   * @member {string} [autoScaleFormula] A formula for the desired number of\n   * compute nodes in the pool. This property must not be specified if\n   * enableAutoScale is set to false. It is required if enableAutoScale is set\n   * to true. The formula is checked for validity before the pool is created.\n   * If the formula is not valid, the Batch service rejects the request with\n   * detailed error information. For more information about specifying this\n   * formula, see 'Automatically scale compute nodes in an Azure Batch pool'\n   * (https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/).\n   */\n  autoScaleFormula?: string;\n  /**\n   * @member {moment.Duration} [autoScaleEvaluationInterval] The time interval\n   * at which to automatically adjust the pool size according to the autoscale\n   * formula. The default value is 15 minutes. The minimum and maximum value\n   * are 5 minutes and 168 hours respectively. If you specify a value less than\n   * 5 minutes or greater than 168 hours, the Batch service returns an error;\n   * if you are calling the REST API directly, the HTTP status code is 400 (Bad\n   * Request).\n   */\n  autoScaleEvaluationInterval?: moment.Duration;\n  /**\n   * @member {boolean} [enableInterNodeCommunication] Whether the pool permits\n   * direct communication between nodes. Enabling inter-node communication\n   * limits the maximum size of the pool due to deployment restrictions on the\n   * nodes of the pool. This may result in the pool not reaching its desired\n   * size. The default value is false.\n   */\n  enableInterNodeCommunication?: boolean;\n  /**\n   * @member {NetworkConfiguration} [networkConfiguration] The network\n   * configuration for the pool.\n   */\n  networkConfiguration?: NetworkConfiguration;\n  /**\n   * @member {StartTask} [startTask] A task specified to run on each compute\n   * node as it joins the pool. The task runs when the node is added to the\n   * pool or when the node is restarted.\n   */\n  startTask?: StartTask;\n  /**\n   * @member {CertificateReference[]} [certificateReferences] The list of\n   * certificates to be installed on each compute node in the pool. For Windows\n   * compute nodes, the Batch service installs the certificates to the\n   * specified certificate store and location. For Linux compute nodes, the\n   * certificates are stored in a directory inside the task working directory\n   * and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the\n   * task to query for this location. For certificates with visibility of\n   * 'remoteUser', a 'certs' directory is created in the user's home directory\n   * (e.g., /home/{user-name}/certs) and certificates are placed in that\n   * directory.\n   */\n  certificateReferences?: CertificateReference[];\n  /**\n   * @member {ApplicationPackageReference[]} [applicationPackageReferences] The\n   * list of application packages to be installed on each compute node in the\n   * pool.\n   */\n  applicationPackageReferences?: ApplicationPackageReference[];\n  /**\n   * @member {string[]} [applicationLicenses] The list of application licenses\n   * the Batch service will make available on each compute node in the pool.\n   * The list of application licenses must be a subset of available Batch\n   * service application licenses. If a license is requested which is not\n   * supported, pool creation will fail.\n   */\n  applicationLicenses?: string[];\n  /**\n   * @member {number} [maxTasksPerNode] The maximum number of tasks that can\n   * run concurrently on a single compute node in the pool. The default value\n   * is 1. The maximum value of this setting depends on the size of the compute\n   * nodes in the pool (the vmSize setting).\n   */\n  maxTasksPerNode?: number;\n  /**\n   * @member {TaskSchedulingPolicy} [taskSchedulingPolicy] How tasks are\n   * distributed across compute nodes in a pool.\n   */\n  taskSchedulingPolicy?: TaskSchedulingPolicy;\n  /**\n   * @member {UserAccount[]} [userAccounts] The list of user accounts to be\n   * created on each node in the pool.\n   */\n  userAccounts?: UserAccount[];\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the pool as metadata. The Batch service does not assign any meaning\n   * to metadata; it is solely for the use of user code.\n   */\n  metadata?: MetadataItem[];\n}\n\n/**\n * @interface\n * An interface representing AffinityInformation.\n * @summary A locality hint that can be used by the Batch service to select a\n * compute node on which to start a task.\n *\n */\nexport interface AffinityInformation {\n  /**\n   * @member {string} affinityId An opaque string representing the location of\n   * a compute node or a task that has run previously. You can pass the\n   * affinityId of a compute node to indicate that this task needs to run on\n   * that compute node. Note that this is just a soft affinity. If the target\n   * node is busy or unavailable at the time the task is scheduled, then the\n   * task will be scheduled elsewhere.\n   */\n  affinityId: string;\n}\n\n/**\n * @interface\n * An interface representing TaskExecutionInformation.\n * @summary Information about the execution of a task.\n *\n */\nexport interface TaskExecutionInformation {\n  /**\n   * @member {Date} [startTime] The time at which the task started running.\n   * 'Running' corresponds to the running state, so if the task specifies\n   * resource files or application packages, then the start time reflects the\n   * time at which the task started downloading or deploying these. If the task\n   * has been restarted or retried, this is the most recent time at which the\n   * task started running. This property is present only for tasks that are in\n   * the running or completed state.\n   */\n  startTime?: Date;\n  /**\n   * @member {Date} [endTime] The time at which the task completed. This\n   * property is set only if the task is in the Completed state.\n   */\n  endTime?: Date;\n  /**\n   * @member {number} [exitCode] The exit code of the program specified on the\n   * task command line. This property is set only if the task is in the\n   * completed state. In general, the exit code for a process reflects the\n   * specific convention implemented by the application developer for that\n   * process. If you use the exit code value to make decisions in your code, be\n   * sure that you know the exit code convention used by the application\n   * process. However, if the Batch service terminates the task (due to\n   * timeout, or user termination via the API) you may see an operating\n   * system-defined exit code.\n   */\n  exitCode?: number;\n  /**\n   * @member {TaskContainerExecutionInformation} [containerInfo] Information\n   * about the container under which the task is executing. This property is\n   * set only if the task runs in a container context.\n   */\n  containerInfo?: TaskContainerExecutionInformation;\n  /**\n   * @member {TaskFailureInformation} [failureInfo] Information describing the\n   * task failure, if any. This property is set only if the task is in the\n   * completed state and encountered a failure.\n   */\n  failureInfo?: TaskFailureInformation;\n  /**\n   * @member {number} retryCount The number of times the task has been retried\n   * by the Batch service. Task application failures (non-zero exit code) are\n   * retried, pre-processing errors (the task could not be run) and file upload\n   * errors are not retried. The Batch service will retry the task up to the\n   * limit specified by the constraints.\n   */\n  retryCount: number;\n  /**\n   * @member {Date} [lastRetryTime] The most recent time at which a retry of\n   * the task started running. This element is present only if the task was\n   * retried (i.e. retryCount is nonzero). If present, this is typically the\n   * same as startTime, but may be different if the task has been restarted for\n   * reasons other than retry; for example, if the compute node was rebooted\n   * during a retry, then the startTime is updated but the lastRetryTime is\n   * not.\n   */\n  lastRetryTime?: Date;\n  /**\n   * @member {number} requeueCount The number of times the task has been\n   * requeued by the Batch service as the result of a user request. When the\n   * user removes nodes from a pool (by resizing/shrinking the pool) or when\n   * the job is being disabled, the user can specify that running tasks on the\n   * nodes be requeued for execution. This count tracks how many times the task\n   * has been requeued for these reasons.\n   */\n  requeueCount: number;\n  /**\n   * @member {Date} [lastRequeueTime] The most recent time at which the task\n   * has been requeued by the Batch service as the result of a user request.\n   * This property is set only if the requeueCount is nonzero.\n   */\n  lastRequeueTime?: Date;\n  /**\n   * @member {string} [result] The result of the task execution. If the value\n   * is 'failed', then the details of the failure can be found in the\n   * failureInfo property. Possible values include: 'success', 'failure'\n   */\n  result?: string;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeInformation.\n * @summary Information about the compute node on which a task ran.\n *\n */\nexport interface ComputeNodeInformation {\n  /**\n   * @member {string} [affinityId] An identifier for the compute node on which\n   * the task ran, which can be passed when adding a task to request that the\n   * task be scheduled on this compute node.\n   */\n  affinityId?: string;\n  /**\n   * @member {string} [nodeUrl] The URL of the node on which the task ran. .\n   */\n  nodeUrl?: string;\n  /**\n   * @member {string} [poolId] The ID of the pool on which the task ran.\n   */\n  poolId?: string;\n  /**\n   * @member {string} [nodeId] The ID of the node on which the task ran.\n   */\n  nodeId?: string;\n  /**\n   * @member {string} [taskRootDirectory] The root directory of the task on the\n   * compute node.\n   */\n  taskRootDirectory?: string;\n  /**\n   * @member {string} [taskRootDirectoryUrl] The URL to the root directory of\n   * the task on the compute node.\n   */\n  taskRootDirectoryUrl?: string;\n}\n\n/**\n * @interface\n * An interface representing MultiInstanceSettings.\n * @summary Settings which specify how to run a multi-instance task.\n *\n * Multi-instance tasks are commonly used to support MPI tasks.\n *\n */\nexport interface MultiInstanceSettings {\n  /**\n   * @member {number} [numberOfInstances] The number of compute nodes required\n   * by the task. If omitted, the default is 1.\n   */\n  numberOfInstances?: number;\n  /**\n   * @member {string} coordinationCommandLine The command line to run on all\n   * the compute nodes to enable them to coordinate when the primary runs the\n   * main task command. A typical coordination command line launches a\n   * background service and verifies that the service is ready to process\n   * inter-node messages.\n   */\n  coordinationCommandLine: string;\n  /**\n   * @member {ResourceFile[]} [commonResourceFiles] A list of files that the\n   * Batch service will download before running the coordination command line.\n   * The difference between common resource files and task resource files is\n   * that common resource files are downloaded for all subtasks including the\n   * primary, whereas task resource files are downloaded only for the primary.\n   * Also note that these resource files are not downloaded to the task working\n   * directory, but instead are downloaded to the task root directory (one\n   * directory above the working directory).\n   */\n  commonResourceFiles?: ResourceFile[];\n}\n\n/**\n * @interface\n * An interface representing TaskStatistics.\n * @summary Resource usage statistics for a task.\n *\n */\nexport interface TaskStatistics {\n  /**\n   * @member {string} url The URL of the statistics.\n   */\n  url: string;\n  /**\n   * @member {Date} startTime The start time of the time range covered by the\n   * statistics.\n   */\n  startTime: Date;\n  /**\n   * @member {Date} lastUpdateTime The time at which the statistics were last\n   * updated. All statistics are limited to the range between startTime and\n   * lastUpdateTime.\n   */\n  lastUpdateTime: Date;\n  /**\n   * @member {moment.Duration} userCPUTime The total user mode CPU time (summed\n   * across all cores and all compute nodes) consumed by the task.\n   */\n  userCPUTime: moment.Duration;\n  /**\n   * @member {moment.Duration} kernelCPUTime The total kernel mode CPU time\n   * (summed across all cores and all compute nodes) consumed by the task.\n   */\n  kernelCPUTime: moment.Duration;\n  /**\n   * @member {moment.Duration} wallClockTime The total wall clock time of the\n   * task. The wall clock time is the elapsed time from when the task started\n   * running on a compute node to when it finished (or to the last time the\n   * statistics were updated, if the task had not finished by then). If the\n   * task was retried, this includes the wall clock time of all the task\n   * retries.\n   */\n  wallClockTime: moment.Duration;\n  /**\n   * @member {number} readIOps The total number of disk read operations made by\n   * the task.\n   */\n  readIOps: number;\n  /**\n   * @member {number} writeIOps The total number of disk write operations made\n   * by the task.\n   */\n  writeIOps: number;\n  /**\n   * @member {number} readIOGiB The total gibibytes read from disk by the task.\n   */\n  readIOGiB: number;\n  /**\n   * @member {number} writeIOGiB The total gibibytes written to disk by the\n   * task.\n   */\n  writeIOGiB: number;\n  /**\n   * @member {moment.Duration} waitTime The total wait time of the task. The\n   * wait time for a task is defined as the elapsed time between the creation\n   * of the task and the start of task execution. (If the task is retried due\n   * to failures, the wait time is the time to the most recent task\n   * execution.).\n   */\n  waitTime: moment.Duration;\n}\n\n/**\n * @interface\n * An interface representing TaskIdRange.\n * @summary A range of task IDs that a task can depend on. All tasks with IDs\n * in the range must complete successfully before the dependent task can be\n * scheduled.\n *\n * The start and end of the range are inclusive. For example, if a range has\n * start 9 and end 12, then it represents tasks '9', '10', '11' and '12'.\n *\n */\nexport interface TaskIdRange {\n  /**\n   * @member {number} start The first task ID in the range.\n   */\n  start: number;\n  /**\n   * @member {number} end The last task ID in the range.\n   */\n  end: number;\n}\n\n/**\n * @interface\n * An interface representing TaskDependencies.\n * @summary Specifies any dependencies of a task. Any task that is explicitly\n * specified or within a dependency range must complete before the dependant\n * task will be scheduled.\n *\n */\nexport interface TaskDependencies {\n  /**\n   * @member {string[]} [taskIds] The list of task IDs that this task depends\n   * on. All tasks in this list must complete successfully before the dependent\n   * task can be scheduled. The taskIds collection is limited to 64000\n   * characters total (i.e. the combined length of all task IDs). If the\n   * taskIds collection exceeds the maximum length, the Add Task request fails\n   * with error code TaskDependencyListTooLong. In this case consider using\n   * task ID ranges instead.\n   */\n  taskIds?: string[];\n  /**\n   * @member {TaskIdRange[]} [taskIdRanges] The list of task ID ranges that\n   * this task depends on. All tasks in all ranges must complete successfully\n   * before the dependent task can be scheduled.\n   */\n  taskIdRanges?: TaskIdRange[];\n}\n\n/**\n * @interface\n * An interface representing CloudTask.\n * @summary An Azure Batch task.\n *\n */\nexport interface CloudTask {\n  /**\n   * @member {string} [id] A string that uniquely identifies the task within\n   * the job. The ID can contain any combination of alphanumeric characters\n   * including hyphens and underscores, and cannot contain more than 64\n   * characters.\n   */\n  id?: string;\n  /**\n   * @member {string} [displayName] A display name for the task. The display\n   * name need not be unique and can contain any Unicode characters up to a\n   * maximum length of 1024.\n   */\n  displayName?: string;\n  /**\n   * @member {string} [url] The URL of the task.\n   */\n  url?: string;\n  /**\n   * @member {string} [eTag] The ETag of the task. This is an opaque string.\n   * You can use it to detect whether the task has changed between requests. In\n   * particular, you can be pass the ETag when updating a task to specify that\n   * your changes should take effect only if nobody else has modified the task\n   * in the meantime.\n   */\n  eTag?: string;\n  /**\n   * @member {Date} [lastModified] The last modified time of the task.\n   */\n  lastModified?: Date;\n  /**\n   * @member {Date} [creationTime] The creation time of the task.\n   */\n  creationTime?: Date;\n  /**\n   * @member {ExitConditions} [exitConditions] How the Batch service should\n   * respond when the task completes.\n   */\n  exitConditions?: ExitConditions;\n  /**\n   * @member {string} [state] The current state of the task. Possible values\n   * include: 'active', 'preparing', 'running', 'completed'\n   */\n  state?: string;\n  /**\n   * @member {Date} [stateTransitionTime] The time at which the task entered\n   * its current state.\n   */\n  stateTransitionTime?: Date;\n  /**\n   * @member {string} [previousState] The previous state of the task. This\n   * property is not set if the task is in its initial Active state. Possible\n   * values include: 'active', 'preparing', 'running', 'completed'\n   */\n  previousState?: string;\n  /**\n   * @member {Date} [previousStateTransitionTime] The time at which the task\n   * entered its previous state. This property is not set if the task is in its\n   * initial Active state.\n   */\n  previousStateTransitionTime?: Date;\n  /**\n   * @member {string} [commandLine] The command line of the task. For\n   * multi-instance tasks, the command line is executed as the primary task,\n   * after the primary task and all subtasks have finished executing the\n   * coordination command line. The command line does not run under a shell,\n   * and therefore cannot take advantage of shell features such as environment\n   * variable expansion. If you want to take advantage of such features, you\n   * should invoke the shell in the command line, for example using \"cmd /c\n   * MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.\n   */\n  commandLine?: string;\n  /**\n   * @member {TaskContainerSettings} [containerSettings] The settings for the\n   * container under which the task runs. If the pool that will run this task\n   * has containerConfiguration set, this must be set as well. If the pool that\n   * will run this task doesn't have containerConfiguration set, this must not\n   * be set. When this is specified, all directories recursively below the\n   * AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node)\n   * are mapped into the container, all task environment variables are mapped\n   * into the container, and the task command line is executed in the\n   * container.\n   */\n  containerSettings?: TaskContainerSettings;\n  /**\n   * @member {ResourceFile[]} [resourceFiles] A list of files that the Batch\n   * service will download to the compute node before running the command line.\n   * For multi-instance tasks, the resource files will only be downloaded to\n   * the compute node on which the primary task is executed.\n   */\n  resourceFiles?: ResourceFile[];\n  /**\n   * @member {OutputFile[]} [outputFiles] A list of files that the Batch\n   * service will upload from the compute node after running the command line.\n   * For multi-instance tasks, the files will only be uploaded from the compute\n   * node on which the primary task is executed.\n   */\n  outputFiles?: OutputFile[];\n  /**\n   * @member {EnvironmentSetting[]} [environmentSettings] A list of environment\n   * variable settings for the task.\n   */\n  environmentSettings?: EnvironmentSetting[];\n  /**\n   * @member {AffinityInformation} [affinityInfo] A locality hint that can be\n   * used by the Batch service to select a compute node on which to start the\n   * new task.\n   */\n  affinityInfo?: AffinityInformation;\n  /**\n   * @member {TaskConstraints} [constraints] The execution constraints that\n   * apply to this task.\n   */\n  constraints?: TaskConstraints;\n  /**\n   * @member {UserIdentity} [userIdentity] The user identity under which the\n   * task runs. If omitted, the task runs as a non-administrative user unique\n   * to the task.\n   */\n  userIdentity?: UserIdentity;\n  /**\n   * @member {TaskExecutionInformation} [executionInfo] Information about the\n   * execution of the task.\n   */\n  executionInfo?: TaskExecutionInformation;\n  /**\n   * @member {ComputeNodeInformation} [nodeInfo] Information about the compute\n   * node on which the task ran.\n   */\n  nodeInfo?: ComputeNodeInformation;\n  /**\n   * @member {MultiInstanceSettings} [multiInstanceSettings] An object that\n   * indicates that the task is a multi-instance task, and contains information\n   * about how to run the multi-instance task.\n   */\n  multiInstanceSettings?: MultiInstanceSettings;\n  /**\n   * @member {TaskStatistics} [stats] Resource usage statistics for the task.\n   */\n  stats?: TaskStatistics;\n  /**\n   * @member {TaskDependencies} [dependsOn] The tasks that this task depends\n   * on. This task will not be scheduled until all tasks that it depends on\n   * have completed successfully. If any of those tasks fail and exhaust their\n   * retry counts, this task will never be scheduled.\n   */\n  dependsOn?: TaskDependencies;\n  /**\n   * @member {ApplicationPackageReference[]} [applicationPackageReferences] A\n   * list of application packages that the Batch service will deploy to the\n   * compute node before running the command line. Application packages are\n   * downloaded and deployed to a shared directory, not the task working\n   * directory. Therefore, if a referenced package is already on the compute\n   * node, and is up to date, then it is not re-downloaded; the existing copy\n   * on the compute node is used. If a referenced application package cannot be\n   * installed, for example because the package has been deleted or because\n   * download failed, the task fails.\n   */\n  applicationPackageReferences?: ApplicationPackageReference[];\n  /**\n   * @member {AuthenticationTokenSettings} [authenticationTokenSettings] The\n   * settings for an authentication token that the task can use to perform\n   * Batch service operations. If this property is set, the Batch service\n   * provides the task with an authentication token which can be used to\n   * authenticate Batch service operations without requiring an account access\n   * key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN\n   * environment variable. The operations that the task can carry out using the\n   * token depend on the settings. For example, a task can request job\n   * permissions in order to add other tasks to the job, or check the status of\n   * the job or of other tasks under the job.\n   */\n  authenticationTokenSettings?: AuthenticationTokenSettings;\n}\n\n/**\n * @interface\n * An interface representing TaskAddParameter.\n * @summary An Azure Batch task to add.\n *\n */\nexport interface TaskAddParameter {\n  /**\n   * @member {string} id A string that uniquely identifies the task within the\n   * job. The ID can contain any combination of alphanumeric characters\n   * including hyphens and underscores, and cannot contain more than 64\n   * characters. The ID is case-preserving and case-insensitive (that is, you\n   * may not have two IDs within a job that differ only by case).\n   */\n  id: string;\n  /**\n   * @member {string} [displayName] A display name for the task. The display\n   * name need not be unique and can contain any Unicode characters up to a\n   * maximum length of 1024.\n   */\n  displayName?: string;\n  /**\n   * @member {string} commandLine The command line of the task. For\n   * multi-instance tasks, the command line is executed as the primary task,\n   * after the primary task and all subtasks have finished executing the\n   * coordination command line. The command line does not run under a shell,\n   * and therefore cannot take advantage of shell features such as environment\n   * variable expansion. If you want to take advantage of such features, you\n   * should invoke the shell in the command line, for example using \"cmd /c\n   * MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.\n   */\n  commandLine: string;\n  /**\n   * @member {TaskContainerSettings} [containerSettings] The settings for the\n   * container under which the task runs. If the pool that will run this task\n   * has containerConfiguration set, this must be set as well. If the pool that\n   * will run this task doesn't have containerConfiguration set, this must not\n   * be set. When this is specified, all directories recursively below the\n   * AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node)\n   * are mapped into the container, all task environment variables are mapped\n   * into the container, and the task command line is executed in the\n   * container.\n   */\n  containerSettings?: TaskContainerSettings;\n  /**\n   * @member {ExitConditions} [exitConditions] How the Batch service should\n   * respond when the task completes.\n   */\n  exitConditions?: ExitConditions;\n  /**\n   * @member {ResourceFile[]} [resourceFiles] A list of files that the Batch\n   * service will download to the compute node before running the command line.\n   * For multi-instance tasks, the resource files will only be downloaded to\n   * the compute node on which the primary task is executed.\n   */\n  resourceFiles?: ResourceFile[];\n  /**\n   * @member {OutputFile[]} [outputFiles] A list of files that the Batch\n   * service will upload from the compute node after running the command line.\n   * For multi-instance tasks, the files will only be uploaded from the compute\n   * node on which the primary task is executed.\n   */\n  outputFiles?: OutputFile[];\n  /**\n   * @member {EnvironmentSetting[]} [environmentSettings] A list of environment\n   * variable settings for the task.\n   */\n  environmentSettings?: EnvironmentSetting[];\n  /**\n   * @member {AffinityInformation} [affinityInfo] A locality hint that can be\n   * used by the Batch service to select a compute node on which to start the\n   * new task.\n   */\n  affinityInfo?: AffinityInformation;\n  /**\n   * @member {TaskConstraints} [constraints] The execution constraints that\n   * apply to this task. If you do not specify constraints, the\n   * maxTaskRetryCount is the maxTaskRetryCount specified for the job, and the\n   * maxWallClockTime and retentionTime are infinite.\n   */\n  constraints?: TaskConstraints;\n  /**\n   * @member {UserIdentity} [userIdentity] The user identity under which the\n   * task runs. If omitted, the task runs as a non-administrative user unique\n   * to the task.\n   */\n  userIdentity?: UserIdentity;\n  /**\n   * @member {MultiInstanceSettings} [multiInstanceSettings] An object that\n   * indicates that the task is a multi-instance task, and contains information\n   * about how to run the multi-instance task.\n   */\n  multiInstanceSettings?: MultiInstanceSettings;\n  /**\n   * @member {TaskDependencies} [dependsOn] The tasks that this task depends\n   * on. This task will not be scheduled until all tasks that it depends on\n   * have completed successfully. If any of those tasks fail and exhaust their\n   * retry counts, this task will never be scheduled. If the job does not have\n   * usesTaskDependencies set to true, and this element is present, the request\n   * fails with error code TaskDependenciesNotSpecifiedOnJob.\n   */\n  dependsOn?: TaskDependencies;\n  /**\n   * @member {ApplicationPackageReference[]} [applicationPackageReferences] A\n   * list of application packages that the Batch service will deploy to the\n   * compute node before running the command line. Application packages are\n   * downloaded and deployed to a shared directory, not the task working\n   * directory. Therefore, if a referenced package is already on the compute\n   * node, and is up to date, then it is not re-downloaded; the existing copy\n   * on the compute node is used. If a referenced application package cannot be\n   * installed, for example because the package has been deleted or because\n   * download failed, the task fails.\n   */\n  applicationPackageReferences?: ApplicationPackageReference[];\n  /**\n   * @member {AuthenticationTokenSettings} [authenticationTokenSettings] The\n   * settings for an authentication token that the task can use to perform\n   * Batch service operations. If this property is set, the Batch service\n   * provides the task with an authentication token which can be used to\n   * authenticate Batch service operations without requiring an account access\n   * key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN\n   * environment variable. The operations that the task can carry out using the\n   * token depend on the settings. For example, a task can request job\n   * permissions in order to add other tasks to the job, or check the status of\n   * the job or of other tasks under the job.\n   */\n  authenticationTokenSettings?: AuthenticationTokenSettings;\n}\n\n/**\n * @interface\n * An interface representing TaskAddCollectionParameter.\n * @summary A collection of Azure Batch tasks to add.\n *\n */\nexport interface TaskAddCollectionParameter {\n  /**\n   * @member {TaskAddParameter[]} value The collection of tasks to add. The\n   * total serialized size of this collection must be less than 4MB. If it is\n   * greater than 4MB (for example if each task has 100's of resource files or\n   * environment variables), the request will fail with code\n   * 'RequestBodyTooLarge' and should be retried again with fewer tasks.\n   */\n  value: TaskAddParameter[];\n}\n\n/**\n * @interface\n * An interface representing ErrorMessage.\n * @summary An error message received in an Azure Batch error response.\n *\n */\nexport interface ErrorMessage {\n  /**\n   * @member {string} [lang] The language code of the error message.\n   */\n  lang?: string;\n  /**\n   * @member {string} [value] The text of the message.\n   */\n  value?: string;\n}\n\n/**\n * @interface\n * An interface representing BatchErrorDetail.\n * @summary An item of additional information included in an Azure Batch error\n * response.\n *\n */\nexport interface BatchErrorDetail {\n  /**\n   * @member {string} [key] An identifier specifying the meaning of the Value\n   * property.\n   */\n  key?: string;\n  /**\n   * @member {string} [value] The additional information included with the\n   * error response.\n   */\n  value?: string;\n}\n\n/**\n * @interface\n * An interface representing BatchError.\n * @summary An error response received from the Azure Batch service.\n *\n */\nexport interface BatchError {\n  /**\n   * @member {string} [code] An identifier for the error. Codes are invariant\n   * and are intended to be consumed programmatically.\n   */\n  code?: string;\n  /**\n   * @member {ErrorMessage} [message] A message describing the error, intended\n   * to be suitable for display in a user interface.\n   */\n  message?: ErrorMessage;\n  /**\n   * @member {BatchErrorDetail[]} [values] A collection of key-value pairs\n   * containing additional details about the error.\n   */\n  values?: BatchErrorDetail[];\n}\n\n/**\n * @interface\n * An interface representing TaskAddResult.\n * @summary Result for a single task added as part of an add task collection\n * operation.\n *\n */\nexport interface TaskAddResult {\n  /**\n   * @member {string} status The status of the add task request. Values are:\n   *\n   * success - Task was added successfully.\n   * clienterror - Task failed to add due to a client error and should not be\n   * retried without modifying the request as appropriate.\n   * servererror - Task failed to add due to a server error and can be retried\n   * without modification. Possible values include: 'success', 'clientError',\n   * 'serverError'\n   */\n  status: string;\n  /**\n   * @member {string} taskId The ID of the task for which this is the result.\n   */\n  taskId: string;\n  /**\n   * @member {string} [eTag] The ETag of the task, if the task was successfully\n   * added. You can use this to detect whether the task has changed between\n   * requests. In particular, you can be pass the ETag with an Update Task\n   * request to specify that your changes should take effect only if nobody\n   * else has modified the job in the meantime.\n   */\n  eTag?: string;\n  /**\n   * @member {Date} [lastModified] The last modified time of the task.\n   */\n  lastModified?: Date;\n  /**\n   * @member {string} [location] The URL of the task, if the task was\n   * successfully added.\n   */\n  location?: string;\n  /**\n   * @member {BatchError} [error] The error encountered while attempting to add\n   * the task.\n   */\n  error?: BatchError;\n}\n\n/**\n * @interface\n * An interface representing TaskAddCollectionResult.\n * @summary The result of adding a collection of tasks to a job.\n *\n */\nexport interface TaskAddCollectionResult {\n  /**\n   * @member {TaskAddResult[]} [value] The results of the add task collection\n   * operation.\n   */\n  value?: TaskAddResult[];\n}\n\n/**\n * @interface\n * An interface representing SubtaskInformation.\n * @summary Information about an Azure Batch subtask.\n *\n */\nexport interface SubtaskInformation {\n  /**\n   * @member {number} [id] The ID of the subtask.\n   */\n  id?: number;\n  /**\n   * @member {ComputeNodeInformation} [nodeInfo] Information about the compute\n   * node on which the subtask ran.\n   */\n  nodeInfo?: ComputeNodeInformation;\n  /**\n   * @member {Date} [startTime] The time at which the subtask started running.\n   * If the subtask has been restarted or retried, this is the most recent time\n   * at which the subtask started running.\n   */\n  startTime?: Date;\n  /**\n   * @member {Date} [endTime] The time at which the subtask completed. This\n   * property is set only if the subtask is in the Completed state.\n   */\n  endTime?: Date;\n  /**\n   * @member {number} [exitCode] The exit code of the program specified on the\n   * subtask command line. This property is set only if the subtask is in the\n   * completed state. In general, the exit code for a process reflects the\n   * specific convention implemented by the application developer for that\n   * process. If you use the exit code value to make decisions in your code, be\n   * sure that you know the exit code convention used by the application\n   * process. However, if the Batch service terminates the subtask (due to\n   * timeout, or user termination via the API) you may see an operating\n   * system-defined exit code.\n   */\n  exitCode?: number;\n  /**\n   * @member {TaskContainerExecutionInformation} [containerInfo] Information\n   * about the container under which the task is executing. This property is\n   * set only if the task runs in a container context.\n   */\n  containerInfo?: TaskContainerExecutionInformation;\n  /**\n   * @member {TaskFailureInformation} [failureInfo] Information describing the\n   * task failure, if any. This property is set only if the task is in the\n   * completed state and encountered a failure.\n   */\n  failureInfo?: TaskFailureInformation;\n  /**\n   * @member {string} [state] The current state of the subtask. Possible values\n   * include: 'preparing', 'running', 'completed'\n   */\n  state?: string;\n  /**\n   * @member {Date} [stateTransitionTime] The time at which the subtask entered\n   * its current state.\n   */\n  stateTransitionTime?: Date;\n  /**\n   * @member {string} [previousState] The previous state of the subtask. This\n   * property is not set if the subtask is in its initial running state.\n   * Possible values include: 'preparing', 'running', 'completed'\n   */\n  previousState?: string;\n  /**\n   * @member {Date} [previousStateTransitionTime] The time at which the subtask\n   * entered its previous state. This property is not set if the subtask is in\n   * its initial running state.\n   */\n  previousStateTransitionTime?: Date;\n  /**\n   * @member {string} [result] The result of the task execution. If the value\n   * is 'failed', then the details of the failure can be found in the\n   * failureInfo property. Possible values include: 'success', 'failure'\n   */\n  result?: string;\n}\n\n/**\n * @interface\n * An interface representing CloudTaskListSubtasksResult.\n * @summary The result of listing the subtasks of a task.\n *\n */\nexport interface CloudTaskListSubtasksResult {\n  /**\n   * @member {SubtaskInformation[]} [value] The list of subtasks.\n   */\n  value?: SubtaskInformation[];\n}\n\n/**\n * @interface\n * An interface representing TaskInformation.\n * @summary Information about a task running on a compute node.\n *\n */\nexport interface TaskInformation {\n  /**\n   * @member {string} [taskUrl] The URL of the task.\n   */\n  taskUrl?: string;\n  /**\n   * @member {string} [jobId] The ID of the job to which the task belongs.\n   */\n  jobId?: string;\n  /**\n   * @member {string} [taskId] The ID of the task.\n   */\n  taskId?: string;\n  /**\n   * @member {number} [subtaskId] The ID of the subtask if the task is a\n   * multi-instance task.\n   */\n  subtaskId?: number;\n  /**\n   * @member {string} taskState The current state of the task. Possible values\n   * include: 'active', 'preparing', 'running', 'completed'\n   */\n  taskState: string;\n  /**\n   * @member {TaskExecutionInformation} [executionInfo] Information about the\n   * execution of the task.\n   */\n  executionInfo?: TaskExecutionInformation;\n}\n\n/**\n * @interface\n * An interface representing StartTaskInformation.\n * @summary Information about a start task running on a compute node.\n *\n */\nexport interface StartTaskInformation {\n  /**\n   * @member {string} state The state of the start task on the compute node.\n   * Values are:\n   *\n   * running - The start task is currently running.\n   * completed - The start task has exited with exit code 0, or the start task\n   * has failed and the retry limit has reached, or the start task process did\n   * not run due to task preparation errors (such as resource file download\n   * failures). Possible values include: 'running', 'completed'\n   */\n  state: string;\n  /**\n   * @member {Date} startTime The time at which the start task started running.\n   * This value is reset every time the task is restarted or retried (that is,\n   * this is the most recent time at which the start task started running).\n   */\n  startTime: Date;\n  /**\n   * @member {Date} [endTime] The time at which the start task stopped running.\n   * This is the end time of the most recent run of the start task, if that run\n   * has completed (even if that run failed and a retry is pending). This\n   * element is not present if the start task is currently running.\n   */\n  endTime?: Date;\n  /**\n   * @member {number} [exitCode] The exit code of the program specified on the\n   * start task command line. This property is set only if the start task is in\n   * the completed state. In general, the exit code for a process reflects the\n   * specific convention implemented by the application developer for that\n   * process. If you use the exit code value to make decisions in your code, be\n   * sure that you know the exit code convention used by the application\n   * process. However, if the Batch service terminates the start task (due to\n   * timeout, or user termination via the API) you may see an operating\n   * system-defined exit code.\n   */\n  exitCode?: number;\n  /**\n   * @member {TaskContainerExecutionInformation} [containerInfo] Information\n   * about the container under which the task is executing. This property is\n   * set only if the task runs in a container context.\n   */\n  containerInfo?: TaskContainerExecutionInformation;\n  /**\n   * @member {TaskFailureInformation} [failureInfo] Information describing the\n   * task failure, if any. This property is set only if the task is in the\n   * completed state and encountered a failure.\n   */\n  failureInfo?: TaskFailureInformation;\n  /**\n   * @member {number} retryCount The number of times the task has been retried\n   * by the Batch service. Task application failures (non-zero exit code) are\n   * retried, pre-processing errors (the task could not be run) and file upload\n   * errors are not retried. The Batch service will retry the task up to the\n   * limit specified by the constraints.\n   */\n  retryCount: number;\n  /**\n   * @member {Date} [lastRetryTime] The most recent time at which a retry of\n   * the task started running. This element is present only if the task was\n   * retried (i.e. retryCount is nonzero). If present, this is typically the\n   * same as startTime, but may be different if the task has been restarted for\n   * reasons other than retry; for example, if the compute node was rebooted\n   * during a retry, then the startTime is updated but the lastRetryTime is\n   * not.\n   */\n  lastRetryTime?: Date;\n  /**\n   * @member {string} [result] The result of the task execution. If the value\n   * is 'failed', then the details of the failure can be found in the\n   * failureInfo property. Possible values include: 'success', 'failure'\n   */\n  result?: string;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeError.\n * @summary An error encountered by a compute node.\n *\n */\nexport interface ComputeNodeError {\n  /**\n   * @member {string} [code] An identifier for the compute node error. Codes\n   * are invariant and are intended to be consumed programmatically.\n   */\n  code?: string;\n  /**\n   * @member {string} [message] A message describing the compute node error,\n   * intended to be suitable for display in a user interface.\n   */\n  message?: string;\n  /**\n   * @member {NameValuePair[]} [errorDetails] The list of additional error\n   * details related to the compute node error.\n   */\n  errorDetails?: NameValuePair[];\n}\n\n/**\n * @interface\n * An interface representing InboundEndpoint.\n * @summary An inbound endpoint on a compute node.\n *\n */\nexport interface InboundEndpoint {\n  /**\n   * @member {string} name The name of the endpoint.\n   */\n  name: string;\n  /**\n   * @member {string} protocol The protocol of the endpoint. Possible values\n   * include: 'tcp', 'udp'\n   */\n  protocol: string;\n  /**\n   * @member {string} publicIPAddress The public IP address of the compute\n   * node.\n   */\n  publicIPAddress: string;\n  /**\n   * @member {string} publicFQDN The public fully qualified domain name for the\n   * compute node.\n   */\n  publicFQDN: string;\n  /**\n   * @member {number} frontendPort The public port number of the endpoint.\n   */\n  frontendPort: number;\n  /**\n   * @member {number} backendPort The backend port number of the endpoint.\n   */\n  backendPort: number;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeEndpointConfiguration.\n * @summary The endpoint configuration for the compute node.\n *\n */\nexport interface ComputeNodeEndpointConfiguration {\n  /**\n   * @member {InboundEndpoint[]} inboundEndpoints The list of inbound endpoints\n   * that are accessible on the compute node.\n   */\n  inboundEndpoints: InboundEndpoint[];\n}\n\n/**\n * @interface\n * An interface representing ComputeNode.\n * @summary A compute node in the Batch service.\n *\n */\nexport interface ComputeNode {\n  /**\n   * @member {string} [id] The ID of the compute node. Every node that is added\n   * to a pool is assigned a unique ID. Whenever a node is removed from a pool,\n   * all of its local files are deleted, and the ID is reclaimed and could be\n   * reused for new nodes.\n   */\n  id?: string;\n  /**\n   * @member {string} [url] The URL of the compute node.\n   */\n  url?: string;\n  /**\n   * @member {string} [state] The current state of the compute node. Values\n   * are:\n   *\n   * idle - The node is not currently running a task.\n   * rebooting - The node is rebooting.\n   * reimaging - The node is reimaging.\n   * running - The node is running one or more tasks (other than a start task).\n   * unusable - The node cannot be used for task execution due to errors.\n   * creating - The Batch service has obtained the underlying virtual machine\n   * from Azure Compute, but it has not yet started to join the pool.\n   * starting - the Batch service is starting on the underlying virtual\n   * machine.\n   * waitingforstarttask - The start task has started running on the compute\n   * node, but waitForSuccess is set and the start task has not yet completed.\n   * starttaskfailed - The start task has failed on the compute node (and\n   * exhausted all retries), and waitForSuccess is set. The node is not usable\n   * for running tasks.\n   * unknown - The Batch service has lost contact with the node, and does not\n   * know its true state.\n   * leavingpool - The node is leaving the pool, either because the user\n   * explicitly removed it or because the pool is resizing or autoscaling down.\n   * offline - The node is not currently running a task, and scheduling of new\n   * tasks to the node is disabled.\n   * preempted - The low-priority node has been preempted. Tasks which were\n   * running on the node when it was pre-empted will be rescheduled when\n   * another node becomes available. Possible values include: 'idle',\n   * 'rebooting', 'reimaging', 'running', 'unusable', 'creating', 'starting',\n   * 'waitingForStartTask', 'startTaskFailed', 'unknown', 'leavingPool',\n   * 'offline', 'preempted'\n   */\n  state?: string;\n  /**\n   * @member {string} [schedulingState] Whether the compute node is available\n   * for task scheduling. Values are:\n   *\n   * enabled - Tasks can be scheduled on the node.\n   * disabled - No new tasks will be scheduled on the node. Tasks already\n   * running on the node may still run to completion. All nodes start with\n   * scheduling enabled. Possible values include: 'enabled', 'disabled'\n   */\n  schedulingState?: string;\n  /**\n   * @member {Date} [stateTransitionTime] The time at which the compute node\n   * entered its current state.\n   */\n  stateTransitionTime?: Date;\n  /**\n   * @member {Date} [lastBootTime] The time at which the compute node was\n   * started. This property may not be present if the node state is unusable.\n   */\n  lastBootTime?: Date;\n  /**\n   * @member {Date} [allocationTime] The time at which this compute node was\n   * allocated to the pool.\n   */\n  allocationTime?: Date;\n  /**\n   * @member {string} [ipAddress] The IP address that other compute nodes can\n   * use to communicate with this compute node. Every node that is added to a\n   * pool is assigned a unique IP address. Whenever a node is removed from a\n   * pool, all of its local files are deleted, and the IP address is reclaimed\n   * and could be reused for new nodes.\n   */\n  ipAddress?: string;\n  /**\n   * @member {string} [affinityId] An identifier which can be passed when\n   * adding a task to request that the task be scheduled on this node. Note\n   * that this is just a soft affinity. If the target node is busy or\n   * unavailable at the time the task is scheduled, then the task will be\n   * scheduled elsewhere.\n   */\n  affinityId?: string;\n  /**\n   * @member {string} [vmSize] The size of the virtual machine hosting the\n   * compute node. For information about available sizes of virtual machines\n   * for Cloud Services pools (pools created with cloudServiceConfiguration),\n   * see Sizes for Cloud Services\n   * (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).\n   * Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and\n   * A2V2. For information about available VM sizes for pools using images from\n   * the Virtual Machines Marketplace (pools created with\n   * virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)\n   * (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)\n   * or Sizes for Virtual Machines (Windows)\n   * (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).\n   * Batch supports all Azure VM sizes except STANDARD_A0 and those with\n   * premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).\n   */\n  vmSize?: string;\n  /**\n   * @member {number} [totalTasksRun] The total number of job tasks completed\n   * on the compute node. This includes Job Manager tasks and normal tasks, but\n   * not Job Preparation, Job Release or Start tasks.\n   */\n  totalTasksRun?: number;\n  /**\n   * @member {number} [runningTasksCount] The total number of currently running\n   * job tasks on the compute node. This includes Job Manager tasks and normal\n   * tasks, but not Job Preparation, Job Release or Start tasks.\n   */\n  runningTasksCount?: number;\n  /**\n   * @member {number} [totalTasksSucceeded] The total number of job tasks which\n   * completed successfully (with exitCode 0) on the compute node. This\n   * includes Job Manager tasks and normal tasks, but not Job Preparation, Job\n   * Release or Start tasks.\n   */\n  totalTasksSucceeded?: number;\n  /**\n   * @member {TaskInformation[]} [recentTasks] A list of tasks whose state has\n   * recently changed. This property is present only if at least one task has\n   * run on this node since it was assigned to the pool.\n   */\n  recentTasks?: TaskInformation[];\n  /**\n   * @member {StartTask} [startTask] The task specified to run on the compute\n   * node as it joins the pool.\n   */\n  startTask?: StartTask;\n  /**\n   * @member {StartTaskInformation} [startTaskInfo] Runtime information about\n   * the execution of the start task on the compute node.\n   */\n  startTaskInfo?: StartTaskInformation;\n  /**\n   * @member {CertificateReference[]} [certificateReferences] The list of\n   * certificates installed on the compute node. For Windows compute nodes, the\n   * Batch service installs the certificates to the specified certificate store\n   * and location. For Linux compute nodes, the certificates are stored in a\n   * directory inside the task working directory and an environment variable\n   * AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this\n   * location. For certificates with visibility of 'remoteUser', a 'certs'\n   * directory is created in the user's home directory (e.g.,\n   * /home/{user-name}/certs) and certificates are placed in that directory.\n   */\n  certificateReferences?: CertificateReference[];\n  /**\n   * @member {ComputeNodeError[]} [errors] The list of errors that are\n   * currently being encountered by the compute node.\n   */\n  errors?: ComputeNodeError[];\n  /**\n   * @member {boolean} [isDedicated] Whether this compute node is a dedicated\n   * node. If false, the node is a low-priority node.\n   */\n  isDedicated?: boolean;\n  /**\n   * @member {ComputeNodeEndpointConfiguration} [endpointConfiguration] The\n   * endpoint configuration for the compute node.\n   */\n  endpointConfiguration?: ComputeNodeEndpointConfiguration;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeUser.\n * @summary A user account for RDP or SSH access on a compute node.\n *\n */\nexport interface ComputeNodeUser {\n  /**\n   * @member {string} name The user name of the account.\n   */\n  name: string;\n  /**\n   * @member {boolean} [isAdmin] Whether the account should be an administrator\n   * on the compute node. The default value is false.\n   */\n  isAdmin?: boolean;\n  /**\n   * @member {Date} [expiryTime] The time at which the account should expire.\n   * If omitted, the default is 1 day from the current time. For Linux compute\n   * nodes, the expiryTime has a precision up to a day.\n   */\n  expiryTime?: Date;\n  /**\n   * @member {string} [password] The password of the account. The password is\n   * required for Windows nodes (those created with\n   * 'cloudServiceConfiguration', or created with 'virtualMachineConfiguration'\n   * using a Windows image reference). For Linux compute nodes, the password\n   * can optionally be specified along with the sshPublicKey property.\n   */\n  password?: string;\n  /**\n   * @member {string} [sshPublicKey] The SSH public key that can be used for\n   * remote login to the compute node. The public key should be compatible with\n   * OpenSSH encoding and should be base 64 encoded. This property can be\n   * specified only for Linux nodes. If this is specified for a Windows node,\n   * then the Batch service rejects the request; if you are calling the REST\n   * API directly, the HTTP status code is 400 (Bad Request).\n   */\n  sshPublicKey?: string;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeGetRemoteLoginSettingsResult.\n * @summary The remote login settings for a compute node.\n *\n */\nexport interface ComputeNodeGetRemoteLoginSettingsResult {\n  /**\n   * @member {string} remoteLoginIPAddress The IP address used for remote login\n   * to the compute node.\n   */\n  remoteLoginIPAddress: string;\n  /**\n   * @member {number} remoteLoginPort The port used for remote login to the\n   * compute node.\n   */\n  remoteLoginPort: number;\n}\n\n/**\n * @interface\n * An interface representing JobSchedulePatchParameter.\n * @summary The set of changes to be made to a job schedule.\n *\n */\nexport interface JobSchedulePatchParameter {\n  /**\n   * @member {Schedule} [schedule] The schedule according to which jobs will be\n   * created. If you do not specify this element, the existing schedule is left\n   * unchanged.\n   */\n  schedule?: Schedule;\n  /**\n   * @member {JobSpecification} [jobSpecification] The details of the jobs to\n   * be created on this schedule. Updates affect only jobs that are started\n   * after the update has taken place. Any currently active job continues with\n   * the older specification.\n   */\n  jobSpecification?: JobSpecification;\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the job schedule as metadata. If you do not specify this element,\n   * existing metadata is left unchanged.\n   */\n  metadata?: MetadataItem[];\n}\n\n/**\n * @interface\n * An interface representing JobScheduleUpdateParameter.\n * @summary The set of changes to be made to a job schedule.\n *\n */\nexport interface JobScheduleUpdateParameter {\n  /**\n   * @member {Schedule} schedule The schedule according to which jobs will be\n   * created. If you do not specify this element, it is equivalent to passing\n   * the default schedule: that is, a single job scheduled to run immediately.\n   */\n  schedule: Schedule;\n  /**\n   * @member {JobSpecification} jobSpecification Details of the jobs to be\n   * created on this schedule. Updates affect only jobs that are started after\n   * the update has taken place. Any currently active job continues with the\n   * older specification.\n   */\n  jobSpecification: JobSpecification;\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the job schedule as metadata. If you do not specify this element, it\n   * takes the default value of an empty list; in effect, any existing metadata\n   * is deleted.\n   */\n  metadata?: MetadataItem[];\n}\n\n/**\n * @interface\n * An interface representing JobDisableParameter.\n * @summary Options when disabling a job.\n *\n */\nexport interface JobDisableParameter {\n  /**\n   * @member {string} disableTasks What to do with active tasks associated with\n   * the job. Values are:\n   *\n   * requeue - Terminate running tasks and requeue them. The tasks will run\n   * again when the job is enabled.\n   * terminate - Terminate running tasks. The tasks will not run again.\n   * wait - Allow currently running tasks to complete. Possible values include:\n   * 'requeue', 'terminate', 'wait'\n   */\n  disableTasks: string;\n}\n\n/**\n * @interface\n * An interface representing JobTerminateParameter.\n * @summary Options when terminating a job.\n *\n */\nexport interface JobTerminateParameter {\n  /**\n   * @member {string} [terminateReason] The text you want to appear as the\n   * job's TerminateReason. The default is 'UserTerminate'.\n   */\n  terminateReason?: string;\n}\n\n/**\n * @interface\n * An interface representing JobPatchParameter.\n * @summary The set of changes to be made to a job.\n *\n */\nexport interface JobPatchParameter {\n  /**\n   * @member {number} [priority] The priority of the job. Priority values can\n   * range from -1000 to 1000, with -1000 being the lowest priority and 1000\n   * being the highest priority. If omitted, the priority of the job is left\n   * unchanged.\n   */\n  priority?: number;\n  /**\n   * @member {string} [onAllTasksComplete] The action the Batch service should\n   * take when all tasks in the job are in the completed state. If omitted, the\n   * completion behavior is left unchanged. You may not change the value from\n   * terminateJob to noAction - that is, once you have engaged automatic job\n   * termination, you cannot turn it off again. If you try to do this, the\n   * request fails with an 'invalid property value' error response; if you are\n   * calling the REST API directly, the HTTP status code is 400 (Bad Request).\n   * Possible values include: 'noAction', 'terminateJob'\n   */\n  onAllTasksComplete?: string;\n  /**\n   * @member {JobConstraints} [constraints] The execution constraints for the\n   * job. If omitted, the existing execution constraints are left unchanged.\n   */\n  constraints?: JobConstraints;\n  /**\n   * @member {PoolInformation} [poolInfo] The pool on which the Batch service\n   * runs the job's tasks. You may change the pool for a job only when the job\n   * is disabled. The Patch Job call will fail if you include the poolInfo\n   * element and the job is not disabled. If you specify an\n   * autoPoolSpecification specification in the poolInfo, only the keepAlive\n   * property can be updated, and then only if the auto pool has a\n   * poolLifetimeOption of job. If omitted, the job continues to run on its\n   * current pool.\n   */\n  poolInfo?: PoolInformation;\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the job as metadata. If omitted, the existing job metadata is left\n   * unchanged.\n   */\n  metadata?: MetadataItem[];\n}\n\n/**\n * @interface\n * An interface representing JobUpdateParameter.\n * @summary The set of changes to be made to a job.\n *\n */\nexport interface JobUpdateParameter {\n  /**\n   * @member {number} [priority] The priority of the job. Priority values can\n   * range from -1000 to 1000, with -1000 being the lowest priority and 1000\n   * being the highest priority. If omitted, it is set to the default value 0.\n   */\n  priority?: number;\n  /**\n   * @member {JobConstraints} [constraints] The execution constraints for the\n   * job. If omitted, the constraints are cleared.\n   */\n  constraints?: JobConstraints;\n  /**\n   * @member {PoolInformation} poolInfo The pool on which the Batch service\n   * runs the job's tasks. You may change the pool for a job only when the job\n   * is disabled. The Update Job call will fail if you include the poolInfo\n   * element and the job is not disabled. If you specify an\n   * autoPoolSpecification specification in the poolInfo, only the keepAlive\n   * property can be updated, and then only if the auto pool has a\n   * poolLifetimeOption of job.\n   */\n  poolInfo: PoolInformation;\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the job as metadata. If omitted, it takes the default value of an\n   * empty list; in effect, any existing metadata is deleted.\n   */\n  metadata?: MetadataItem[];\n  /**\n   * @member {string} [onAllTasksComplete] The action the Batch service should\n   * take when all tasks in the job are in the completed state. If omitted, the\n   * completion behavior is set to noAction. If the current value is\n   * terminateJob, this is an error because a job's completion behavior may not\n   * be changed from terminateJob to noAction. You may not change the value\n   * from terminatejob to noaction - that is, once you have engaged automatic\n   * job termination, you cannot turn it off again. If you try to do this, the\n   * request fails and Batch returns status code 400 (Bad Request) and an\n   * 'invalid property value' error response. If you do not specify this\n   * element in a PUT request, it is equivalent to passing noaction. This is an\n   * error if the current value is terminatejob. Possible values include:\n   * 'noAction', 'terminateJob'\n   */\n  onAllTasksComplete?: string;\n}\n\n/**\n * @interface\n * An interface representing PoolEnableAutoScaleParameter.\n * @summary Options for enabling automatic scaling on a pool.\n *\n */\nexport interface PoolEnableAutoScaleParameter {\n  /**\n   * @member {string} [autoScaleFormula] The formula for the desired number of\n   * compute nodes in the pool. The formula is checked for validity before it\n   * is applied to the pool. If the formula is not valid, the Batch service\n   * rejects the request with detailed error information. For more information\n   * about specifying this formula, see Automatically scale compute nodes in an\n   * Azure Batch pool\n   * (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).\n   */\n  autoScaleFormula?: string;\n  /**\n   * @member {moment.Duration} [autoScaleEvaluationInterval] The time interval\n   * at which to automatically adjust the pool size according to the autoscale\n   * formula. The default value is 15 minutes. The minimum and maximum value\n   * are 5 minutes and 168 hours respectively. If you specify a value less than\n   * 5 minutes or greater than 168 hours, the Batch service rejects the request\n   * with an invalid property value error; if you are calling the REST API\n   * directly, the HTTP status code is 400 (Bad Request). If you specify a new\n   * interval, then the existing autoscale evaluation schedule will be stopped\n   * and a new autoscale evaluation schedule will be started, with its starting\n   * time being the time when this request was issued.\n   */\n  autoScaleEvaluationInterval?: moment.Duration;\n}\n\n/**\n * @interface\n * An interface representing PoolEvaluateAutoScaleParameter.\n * @summary Options for evaluating an automatic scaling formula on a pool.\n *\n */\nexport interface PoolEvaluateAutoScaleParameter {\n  /**\n   * @member {string} autoScaleFormula The formula for the desired number of\n   * compute nodes in the pool. The formula is validated and its results\n   * calculated, but it is not applied to the pool. To apply the formula to the\n   * pool, 'Enable automatic scaling on a pool'. For more information about\n   * specifying this formula, see Automatically scale compute nodes in an Azure\n   * Batch pool\n   * (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).\n   */\n  autoScaleFormula: string;\n}\n\n/**\n * @interface\n * An interface representing PoolResizeParameter.\n * @summary Options for changing the size of a pool.\n *\n */\nexport interface PoolResizeParameter {\n  /**\n   * @member {number} [targetDedicatedNodes] The desired number of dedicated\n   * compute nodes in the pool.\n   */\n  targetDedicatedNodes?: number;\n  /**\n   * @member {number} [targetLowPriorityNodes] The desired number of\n   * low-priority compute nodes in the pool.\n   */\n  targetLowPriorityNodes?: number;\n  /**\n   * @member {moment.Duration} [resizeTimeout] The timeout for allocation of\n   * compute nodes to the pool or removal of compute nodes from the pool. The\n   * default value is 15 minutes. The minimum value is 5 minutes. If you\n   * specify a value less than 5 minutes, the Batch service returns an error;\n   * if you are calling the REST API directly, the HTTP status code is 400 (Bad\n   * Request).\n   */\n  resizeTimeout?: moment.Duration;\n  /**\n   * @member {string} [nodeDeallocationOption] Determines what to do with a\n   * node and its running task(s) if the pool size is decreasing. The default\n   * value is requeue. Possible values include: 'requeue', 'terminate',\n   * 'taskCompletion', 'retainedData'\n   */\n  nodeDeallocationOption?: string;\n}\n\n/**\n * @interface\n * An interface representing PoolUpdatePropertiesParameter.\n * @summary The set of changes to be made to a pool.\n *\n */\nexport interface PoolUpdatePropertiesParameter {\n  /**\n   * @member {StartTask} [startTask] A task to run on each compute node as it\n   * joins the pool. The task runs when the node is added to the pool or when\n   * the node is restarted. If this element is present, it overwrites any\n   * existing start task. If omitted, any existing start task is removed from\n   * the pool.\n   */\n  startTask?: StartTask;\n  /**\n   * @member {CertificateReference[]} certificateReferences A list of\n   * certificates to be installed on each compute node in the pool. This list\n   * replaces any existing certificate references configured on the pool. If\n   * you specify an empty collection, any existing certificate references are\n   * removed from the pool. For Windows compute nodes, the Batch service\n   * installs the certificates to the specified certificate store and location.\n   * For Linux compute nodes, the certificates are stored in a directory inside\n   * the task working directory and an environment variable\n   * AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this\n   * location. For certificates with visibility of 'remoteUser', a 'certs'\n   * directory is created in the user's home directory (e.g.,\n   * /home/{user-name}/certs) and certificates are placed in that directory.\n   */\n  certificateReferences: CertificateReference[];\n  /**\n   * @member {ApplicationPackageReference[]} applicationPackageReferences A\n   * list of application packages to be installed on each compute node in the\n   * pool. The list replaces any existing application package references on the\n   * pool. Changes to application package references affect all new compute\n   * nodes joining the pool, but do not affect compute nodes that are already\n   * in the pool until they are rebooted or reimaged. If omitted, or if you\n   * specify an empty collection, any existing application packages references\n   * are removed from the pool.\n   */\n  applicationPackageReferences: ApplicationPackageReference[];\n  /**\n   * @member {MetadataItem[]} metadata A list of name-value pairs associated\n   * with the pool as metadata. This list replaces any existing metadata\n   * configured on the pool. If omitted, or if you specify an empty collection,\n   * any existing metadata is removed from the pool.\n   */\n  metadata: MetadataItem[];\n}\n\n/**\n * @interface\n * An interface representing PoolUpgradeOSParameter.\n * @summary Options for upgrading the operating system of compute nodes in a\n * pool.\n *\n */\nexport interface PoolUpgradeOSParameter {\n  /**\n   * @member {string} targetOSVersion The Azure Guest OS version to be\n   * installed on the virtual machines in the pool.\n   */\n  targetOSVersion: string;\n}\n\n/**\n * @interface\n * An interface representing PoolPatchParameter.\n * @summary The set of changes to be made to a pool.\n *\n */\nexport interface PoolPatchParameter {\n  /**\n   * @member {StartTask} [startTask] A task to run on each compute node as it\n   * joins the pool. The task runs when the node is added to the pool or when\n   * the node is restarted. If this element is present, it overwrites any\n   * existing start task. If omitted, any existing start task is left\n   * unchanged.\n   */\n  startTask?: StartTask;\n  /**\n   * @member {CertificateReference[]} [certificateReferences] A list of\n   * certificates to be installed on each compute node in the pool. If this\n   * element is present, it replaces any existing certificate references\n   * configured on the pool. If omitted, any existing certificate references\n   * are left unchanged. For Windows compute nodes, the Batch service installs\n   * the certificates to the specified certificate store and location. For\n   * Linux compute nodes, the certificates are stored in a directory inside the\n   * task working directory and an environment variable\n   * AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this\n   * location. For certificates with visibility of 'remoteUser', a 'certs'\n   * directory is created in the user's home directory (e.g.,\n   * /home/{user-name}/certs) and certificates are placed in that directory.\n   */\n  certificateReferences?: CertificateReference[];\n  /**\n   * @member {ApplicationPackageReference[]} [applicationPackageReferences] A\n   * list of application packages to be installed on each compute node in the\n   * pool. Changes to application package references affect all new compute\n   * nodes joining the pool, but do not affect compute nodes that are already\n   * in the pool until they are rebooted or reimaged. If this element is\n   * present, it replaces any existing application package references. If you\n   * specify an empty collection, then all application package references are\n   * removed from the pool. If omitted, any existing application package\n   * references are left unchanged.\n   */\n  applicationPackageReferences?: ApplicationPackageReference[];\n  /**\n   * @member {MetadataItem[]} [metadata] A list of name-value pairs associated\n   * with the pool as metadata. If this element is present, it replaces any\n   * existing metadata configured on the pool. If you specify an empty\n   * collection, any metadata is removed from the pool. If omitted, any\n   * existing metadata is left unchanged.\n   */\n  metadata?: MetadataItem[];\n}\n\n/**\n * @interface\n * An interface representing TaskUpdateParameter.\n * @summary The set of changes to be made to a task.\n *\n */\nexport interface TaskUpdateParameter {\n  /**\n   * @member {TaskConstraints} [constraints] Constraints that apply to this\n   * task. If omitted, the task is given the default constraints. For\n   * multi-instance tasks, updating the retention time applies only to the\n   * primary task and not subtasks.\n   */\n  constraints?: TaskConstraints;\n}\n\n/**\n * @interface\n * An interface representing NodeUpdateUserParameter.\n * @summary The set of changes to be made to a user account on a node.\n *\n */\nexport interface NodeUpdateUserParameter {\n  /**\n   * @member {string} [password] The password of the account. The password is\n   * required for Windows nodes (those created with\n   * 'cloudServiceConfiguration', or created with 'virtualMachineConfiguration'\n   * using a Windows image reference). For Linux compute nodes, the password\n   * can optionally be specified along with the sshPublicKey property. If\n   * omitted, any existing password is removed.\n   */\n  password?: string;\n  /**\n   * @member {Date} [expiryTime] The time at which the account should expire.\n   * If omitted, the default is 1 day from the current time. For Linux compute\n   * nodes, the expiryTime has a precision up to a day.\n   */\n  expiryTime?: Date;\n  /**\n   * @member {string} [sshPublicKey] The SSH public key that can be used for\n   * remote login to the compute node. The public key should be compatible with\n   * OpenSSH encoding and should be base 64 encoded. This property can be\n   * specified only for Linux nodes. If this is specified for a Windows node,\n   * then the Batch service rejects the request; if you are calling the REST\n   * API directly, the HTTP status code is 400 (Bad Request). If omitted, any\n   * existing SSH public key is removed.\n   */\n  sshPublicKey?: string;\n}\n\n/**\n * @interface\n * An interface representing NodeRebootParameter.\n * @summary Options for rebooting a compute node.\n *\n */\nexport interface NodeRebootParameter {\n  /**\n   * @member {string} [nodeRebootOption] When to reboot the compute node and\n   * what to do with currently running tasks. Values are:\n   *\n   * requeue - Terminate running task processes and requeue the tasks. The\n   * tasks will run again when a node is available. Restart the node as soon as\n   * tasks have been terminated.\n   * terminate - Terminate running tasks. The tasks will not run again. Restart\n   * the node as soon as tasks have been terminated.\n   * taskcompletion - Allow currently running tasks to complete. Schedule no\n   * new tasks while waiting. Restart the node when all tasks have completed.\n   * retaineddata - Allow currently running tasks to complete, then wait for\n   * all task data retention periods to expire. Schedule no new tasks while\n   * waiting. Restart the node when all task retention periods have expired.\n   *\n   * The default value is requeue. Possible values include: 'requeue',\n   * 'terminate', 'taskCompletion', 'retainedData'\n   */\n  nodeRebootOption?: string;\n}\n\n/**\n * @interface\n * An interface representing NodeReimageParameter.\n * @summary Options for reimaging a compute node.\n *\n */\nexport interface NodeReimageParameter {\n  /**\n   * @member {string} [nodeReimageOption] When to reimage the compute node and\n   * what to do with currently running tasks. Values are:\n   *\n   * requeue - Terminate running task processes and requeue the tasks. The\n   * tasks will run again when a node is available. Reimage the node as soon as\n   * tasks have been terminated.\n   * terminate - Terminate running tasks. The tasks will not run again. Reimage\n   * the node as soon as tasks have been terminated.\n   * taskcompletion - Allow currently running tasks to complete. Schedule no\n   * new tasks while waiting. Reimage the node when all tasks have completed.\n   * retaineddata - Allow currently running tasks to complete, then wait for\n   * all task data retention periods to expire. Schedule no new tasks while\n   * waiting. Reimage the node when all task retention periods have expired.\n   *\n   * The default value is requeue. Possible values include: 'requeue',\n   * 'terminate', 'taskCompletion', 'retainedData'\n   */\n  nodeReimageOption?: string;\n}\n\n/**\n * @interface\n * An interface representing NodeDisableSchedulingParameter.\n * @summary Options for disabling scheduling on a compute node.\n *\n */\nexport interface NodeDisableSchedulingParameter {\n  /**\n   * @member {string} [nodeDisableSchedulingOption] What to do with currently\n   * running tasks when disabling task scheduling on the compute node. Values\n   * are:\n   *\n   * requeue - Terminate running task processes and requeue the tasks. The\n   * tasks may run again on other compute nodes, or when task scheduling is\n   * re-enabled on this node. Enter offline state as soon as tasks have been\n   * terminated.\n   * terminate - Terminate running tasks. The tasks will not run again. Enter\n   * offline state as soon as tasks have been terminated.\n   * taskcompletion - Allow currently running tasks to complete. Schedule no\n   * new tasks while waiting. Enter offline state when all tasks have\n   * completed.\n   *\n   * The default value is requeue. Possible values include: 'requeue',\n   * 'terminate', 'taskCompletion'\n   */\n  nodeDisableSchedulingOption?: string;\n}\n\n/**\n * @interface\n * An interface representing NodeRemoveParameter.\n * @summary Options for removing compute nodes from a pool.\n *\n */\nexport interface NodeRemoveParameter {\n  /**\n   * @member {string[]} nodeList A list containing the IDs of the compute nodes\n   * to be removed from the specified pool.\n   */\n  nodeList: string[];\n  /**\n   * @member {moment.Duration} [resizeTimeout] The timeout for removal of\n   * compute nodes to the pool. The default value is 15 minutes. The minimum\n   * value is 5 minutes. If you specify a value less than 5 minutes, the Batch\n   * service returns an error; if you are calling the REST API directly, the\n   * HTTP status code is 400 (Bad Request).\n   */\n  resizeTimeout?: moment.Duration;\n  /**\n   * @member {string} [nodeDeallocationOption] Determines what to do with a\n   * node and its running task(s) after it has been selected for deallocation.\n   * The default value is requeue. Possible values include: 'requeue',\n   * 'terminate', 'taskCompletion', 'retainedData'\n   */\n  nodeDeallocationOption?: string;\n}\n\n/**\n * @interface\n * An interface representing ApplicationListOptions.\n * Additional parameters for list operation.\n *\n */\nexport interface ApplicationListOptions {\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 applications can be returned. Default value:\n   * 1000 .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ApplicationGetOptions.\n * Additional parameters for get operation.\n *\n */\nexport interface ApplicationGetOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolListUsageMetricsOptions.\n * Additional parameters for listUsageMetrics operation.\n *\n */\nexport interface PoolListUsageMetricsOptions {\n  /**\n   * @member {Date} [startTime] The earliest time from which to include\n   * metrics. This must be at least two and a half hours before the current\n   * time. If not specified this defaults to the start time of the last\n   * aggregation interval currently available.\n   */\n  startTime?: Date;\n  /**\n   * @member {Date} [endTime] The latest time from which to include metrics.\n   * This must be at least two hours before the current time. If not specified\n   * this defaults to the end time of the last aggregation interval currently\n   * available.\n   */\n  endTime?: Date;\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics.\n   */\n  filter?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 results will be returned. Default value: 1000\n   * .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolGetAllLifetimeStatisticsOptions.\n * Additional parameters for getAllLifetimeStatistics operation.\n *\n */\nexport interface PoolGetAllLifetimeStatisticsOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolAddOptions.\n * Additional parameters for add operation.\n *\n */\nexport interface PoolAddOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolListOptions.\n * Additional parameters for list operation.\n *\n */\nexport interface PoolListOptions {\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-pools.\n   */\n  filter?: string;\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {string} [expand] An OData $expand clause.\n   */\n  expand?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 pools can be returned. Default value: 1000 .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolDeleteMethodOptions.\n * Additional parameters for deleteMethod operation.\n *\n */\nexport interface PoolDeleteMethodOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolExistsOptions.\n * Additional parameters for exists operation.\n *\n */\nexport interface PoolExistsOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolGetOptions.\n * Additional parameters for get operation.\n *\n */\nexport interface PoolGetOptions {\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {string} [expand] An OData $expand clause.\n   */\n  expand?: string;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolPatchOptions.\n * Additional parameters for patch operation.\n *\n */\nexport interface PoolPatchOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolDisableAutoScaleOptions.\n * Additional parameters for disableAutoScale operation.\n *\n */\nexport interface PoolDisableAutoScaleOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolEnableAutoScaleOptions.\n * Additional parameters for enableAutoScale operation.\n *\n */\nexport interface PoolEnableAutoScaleOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolEvaluateAutoScaleOptions.\n * Additional parameters for evaluateAutoScale operation.\n *\n */\nexport interface PoolEvaluateAutoScaleOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolResizeOptions.\n * Additional parameters for resize operation.\n *\n */\nexport interface PoolResizeOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolStopResizeOptions.\n * Additional parameters for stopResize operation.\n *\n */\nexport interface PoolStopResizeOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolUpdatePropertiesOptions.\n * Additional parameters for updateProperties operation.\n *\n */\nexport interface PoolUpdatePropertiesOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolUpgradeOSOptions.\n * Additional parameters for upgradeOS operation.\n *\n */\nexport interface PoolUpgradeOSOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolRemoveNodesOptions.\n * Additional parameters for removeNodes operation.\n *\n */\nexport interface PoolRemoveNodesOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing AccountListNodeAgentSkusOptions.\n * Additional parameters for listNodeAgentSkus operation.\n *\n */\nexport interface AccountListNodeAgentSkusOptions {\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-node-agent-skus.\n   */\n  filter?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 results will be returned. Default value: 1000\n   * .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobGetAllLifetimeStatisticsOptions.\n * Additional parameters for getAllLifetimeStatistics operation.\n *\n */\nexport interface JobGetAllLifetimeStatisticsOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobDeleteMethodOptions.\n * Additional parameters for deleteMethod operation.\n *\n */\nexport interface JobDeleteMethodOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobGetOptions.\n * Additional parameters for get operation.\n *\n */\nexport interface JobGetOptions {\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {string} [expand] An OData $expand clause.\n   */\n  expand?: string;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobPatchOptions.\n * Additional parameters for patch operation.\n *\n */\nexport interface JobPatchOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobUpdateOptions.\n * Additional parameters for update operation.\n *\n */\nexport interface JobUpdateOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobDisableOptions.\n * Additional parameters for disable operation.\n *\n */\nexport interface JobDisableOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobEnableOptions.\n * Additional parameters for enable operation.\n *\n */\nexport interface JobEnableOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobTerminateOptions.\n * Additional parameters for terminate operation.\n *\n */\nexport interface JobTerminateOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobAddOptions.\n * Additional parameters for add operation.\n *\n */\nexport interface JobAddOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobListOptions.\n * Additional parameters for list operation.\n *\n */\nexport interface JobListOptions {\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs.\n   */\n  filter?: string;\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {string} [expand] An OData $expand clause.\n   */\n  expand?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 jobs can be returned. Default value: 1000 .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobListFromJobScheduleOptions.\n * Additional parameters for listFromJobSchedule operation.\n *\n */\nexport interface JobListFromJobScheduleOptions {\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule.\n   */\n  filter?: string;\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {string} [expand] An OData $expand clause.\n   */\n  expand?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 jobs can be returned. Default value: 1000 .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobListPreparationAndReleaseTaskStatusOptions.\n * Additional parameters for listPreparationAndReleaseTaskStatus operation.\n *\n */\nexport interface JobListPreparationAndReleaseTaskStatusOptions {\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status.\n   */\n  filter?: string;\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 tasks can be returned. Default value: 1000 .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobGetTaskCountsOptions.\n * Additional parameters for getTaskCounts operation.\n *\n */\nexport interface JobGetTaskCountsOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing CertificateAddOptions.\n * Additional parameters for add operation.\n *\n */\nexport interface CertificateAddOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing CertificateListOptions.\n * Additional parameters for list operation.\n *\n */\nexport interface CertificateListOptions {\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-certificates.\n   */\n  filter?: string;\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 certificates can be returned. Default value:\n   * 1000 .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing CertificateCancelDeletionOptions.\n * Additional parameters for cancelDeletion operation.\n *\n */\nexport interface CertificateCancelDeletionOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing CertificateDeleteMethodOptions.\n * Additional parameters for deleteMethod operation.\n *\n */\nexport interface CertificateDeleteMethodOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing CertificateGetOptions.\n * Additional parameters for get operation.\n *\n */\nexport interface CertificateGetOptions {\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing FileDeleteFromTaskOptions.\n * Additional parameters for deleteFromTask operation.\n *\n */\nexport interface FileDeleteFromTaskOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing FileGetFromTaskOptions.\n * Additional parameters for getFromTask operation.\n *\n */\nexport interface FileGetFromTaskOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ocpRange] The byte range to be retrieved. The default is\n   * to retrieve the entire file. The format is bytes=startRange-endRange.\n   */\n  ocpRange?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing FileGetPropertiesFromTaskOptions.\n * Additional parameters for getPropertiesFromTask operation.\n *\n */\nexport interface FileGetPropertiesFromTaskOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing FileDeleteFromComputeNodeOptions.\n * Additional parameters for deleteFromComputeNode operation.\n *\n */\nexport interface FileDeleteFromComputeNodeOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing FileGetFromComputeNodeOptions.\n * Additional parameters for getFromComputeNode operation.\n *\n */\nexport interface FileGetFromComputeNodeOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ocpRange] The byte range to be retrieved. The default is\n   * to retrieve the entire file. The format is bytes=startRange-endRange.\n   */\n  ocpRange?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing FileGetPropertiesFromComputeNodeOptions.\n * Additional parameters for getPropertiesFromComputeNode operation.\n *\n */\nexport interface FileGetPropertiesFromComputeNodeOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing FileListFromTaskOptions.\n * Additional parameters for listFromTask operation.\n *\n */\nexport interface FileListFromTaskOptions {\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-task-files.\n   */\n  filter?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 files can be returned. Default value: 1000 .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing FileListFromComputeNodeOptions.\n * Additional parameters for listFromComputeNode operation.\n *\n */\nexport interface FileListFromComputeNodeOptions {\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-compute-node-files.\n   */\n  filter?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 files can be returned. Default value: 1000 .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleExistsOptions.\n * Additional parameters for exists operation.\n *\n */\nexport interface JobScheduleExistsOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleDeleteMethodOptions.\n * Additional parameters for deleteMethod operation.\n *\n */\nexport interface JobScheduleDeleteMethodOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleGetOptions.\n * Additional parameters for get operation.\n *\n */\nexport interface JobScheduleGetOptions {\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {string} [expand] An OData $expand clause.\n   */\n  expand?: string;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobSchedulePatchOptions.\n * Additional parameters for patch operation.\n *\n */\nexport interface JobSchedulePatchOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleUpdateOptions.\n * Additional parameters for update operation.\n *\n */\nexport interface JobScheduleUpdateOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleDisableOptions.\n * Additional parameters for disable operation.\n *\n */\nexport interface JobScheduleDisableOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleEnableOptions.\n * Additional parameters for enable operation.\n *\n */\nexport interface JobScheduleEnableOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleTerminateOptions.\n * Additional parameters for terminate operation.\n *\n */\nexport interface JobScheduleTerminateOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleAddOptions.\n * Additional parameters for add operation.\n *\n */\nexport interface JobScheduleAddOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleListOptions.\n * Additional parameters for list operation.\n *\n */\nexport interface JobScheduleListOptions {\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules.\n   */\n  filter?: string;\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {string} [expand] An OData $expand clause.\n   */\n  expand?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 job schedules can be returned. Default value:\n   * 1000 .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing TaskAddOptions.\n * Additional parameters for add operation.\n *\n */\nexport interface TaskAddOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing TaskListOptions.\n * Additional parameters for list operation.\n *\n */\nexport interface TaskListOptions {\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-tasks.\n   */\n  filter?: string;\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {string} [expand] An OData $expand clause.\n   */\n  expand?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 tasks can be returned. Default value: 1000 .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing TaskAddCollectionOptions.\n * Additional parameters for addCollection operation.\n *\n */\nexport interface TaskAddCollectionOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing TaskDeleteMethodOptions.\n * Additional parameters for deleteMethod operation.\n *\n */\nexport interface TaskDeleteMethodOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing TaskGetOptions.\n * Additional parameters for get operation.\n *\n */\nexport interface TaskGetOptions {\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {string} [expand] An OData $expand clause.\n   */\n  expand?: string;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing TaskUpdateOptions.\n * Additional parameters for update operation.\n *\n */\nexport interface TaskUpdateOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing TaskListSubtasksOptions.\n * Additional parameters for listSubtasks operation.\n *\n */\nexport interface TaskListSubtasksOptions {\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing TaskTerminateOptions.\n * Additional parameters for terminate operation.\n *\n */\nexport interface TaskTerminateOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing TaskReactivateOptions.\n * Additional parameters for reactivate operation.\n *\n */\nexport interface TaskReactivateOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n  /**\n   * @member {string} [ifMatch] An ETag value associated with the version of\n   * the resource known to the client. The operation will be performed only if\n   * the resource's current ETag on the service exactly matches the value\n   * specified by the client.\n   */\n  ifMatch?: string;\n  /**\n   * @member {string} [ifNoneMatch] An ETag value associated with the version\n   * of the resource known to the client. The operation will be performed only\n   * if the resource's current ETag on the service does not match the value\n   * specified by the client.\n   */\n  ifNoneMatch?: string;\n  /**\n   * @member {Date} [ifModifiedSince] A timestamp indicating the last modified\n   * time of the resource known to the client. The operation will be performed\n   * only if the resource on the service has been modified since the specified\n   * time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * @member {Date} [ifUnmodifiedSince] A timestamp indicating the last\n   * modified time of the resource known to the client. The operation will be\n   * performed only if the resource on the service has not been modified since\n   * the specified time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeAddUserOptions.\n * Additional parameters for addUser operation.\n *\n */\nexport interface ComputeNodeAddUserOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeDeleteUserOptions.\n * Additional parameters for deleteUser operation.\n *\n */\nexport interface ComputeNodeDeleteUserOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeUpdateUserOptions.\n * Additional parameters for updateUser operation.\n *\n */\nexport interface ComputeNodeUpdateUserOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeGetOptions.\n * Additional parameters for get operation.\n *\n */\nexport interface ComputeNodeGetOptions {\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeRebootOptions.\n * Additional parameters for reboot operation.\n *\n */\nexport interface ComputeNodeRebootOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeReimageOptions.\n * Additional parameters for reimage operation.\n *\n */\nexport interface ComputeNodeReimageOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeDisableSchedulingOptions.\n * Additional parameters for disableScheduling operation.\n *\n */\nexport interface ComputeNodeDisableSchedulingOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeEnableSchedulingOptions.\n * Additional parameters for enableScheduling operation.\n *\n */\nexport interface ComputeNodeEnableSchedulingOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeGetRemoteLoginSettingsOptions.\n * Additional parameters for getRemoteLoginSettings operation.\n *\n */\nexport interface ComputeNodeGetRemoteLoginSettingsOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeGetRemoteDesktopOptions.\n * Additional parameters for getRemoteDesktop operation.\n *\n */\nexport interface ComputeNodeGetRemoteDesktopOptions {\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeListOptions.\n * Additional parameters for list operation.\n *\n */\nexport interface ComputeNodeListOptions {\n  /**\n   * @member {string} [filter] An OData $filter clause. For more information on\n   * constructing this filter, see\n   * https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-nodes-in-a-pool.\n   */\n  filter?: string;\n  /**\n   * @member {string} [select] An OData $select clause.\n   */\n  select?: string;\n  /**\n   * @member {number} [maxResults] The maximum number of items to return in the\n   * response. A maximum of 1000 nodes can be returned. Default value: 1000 .\n   */\n  maxResults?: number;\n  /**\n   * @member {number} [timeout] The maximum time that the server can spend\n   * processing the request, in seconds. The default is 30 seconds. Default\n   * value: 30 .\n   */\n  timeout?: number;\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ApplicationListNextOptions.\n * Additional parameters for listNext operation.\n *\n */\nexport interface ApplicationListNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolListUsageMetricsNextOptions.\n * Additional parameters for listUsageMetricsNext operation.\n *\n */\nexport interface PoolListUsageMetricsNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing PoolListNextOptions.\n * Additional parameters for listNext operation.\n *\n */\nexport interface PoolListNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing AccountListNodeAgentSkusNextOptions.\n * Additional parameters for listNodeAgentSkusNext operation.\n *\n */\nexport interface AccountListNodeAgentSkusNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobListNextOptions.\n * Additional parameters for listNext operation.\n *\n */\nexport interface JobListNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobListFromJobScheduleNextOptions.\n * Additional parameters for listFromJobScheduleNext operation.\n *\n */\nexport interface JobListFromJobScheduleNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobListPreparationAndReleaseTaskStatusNextOptions.\n * Additional parameters for listPreparationAndReleaseTaskStatusNext operation.\n *\n */\nexport interface JobListPreparationAndReleaseTaskStatusNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing CertificateListNextOptions.\n * Additional parameters for listNext operation.\n *\n */\nexport interface CertificateListNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing FileListFromTaskNextOptions.\n * Additional parameters for listFromTaskNext operation.\n *\n */\nexport interface FileListFromTaskNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing FileListFromComputeNodeNextOptions.\n * Additional parameters for listFromComputeNodeNext operation.\n *\n */\nexport interface FileListFromComputeNodeNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleListNextOptions.\n * Additional parameters for listNext operation.\n *\n */\nexport interface JobScheduleListNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing TaskListNextOptions.\n * Additional parameters for listNext operation.\n *\n */\nexport interface TaskListNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeListNextOptions.\n * Additional parameters for listNext operation.\n *\n */\nexport interface ComputeNodeListNextOptions {\n  /**\n   * @member {string} [clientRequestId] The caller-generated request identity,\n   * in the form of a GUID with no decoration such as curly braces, e.g.\n   * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.\n   */\n  clientRequestId?: string;\n  /**\n   * @member {boolean} [returnClientRequestId] Whether the server should return\n   * the client-request-id in the response. Default value: false .\n   */\n  returnClientRequestId?: boolean;\n  /**\n   * @member {Date} [ocpDate] The time the request was issued. Client libraries\n   * typically set this to the current system clock time; set it explicitly if\n   * you are calling the REST API directly.\n   */\n  ocpDate?: Date;\n}\n\n/**\n * @interface\n * An interface representing ApplicationListOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ApplicationListOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ApplicationListOptions} [applicationListOptions] Additional\n   * parameters for the operation\n   */\n  applicationListOptions?: ApplicationListOptions;\n}\n\n/**\n * @interface\n * An interface representing ApplicationGetOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ApplicationGetOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ApplicationGetOptions} [applicationGetOptions] Additional\n   * parameters for the operation\n   */\n  applicationGetOptions?: ApplicationGetOptions;\n}\n\n/**\n * @interface\n * An interface representing ApplicationListNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ApplicationListNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ApplicationListNextOptions} [applicationListNextOptions]\n   * Additional parameters for the operation\n   */\n  applicationListNextOptions?: ApplicationListNextOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolListUsageMetricsOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolListUsageMetricsOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolListUsageMetricsOptions} [poolListUsageMetricsOptions]\n   * Additional parameters for the operation\n   */\n  poolListUsageMetricsOptions?: PoolListUsageMetricsOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolGetAllLifetimeStatisticsOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolGetAllLifetimeStatisticsOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolGetAllLifetimeStatisticsOptions}\n   * [poolGetAllLifetimeStatisticsOptions] Additional parameters for the\n   * operation\n   */\n  poolGetAllLifetimeStatisticsOptions?: PoolGetAllLifetimeStatisticsOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolAddOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolAddOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolAddOptions} [poolAddOptions] Additional parameters for the\n   * operation\n   */\n  poolAddOptions?: PoolAddOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolListOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolListOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolListOptions} [poolListOptions] Additional parameters for the\n   * operation\n   */\n  poolListOptions?: PoolListOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolDeleteMethodOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolDeleteMethodOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolDeleteMethodOptions} [poolDeleteMethodOptions] Additional\n   * parameters for the operation\n   */\n  poolDeleteMethodOptions?: PoolDeleteMethodOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolExistsOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolExistsOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolExistsOptions} [poolExistsOptions] Additional parameters for\n   * the operation\n   */\n  poolExistsOptions?: PoolExistsOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolGetOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolGetOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolGetOptions} [poolGetOptions] Additional parameters for the\n   * operation\n   */\n  poolGetOptions?: PoolGetOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolPatchOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolPatchOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolPatchOptions} [poolPatchOptions] Additional parameters for\n   * the operation\n   */\n  poolPatchOptions?: PoolPatchOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolDisableAutoScaleOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolDisableAutoScaleOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolDisableAutoScaleOptions} [poolDisableAutoScaleOptions]\n   * Additional parameters for the operation\n   */\n  poolDisableAutoScaleOptions?: PoolDisableAutoScaleOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolEnableAutoScaleOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolEnableAutoScaleOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolEnableAutoScaleOptions} [poolEnableAutoScaleOptions]\n   * Additional parameters for the operation\n   */\n  poolEnableAutoScaleOptions?: PoolEnableAutoScaleOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolEvaluateAutoScaleOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolEvaluateAutoScaleOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolEvaluateAutoScaleOptions} [poolEvaluateAutoScaleOptions]\n   * Additional parameters for the operation\n   */\n  poolEvaluateAutoScaleOptions?: PoolEvaluateAutoScaleOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolResizeOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolResizeOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolResizeOptions} [poolResizeOptions] Additional parameters for\n   * the operation\n   */\n  poolResizeOptions?: PoolResizeOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolStopResizeOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolStopResizeOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolStopResizeOptions} [poolStopResizeOptions] Additional\n   * parameters for the operation\n   */\n  poolStopResizeOptions?: PoolStopResizeOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolUpdatePropertiesOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolUpdatePropertiesOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolUpdatePropertiesOptions} [poolUpdatePropertiesOptions]\n   * Additional parameters for the operation\n   */\n  poolUpdatePropertiesOptions?: PoolUpdatePropertiesOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolUpgradeOSOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolUpgradeOSOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolUpgradeOSOptions} [poolUpgradeOSOptions] Additional\n   * parameters for the operation\n   */\n  poolUpgradeOSOptions?: PoolUpgradeOSOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolRemoveNodesOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolRemoveNodesOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolRemoveNodesOptions} [poolRemoveNodesOptions] Additional\n   * parameters for the operation\n   */\n  poolRemoveNodesOptions?: PoolRemoveNodesOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolListUsageMetricsNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolListUsageMetricsNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolListUsageMetricsNextOptions}\n   * [poolListUsageMetricsNextOptions] Additional parameters for the operation\n   */\n  poolListUsageMetricsNextOptions?: PoolListUsageMetricsNextOptions;\n}\n\n/**\n * @interface\n * An interface representing PoolListNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface PoolListNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {PoolListNextOptions} [poolListNextOptions] Additional parameters\n   * for the operation\n   */\n  poolListNextOptions?: PoolListNextOptions;\n}\n\n/**\n * @interface\n * An interface representing AccountListNodeAgentSkusOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface AccountListNodeAgentSkusOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {AccountListNodeAgentSkusOptions}\n   * [accountListNodeAgentSkusOptions] Additional parameters for the operation\n   */\n  accountListNodeAgentSkusOptions?: AccountListNodeAgentSkusOptions;\n}\n\n/**\n * @interface\n * An interface representing AccountListNodeAgentSkusNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface AccountListNodeAgentSkusNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {AccountListNodeAgentSkusNextOptions}\n   * [accountListNodeAgentSkusNextOptions] Additional parameters for the\n   * operation\n   */\n  accountListNodeAgentSkusNextOptions?: AccountListNodeAgentSkusNextOptions;\n}\n\n/**\n * @interface\n * An interface representing JobGetAllLifetimeStatisticsOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobGetAllLifetimeStatisticsOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobGetAllLifetimeStatisticsOptions}\n   * [jobGetAllLifetimeStatisticsOptions] Additional parameters for the\n   * operation\n   */\n  jobGetAllLifetimeStatisticsOptions?: JobGetAllLifetimeStatisticsOptions;\n}\n\n/**\n * @interface\n * An interface representing JobDeleteMethodOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobDeleteMethodOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobDeleteMethodOptions} [jobDeleteMethodOptions] Additional\n   * parameters for the operation\n   */\n  jobDeleteMethodOptions?: JobDeleteMethodOptions;\n}\n\n/**\n * @interface\n * An interface representing JobGetOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobGetOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobGetOptions} [jobGetOptions] Additional parameters for the\n   * operation\n   */\n  jobGetOptions?: JobGetOptions;\n}\n\n/**\n * @interface\n * An interface representing JobPatchOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobPatchOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobPatchOptions} [jobPatchOptions] Additional parameters for the\n   * operation\n   */\n  jobPatchOptions?: JobPatchOptions;\n}\n\n/**\n * @interface\n * An interface representing JobUpdateOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobUpdateOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobUpdateOptions} [jobUpdateOptions] Additional parameters for\n   * the operation\n   */\n  jobUpdateOptions?: JobUpdateOptions;\n}\n\n/**\n * @interface\n * An interface representing JobDisableOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobDisableOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobDisableOptions} [jobDisableOptions] Additional parameters for\n   * the operation\n   */\n  jobDisableOptions?: JobDisableOptions;\n}\n\n/**\n * @interface\n * An interface representing JobEnableOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobEnableOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobEnableOptions} [jobEnableOptions] Additional parameters for\n   * the operation\n   */\n  jobEnableOptions?: JobEnableOptions;\n}\n\n/**\n * @interface\n * An interface representing JobTerminateOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobTerminateOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {string} [terminateReason] The text you want to appear as the\n   * job's TerminateReason. The default is 'UserTerminate'.\n   */\n  terminateReason?: string;\n  /**\n   * @member {JobTerminateOptions} [jobTerminateOptions] Additional parameters\n   * for the operation\n   */\n  jobTerminateOptions?: JobTerminateOptions;\n}\n\n/**\n * @interface\n * An interface representing JobAddOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobAddOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobAddOptions} [jobAddOptions] Additional parameters for the\n   * operation\n   */\n  jobAddOptions?: JobAddOptions;\n}\n\n/**\n * @interface\n * An interface representing JobListOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobListOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobListOptions} [jobListOptions] Additional parameters for the\n   * operation\n   */\n  jobListOptions?: JobListOptions;\n}\n\n/**\n * @interface\n * An interface representing JobListFromJobScheduleOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobListFromJobScheduleOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobListFromJobScheduleOptions} [jobListFromJobScheduleOptions]\n   * Additional parameters for the operation\n   */\n  jobListFromJobScheduleOptions?: JobListFromJobScheduleOptions;\n}\n\n/**\n * @interface\n * An interface representing JobListPreparationAndReleaseTaskStatusOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobListPreparationAndReleaseTaskStatusOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobListPreparationAndReleaseTaskStatusOptions}\n   * [jobListPreparationAndReleaseTaskStatusOptions] Additional parameters for\n   * the operation\n   */\n  jobListPreparationAndReleaseTaskStatusOptions?: JobListPreparationAndReleaseTaskStatusOptions;\n}\n\n/**\n * @interface\n * An interface representing JobGetTaskCountsOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobGetTaskCountsOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobGetTaskCountsOptions} [jobGetTaskCountsOptions] Additional\n   * parameters for the operation\n   */\n  jobGetTaskCountsOptions?: JobGetTaskCountsOptions;\n}\n\n/**\n * @interface\n * An interface representing JobListNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobListNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobListNextOptions} [jobListNextOptions] Additional parameters\n   * for the operation\n   */\n  jobListNextOptions?: JobListNextOptions;\n}\n\n/**\n * @interface\n * An interface representing JobListFromJobScheduleNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobListFromJobScheduleNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobListFromJobScheduleNextOptions}\n   * [jobListFromJobScheduleNextOptions] Additional parameters for the\n   * operation\n   */\n  jobListFromJobScheduleNextOptions?: JobListFromJobScheduleNextOptions;\n}\n\n/**\n * @interface\n * An interface representing JobListPreparationAndReleaseTaskStatusNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobListPreparationAndReleaseTaskStatusNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobListPreparationAndReleaseTaskStatusNextOptions}\n   * [jobListPreparationAndReleaseTaskStatusNextOptions] Additional parameters\n   * for the operation\n   */\n  jobListPreparationAndReleaseTaskStatusNextOptions?: JobListPreparationAndReleaseTaskStatusNextOptions;\n}\n\n/**\n * @interface\n * An interface representing CertificateAddOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface CertificateAddOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {CertificateAddOptions} [certificateAddOptions] Additional\n   * parameters for the operation\n   */\n  certificateAddOptions?: CertificateAddOptions;\n}\n\n/**\n * @interface\n * An interface representing CertificateListOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface CertificateListOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {CertificateListOptions} [certificateListOptions] Additional\n   * parameters for the operation\n   */\n  certificateListOptions?: CertificateListOptions;\n}\n\n/**\n * @interface\n * An interface representing CertificateCancelDeletionOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface CertificateCancelDeletionOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {CertificateCancelDeletionOptions}\n   * [certificateCancelDeletionOptions] Additional parameters for the operation\n   */\n  certificateCancelDeletionOptions?: CertificateCancelDeletionOptions;\n}\n\n/**\n * @interface\n * An interface representing CertificateDeleteMethodOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface CertificateDeleteMethodOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {CertificateDeleteMethodOptions} [certificateDeleteMethodOptions]\n   * Additional parameters for the operation\n   */\n  certificateDeleteMethodOptions?: CertificateDeleteMethodOptions;\n}\n\n/**\n * @interface\n * An interface representing CertificateGetOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface CertificateGetOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {CertificateGetOptions} [certificateGetOptions] Additional\n   * parameters for the operation\n   */\n  certificateGetOptions?: CertificateGetOptions;\n}\n\n/**\n * @interface\n * An interface representing CertificateListNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface CertificateListNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {CertificateListNextOptions} [certificateListNextOptions]\n   * Additional parameters for the operation\n   */\n  certificateListNextOptions?: CertificateListNextOptions;\n}\n\n/**\n * @interface\n * An interface representing FileDeleteFromTaskOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface FileDeleteFromTaskOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {boolean} [recursive] Whether to delete children of a directory.\n   * If the filePath parameter represents a directory instead of a file, you\n   * can set recursive to true to delete the directory and all of the files and\n   * subdirectories in it. If recursive is false then the directory must be\n   * empty or deletion will fail.\n   */\n  recursive?: boolean;\n  /**\n   * @member {FileDeleteFromTaskOptions} [fileDeleteFromTaskOptions] Additional\n   * parameters for the operation\n   */\n  fileDeleteFromTaskOptions?: FileDeleteFromTaskOptions;\n}\n\n/**\n * @interface\n * An interface representing FileGetFromTaskOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface FileGetFromTaskOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {FileGetFromTaskOptions} [fileGetFromTaskOptions] Additional\n   * parameters for the operation\n   */\n  fileGetFromTaskOptions?: FileGetFromTaskOptions;\n}\n\n/**\n * @interface\n * An interface representing FileGetPropertiesFromTaskOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface FileGetPropertiesFromTaskOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {FileGetPropertiesFromTaskOptions}\n   * [fileGetPropertiesFromTaskOptions] Additional parameters for the operation\n   */\n  fileGetPropertiesFromTaskOptions?: FileGetPropertiesFromTaskOptions;\n}\n\n/**\n * @interface\n * An interface representing FileDeleteFromComputeNodeOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface FileDeleteFromComputeNodeOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {boolean} [recursive] Whether to delete children of a directory.\n   * If the filePath parameter represents a directory instead of a file, you\n   * can set recursive to true to delete the directory and all of the files and\n   * subdirectories in it. If recursive is false then the directory must be\n   * empty or deletion will fail.\n   */\n  recursive?: boolean;\n  /**\n   * @member {FileDeleteFromComputeNodeOptions}\n   * [fileDeleteFromComputeNodeOptions] Additional parameters for the operation\n   */\n  fileDeleteFromComputeNodeOptions?: FileDeleteFromComputeNodeOptions;\n}\n\n/**\n * @interface\n * An interface representing FileGetFromComputeNodeOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface FileGetFromComputeNodeOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {FileGetFromComputeNodeOptions} [fileGetFromComputeNodeOptions]\n   * Additional parameters for the operation\n   */\n  fileGetFromComputeNodeOptions?: FileGetFromComputeNodeOptions;\n}\n\n/**\n * @interface\n * An interface representing FileGetPropertiesFromComputeNodeOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface FileGetPropertiesFromComputeNodeOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {FileGetPropertiesFromComputeNodeOptions}\n   * [fileGetPropertiesFromComputeNodeOptions] Additional parameters for the\n   * operation\n   */\n  fileGetPropertiesFromComputeNodeOptions?: FileGetPropertiesFromComputeNodeOptions;\n}\n\n/**\n * @interface\n * An interface representing FileListFromTaskOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface FileListFromTaskOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {boolean} [recursive] Whether to list children of the task\n   * directory. This parameter can be used in combination with the filter\n   * parameter to list specific type of files.\n   */\n  recursive?: boolean;\n  /**\n   * @member {FileListFromTaskOptions} [fileListFromTaskOptions] Additional\n   * parameters for the operation\n   */\n  fileListFromTaskOptions?: FileListFromTaskOptions;\n}\n\n/**\n * @interface\n * An interface representing FileListFromComputeNodeOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface FileListFromComputeNodeOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {boolean} [recursive] Whether to list children of a directory.\n   */\n  recursive?: boolean;\n  /**\n   * @member {FileListFromComputeNodeOptions} [fileListFromComputeNodeOptions]\n   * Additional parameters for the operation\n   */\n  fileListFromComputeNodeOptions?: FileListFromComputeNodeOptions;\n}\n\n/**\n * @interface\n * An interface representing FileListFromTaskNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface FileListFromTaskNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {FileListFromTaskNextOptions} [fileListFromTaskNextOptions]\n   * Additional parameters for the operation\n   */\n  fileListFromTaskNextOptions?: FileListFromTaskNextOptions;\n}\n\n/**\n * @interface\n * An interface representing FileListFromComputeNodeNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface FileListFromComputeNodeNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {FileListFromComputeNodeNextOptions}\n   * [fileListFromComputeNodeNextOptions] Additional parameters for the\n   * operation\n   */\n  fileListFromComputeNodeNextOptions?: FileListFromComputeNodeNextOptions;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleExistsOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobScheduleExistsOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobScheduleExistsOptions} [jobScheduleExistsOptions] Additional\n   * parameters for the operation\n   */\n  jobScheduleExistsOptions?: JobScheduleExistsOptions;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleDeleteMethodOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobScheduleDeleteMethodOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobScheduleDeleteMethodOptions} [jobScheduleDeleteMethodOptions]\n   * Additional parameters for the operation\n   */\n  jobScheduleDeleteMethodOptions?: JobScheduleDeleteMethodOptions;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleGetOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobScheduleGetOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobScheduleGetOptions} [jobScheduleGetOptions] Additional\n   * parameters for the operation\n   */\n  jobScheduleGetOptions?: JobScheduleGetOptions;\n}\n\n/**\n * @interface\n * An interface representing JobSchedulePatchOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobSchedulePatchOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobSchedulePatchOptions} [jobSchedulePatchOptions] Additional\n   * parameters for the operation\n   */\n  jobSchedulePatchOptions?: JobSchedulePatchOptions;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleUpdateOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobScheduleUpdateOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobScheduleUpdateOptions} [jobScheduleUpdateOptions] Additional\n   * parameters for the operation\n   */\n  jobScheduleUpdateOptions?: JobScheduleUpdateOptions;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleDisableOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobScheduleDisableOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobScheduleDisableOptions} [jobScheduleDisableOptions] Additional\n   * parameters for the operation\n   */\n  jobScheduleDisableOptions?: JobScheduleDisableOptions;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleEnableOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobScheduleEnableOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobScheduleEnableOptions} [jobScheduleEnableOptions] Additional\n   * parameters for the operation\n   */\n  jobScheduleEnableOptions?: JobScheduleEnableOptions;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleTerminateOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobScheduleTerminateOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobScheduleTerminateOptions} [jobScheduleTerminateOptions]\n   * Additional parameters for the operation\n   */\n  jobScheduleTerminateOptions?: JobScheduleTerminateOptions;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleAddOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobScheduleAddOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobScheduleAddOptions} [jobScheduleAddOptions] Additional\n   * parameters for the operation\n   */\n  jobScheduleAddOptions?: JobScheduleAddOptions;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleListOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobScheduleListOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobScheduleListOptions} [jobScheduleListOptions] Additional\n   * parameters for the operation\n   */\n  jobScheduleListOptions?: JobScheduleListOptions;\n}\n\n/**\n * @interface\n * An interface representing JobScheduleListNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface JobScheduleListNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {JobScheduleListNextOptions} [jobScheduleListNextOptions]\n   * Additional parameters for the operation\n   */\n  jobScheduleListNextOptions?: JobScheduleListNextOptions;\n}\n\n/**\n * @interface\n * An interface representing TaskAddOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface TaskAddOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {TaskAddOptions} [taskAddOptions] Additional parameters for the\n   * operation\n   */\n  taskAddOptions?: TaskAddOptions;\n}\n\n/**\n * @interface\n * An interface representing TaskListOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface TaskListOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {TaskListOptions} [taskListOptions] Additional parameters for the\n   * operation\n   */\n  taskListOptions?: TaskListOptions;\n}\n\n/**\n * @interface\n * An interface representing TaskAddCollectionOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface TaskAddCollectionOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {TaskAddCollectionOptions} [taskAddCollectionOptions] Additional\n   * parameters for the operation\n   */\n  taskAddCollectionOptions?: TaskAddCollectionOptions;\n}\n\n/**\n * @interface\n * An interface representing TaskDeleteMethodOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface TaskDeleteMethodOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {TaskDeleteMethodOptions} [taskDeleteMethodOptions] Additional\n   * parameters for the operation\n   */\n  taskDeleteMethodOptions?: TaskDeleteMethodOptions;\n}\n\n/**\n * @interface\n * An interface representing TaskGetOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface TaskGetOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {TaskGetOptions} [taskGetOptions] Additional parameters for the\n   * operation\n   */\n  taskGetOptions?: TaskGetOptions;\n}\n\n/**\n * @interface\n * An interface representing TaskUpdateOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface TaskUpdateOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {TaskConstraints} [constraints] Constraints that apply to this\n   * task. If omitted, the task is given the default constraints. For\n   * multi-instance tasks, updating the retention time applies only to the\n   * primary task and not subtasks.\n   */\n  constraints?: TaskConstraints;\n  /**\n   * @member {TaskUpdateOptions} [taskUpdateOptions] Additional parameters for\n   * the operation\n   */\n  taskUpdateOptions?: TaskUpdateOptions;\n}\n\n/**\n * @interface\n * An interface representing TaskListSubtasksOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface TaskListSubtasksOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {TaskListSubtasksOptions} [taskListSubtasksOptions] Additional\n   * parameters for the operation\n   */\n  taskListSubtasksOptions?: TaskListSubtasksOptions;\n}\n\n/**\n * @interface\n * An interface representing TaskTerminateOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface TaskTerminateOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {TaskTerminateOptions} [taskTerminateOptions] Additional\n   * parameters for the operation\n   */\n  taskTerminateOptions?: TaskTerminateOptions;\n}\n\n/**\n * @interface\n * An interface representing TaskReactivateOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface TaskReactivateOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {TaskReactivateOptions} [taskReactivateOptions] Additional\n   * parameters for the operation\n   */\n  taskReactivateOptions?: TaskReactivateOptions;\n}\n\n/**\n * @interface\n * An interface representing TaskListNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface TaskListNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {TaskListNextOptions} [taskListNextOptions] Additional parameters\n   * for the operation\n   */\n  taskListNextOptions?: TaskListNextOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeAddUserOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeAddUserOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ComputeNodeAddUserOptions} [computeNodeAddUserOptions] Additional\n   * parameters for the operation\n   */\n  computeNodeAddUserOptions?: ComputeNodeAddUserOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeDeleteUserOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeDeleteUserOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ComputeNodeDeleteUserOptions} [computeNodeDeleteUserOptions]\n   * Additional parameters for the operation\n   */\n  computeNodeDeleteUserOptions?: ComputeNodeDeleteUserOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeUpdateUserOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeUpdateUserOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ComputeNodeUpdateUserOptions} [computeNodeUpdateUserOptions]\n   * Additional parameters for the operation\n   */\n  computeNodeUpdateUserOptions?: ComputeNodeUpdateUserOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeGetOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeGetOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ComputeNodeGetOptions} [computeNodeGetOptions] Additional\n   * parameters for the operation\n   */\n  computeNodeGetOptions?: ComputeNodeGetOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeRebootOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeRebootOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {string} [nodeRebootOption] When to reboot the compute node and\n   * what to do with currently running tasks. Values are:\n   *\n   * requeue - Terminate running task processes and requeue the tasks. The\n   * tasks will run again when a node is available. Restart the node as soon as\n   * tasks have been terminated.\n   * terminate - Terminate running tasks. The tasks will not run again. Restart\n   * the node as soon as tasks have been terminated.\n   * taskcompletion - Allow currently running tasks to complete. Schedule no\n   * new tasks while waiting. Restart the node when all tasks have completed.\n   * retaineddata - Allow currently running tasks to complete, then wait for\n   * all task data retention periods to expire. Schedule no new tasks while\n   * waiting. Restart the node when all task retention periods have expired.\n   *\n   * The default value is requeue. Possible values include: 'requeue',\n   * 'terminate', 'taskCompletion', 'retainedData'\n   */\n  nodeRebootOption?: string;\n  /**\n   * @member {ComputeNodeRebootOptions} [computeNodeRebootOptions] Additional\n   * parameters for the operation\n   */\n  computeNodeRebootOptions?: ComputeNodeRebootOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeReimageOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeReimageOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {string} [nodeReimageOption] When to reimage the compute node and\n   * what to do with currently running tasks. Values are:\n   *\n   * requeue - Terminate running task processes and requeue the tasks. The\n   * tasks will run again when a node is available. Reimage the node as soon as\n   * tasks have been terminated.\n   * terminate - Terminate running tasks. The tasks will not run again. Reimage\n   * the node as soon as tasks have been terminated.\n   * taskcompletion - Allow currently running tasks to complete. Schedule no\n   * new tasks while waiting. Reimage the node when all tasks have completed.\n   * retaineddata - Allow currently running tasks to complete, then wait for\n   * all task data retention periods to expire. Schedule no new tasks while\n   * waiting. Reimage the node when all task retention periods have expired.\n   *\n   * The default value is requeue. Possible values include: 'requeue',\n   * 'terminate', 'taskCompletion', 'retainedData'\n   */\n  nodeReimageOption?: string;\n  /**\n   * @member {ComputeNodeReimageOptions} [computeNodeReimageOptions] Additional\n   * parameters for the operation\n   */\n  computeNodeReimageOptions?: ComputeNodeReimageOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeDisableSchedulingOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeDisableSchedulingOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {string} [nodeDisableSchedulingOption] What to do with currently\n   * running tasks when disabling task scheduling on the compute node. Values\n   * are:\n   *\n   * requeue - Terminate running task processes and requeue the tasks. The\n   * tasks may run again on other compute nodes, or when task scheduling is\n   * re-enabled on this node. Enter offline state as soon as tasks have been\n   * terminated.\n   * terminate - Terminate running tasks. The tasks will not run again. Enter\n   * offline state as soon as tasks have been terminated.\n   * taskcompletion - Allow currently running tasks to complete. Schedule no\n   * new tasks while waiting. Enter offline state when all tasks have\n   * completed.\n   *\n   * The default value is requeue. Possible values include: 'requeue',\n   * 'terminate', 'taskCompletion'\n   */\n  nodeDisableSchedulingOption?: string;\n  /**\n   * @member {ComputeNodeDisableSchedulingOptions}\n   * [computeNodeDisableSchedulingOptions] Additional parameters for the\n   * operation\n   */\n  computeNodeDisableSchedulingOptions?: ComputeNodeDisableSchedulingOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeEnableSchedulingOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeEnableSchedulingOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ComputeNodeEnableSchedulingOptions}\n   * [computeNodeEnableSchedulingOptions] Additional parameters for the\n   * operation\n   */\n  computeNodeEnableSchedulingOptions?: ComputeNodeEnableSchedulingOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeGetRemoteLoginSettingsOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeGetRemoteLoginSettingsOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ComputeNodeGetRemoteLoginSettingsOptions}\n   * [computeNodeGetRemoteLoginSettingsOptions] Additional parameters for the\n   * operation\n   */\n  computeNodeGetRemoteLoginSettingsOptions?: ComputeNodeGetRemoteLoginSettingsOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeGetRemoteDesktopOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeGetRemoteDesktopOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ComputeNodeGetRemoteDesktopOptions}\n   * [computeNodeGetRemoteDesktopOptions] Additional parameters for the\n   * operation\n   */\n  computeNodeGetRemoteDesktopOptions?: ComputeNodeGetRemoteDesktopOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeListOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeListOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ComputeNodeListOptions} [computeNodeListOptions] Additional\n   * parameters for the operation\n   */\n  computeNodeListOptions?: ComputeNodeListOptions;\n}\n\n/**\n * @interface\n * An interface representing ComputeNodeListNextOptionalParams.\n * Optional Parameters.\n *\n * @extends RequestOptionsBase\n */\nexport interface ComputeNodeListNextOptionalParams extends RequestOptionsBase {\n  /**\n   * @member {ComputeNodeListNextOptions} [computeNodeListNextOptions]\n   * Additional parameters for the operation\n   */\n  computeNodeListNextOptions?: ComputeNodeListNextOptions;\n}\n\n\n/**\n * @interface\n * An interface representing the ApplicationListResult.\n * @summary The result of listing the applications available in an account.\n *\n * @extends Array<ApplicationSummary>\n */\nexport interface ApplicationListResult extends Array<ApplicationSummary> {\n  /**\n   * @member {string} [odatanextLink]\n   */\n  odatanextLink?: string;\n}\n\n/**\n * @interface\n * An interface representing the PoolListUsageMetricsResult.\n * @summary The result of a listing the usage metrics for an account.\n *\n * @extends Array<PoolUsageMetrics>\n */\nexport interface PoolListUsageMetricsResult extends Array<PoolUsageMetrics> {\n  /**\n   * @member {string} [odatanextLink]\n   */\n  odatanextLink?: string;\n}\n\n/**\n * @interface\n * An interface representing the CloudPoolListResult.\n * @summary The result of listing the pools in an account.\n *\n * @extends Array<CloudPool>\n */\nexport interface CloudPoolListResult extends Array<CloudPool> {\n  /**\n   * @member {string} [odatanextLink]\n   */\n  odatanextLink?: string;\n}\n\n/**\n * @interface\n * An interface representing the AccountListNodeAgentSkusResult.\n * @summary The result of listing the supported node agent SKUs.\n *\n * @extends Array<NodeAgentSku>\n */\nexport interface AccountListNodeAgentSkusResult extends Array<NodeAgentSku> {\n  /**\n   * @member {string} [odatanextLink]\n   */\n  odatanextLink?: string;\n}\n\n/**\n * @interface\n * An interface representing the CloudJobListResult.\n * @summary The result of listing the jobs in an account.\n *\n * @extends Array<CloudJob>\n */\nexport interface CloudJobListResult extends Array<CloudJob> {\n  /**\n   * @member {string} [odatanextLink]\n   */\n  odatanextLink?: string;\n}\n\n/**\n * @interface\n * An interface representing the CloudJobListPreparationAndReleaseTaskStatusResult.\n * @summary The result of listing the status of the Job Preparation and Job\n * Release tasks for a job.\n *\n * @extends Array<JobPreparationAndReleaseTaskExecutionInformation>\n */\nexport interface CloudJobListPreparationAndReleaseTaskStatusResult extends Array<JobPreparationAndReleaseTaskExecutionInformation> {\n  /**\n   * @member {string} [odatanextLink]\n   */\n  odatanextLink?: string;\n}\n\n/**\n * @interface\n * An interface representing the CertificateListResult.\n * @summary The result of listing the certificates in the account.\n *\n * @extends Array<Certificate>\n */\nexport interface CertificateListResult extends Array<Certificate> {\n  /**\n   * @member {string} [odatanextLink]\n   */\n  odatanextLink?: string;\n}\n\n/**\n * @interface\n * An interface representing the NodeFileListResult.\n * @summary The result of listing the files on a compute node, or the files\n * associated with a task on a node.\n *\n * @extends Array<NodeFile>\n */\nexport interface NodeFileListResult extends Array<NodeFile> {\n  /**\n   * @member {string} [odatanextLink]\n   */\n  odatanextLink?: string;\n}\n\n/**\n * @interface\n * An interface representing the CloudJobScheduleListResult.\n * @summary The result of listing the job schedules in an account.\n *\n * @extends Array<CloudJobSchedule>\n */\nexport interface CloudJobScheduleListResult extends Array<CloudJobSchedule> {\n  /**\n   * @member {string} [odatanextLink]\n   */\n  odatanextLink?: string;\n}\n\n/**\n * @interface\n * An interface representing the CloudTaskListResult.\n * @summary The result of listing the tasks in a job.\n *\n * @extends Array<CloudTask>\n */\nexport interface CloudTaskListResult extends Array<CloudTask> {\n  /**\n   * @member {string} [odatanextLink]\n   */\n  odatanextLink?: string;\n}\n\n/**\n * @interface\n * An interface representing the ComputeNodeListResult.\n * @summary The result of listing the compute nodes in a pool.\n *\n * @extends Array<ComputeNode>\n */\nexport interface ComputeNodeListResult extends Array<ComputeNode> {\n  /**\n   * @member {string} [odatanextLink]\n   */\n  odatanextLink?: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/models/index.ts","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport { Application } from \"./application\";\nimport { Pool } from \"./pool\";\nimport { Account } from \"./account\";\nimport { Job } from \"./job\";\nimport { CertificateOperations } from \"./certificateOperations\";\nimport { File } from \"./file\";\nimport { JobSchedule } from \"./jobSchedule\";\nimport { Task } from \"./task\";\nimport { ComputeNodeOperations } from \"./computeNodeOperations\";\n\nexport { Application, Pool, Account, Job, CertificateOperations, File, JobSchedule,\nTask, ComputeNodeOperations };\n\n\n\n// WEBPACK FOOTER //\n// ./lib/operations/index.ts","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/mappers\";\nimport { BatchServiceClient } from \"../batchServiceClient\";\n\nconst WebResource = msRest.WebResource;\n\n/** Class representing a Application. */\nexport class Application {\n  private readonly client: BatchServiceClient;\n  /**\n   * Create a Application.\n   * @param {BatchServiceClient} client Reference to the service client.\n   */\n  constructor(client: BatchServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Lists all of the applications available in the specified account.\n   *\n   * This operation returns only applications and versions that are available for\n   * use on compute nodes; that is, that can be used in an application package\n   * reference. For administrator information about applications and versions\n   * that are not yet available to compute nodes, use the Azure portal or the\n   * Azure Resource Manager API.\n   *\n   * @param {ApplicationListOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listWithHttpOperationResponse(options?: Models.ApplicationListOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let applicationListOptions = (options && options.applicationListOptions !== undefined) ? options.applicationListOptions : undefined;\n    // Validate\n    try {\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (applicationListOptions !== null && applicationListOptions !== undefined)\n      {\n        maxResults = applicationListOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (applicationListOptions !== null && applicationListOptions !== undefined)\n      {\n        timeout = applicationListOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (applicationListOptions !== null && applicationListOptions !== undefined)\n      {\n        clientRequestId = applicationListOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (applicationListOptions !== null && applicationListOptions !== undefined)\n      {\n        returnClientRequestId = applicationListOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (applicationListOptions !== null && applicationListOptions !== undefined)\n      {\n        ocpDate = applicationListOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'applications';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.ApplicationListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Gets information about the specified application.\n   *\n   * This operation returns only applications and versions that are available for\n   * use on compute nodes; that is, that can be used in an application package\n   * reference. For administrator information about applications and versions\n   * that are not yet available to compute nodes, use the Azure portal or the\n   * Azure Resource Manager API.\n   *\n   * @param {string} applicationId The ID of the application.\n   *\n   * @param {ApplicationGetOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getWithHttpOperationResponse(applicationId: string, options?: Models.ApplicationGetOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let applicationGetOptions = (options && options.applicationGetOptions !== undefined) ? options.applicationGetOptions : undefined;\n    // Validate\n    try {\n      if (applicationId === null || applicationId === undefined || typeof applicationId.valueOf() !== 'string') {\n        throw new Error('applicationId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (applicationGetOptions !== null && applicationGetOptions !== undefined)\n      {\n        timeout = applicationGetOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (applicationGetOptions !== null && applicationGetOptions !== undefined)\n      {\n        clientRequestId = applicationGetOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (applicationGetOptions !== null && applicationGetOptions !== undefined)\n      {\n        returnClientRequestId = applicationGetOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (applicationGetOptions !== null && applicationGetOptions !== undefined)\n      {\n        ocpDate = applicationGetOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'applications/{applicationId}';\n    requestUrl = requestUrl.replace('{applicationId}', encodeURIComponent(applicationId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.ApplicationSummary;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the applications available in the specified account.\n   *\n   * This operation returns only applications and versions that are available for\n   * use on compute nodes; that is, that can be used in an application package\n   * reference. For administrator information about applications and versions\n   * that are not yet available to compute nodes, use the Azure portal or the\n   * Azure Resource Manager API.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {ApplicationListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listNextWithHttpOperationResponse(nextPageLink: string, options?: Models.ApplicationListNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let applicationListNextOptions = (options && options.applicationListNextOptions !== undefined) ? options.applicationListNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (applicationListNextOptions !== null && applicationListNextOptions !== undefined)\n      {\n        clientRequestId = applicationListNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (applicationListNextOptions !== null && applicationListNextOptions !== undefined)\n      {\n        returnClientRequestId = applicationListNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (applicationListNextOptions !== null && applicationListNextOptions !== undefined)\n      {\n        ocpDate = applicationListNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.ApplicationListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the applications available in the specified account.\n   *\n   * This operation returns only applications and versions that are available for\n   * use on compute nodes; that is, that can be used in an application package\n   * reference. For administrator information about applications and versions\n   * that are not yet available to compute nodes, use the Azure portal or the\n   * Azure Resource Manager API.\n   *\n   * @param {ApplicationListOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.ApplicationListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.ApplicationListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  list(): Promise<Models.ApplicationListResult>;\n  list(options: Models.ApplicationListOptionalParams): Promise<Models.ApplicationListResult>;\n  list(callback: msRest.ServiceCallback<Models.ApplicationListResult>): void;\n  list(options: Models.ApplicationListOptionalParams, callback: msRest.ServiceCallback<Models.ApplicationListResult>): void;\n  list(options?: Models.ApplicationListOptionalParams, callback?: msRest.ServiceCallback<Models.ApplicationListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.ApplicationListResult>;\n    if (!callback) {\n      return this.listWithHttpOperationResponse(options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.ApplicationListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listWithHttpOperationResponse(options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.ApplicationListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Gets information about the specified application.\n   *\n   * This operation returns only applications and versions that are available for\n   * use on compute nodes; that is, that can be used in an application package\n   * reference. For administrator information about applications and versions\n   * that are not yet available to compute nodes, use the Azure portal or the\n   * Azure Resource Manager API.\n   *\n   * @param {string} applicationId The ID of the application.\n   *\n   * @param {ApplicationGetOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.ApplicationSummary} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.ApplicationSummary} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  get(applicationId: string): Promise<Models.ApplicationSummary>;\n  get(applicationId: string, options: Models.ApplicationGetOptionalParams): Promise<Models.ApplicationSummary>;\n  get(applicationId: string, callback: msRest.ServiceCallback<Models.ApplicationSummary>): void;\n  get(applicationId: string, options: Models.ApplicationGetOptionalParams, callback: msRest.ServiceCallback<Models.ApplicationSummary>): void;\n  get(applicationId: string, options?: Models.ApplicationGetOptionalParams, callback?: msRest.ServiceCallback<Models.ApplicationSummary>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.ApplicationSummary>;\n    if (!callback) {\n      return this.getWithHttpOperationResponse(applicationId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.ApplicationSummary);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getWithHttpOperationResponse(applicationId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.ApplicationSummary;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the applications available in the specified account.\n   *\n   * This operation returns only applications and versions that are available for\n   * use on compute nodes; that is, that can be used in an application package\n   * reference. For administrator information about applications and versions\n   * that are not yet available to compute nodes, use the Azure portal or the\n   * Azure Resource Manager API.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {ApplicationListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.ApplicationListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.ApplicationListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listNext(nextPageLink: string): Promise<Models.ApplicationListResult>;\n  listNext(nextPageLink: string, options: Models.ApplicationListNextOptionalParams): Promise<Models.ApplicationListResult>;\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ApplicationListResult>): void;\n  listNext(nextPageLink: string, options: Models.ApplicationListNextOptionalParams, callback: msRest.ServiceCallback<Models.ApplicationListResult>): void;\n  listNext(nextPageLink: string, options?: Models.ApplicationListNextOptionalParams, callback?: msRest.ServiceCallback<Models.ApplicationListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.ApplicationListResult>;\n    if (!callback) {\n      return this.listNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.ApplicationListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.ApplicationListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/operations/application.ts","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/mappers\";\nimport { BatchServiceClient } from \"../batchServiceClient\";\n\nconst WebResource = msRest.WebResource;\n\n/** Class representing a Pool. */\nexport class Pool {\n  private readonly client: BatchServiceClient;\n  /**\n   * Create a Pool.\n   * @param {BatchServiceClient} client Reference to the service client.\n   */\n  constructor(client: BatchServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Lists the usage metrics, aggregated by pool across individual time\n   * intervals, for the specified account.\n   *\n   * If you do not specify a $filter clause including a poolId, the response\n   * includes all pools that existed in the account in the time range of the\n   * returned aggregation intervals. If you do not specify a $filter clause\n   * including a startTime or endTime these filters default to the start and end\n   * times of the last aggregation interval currently available; that is, only\n   * the last aggregation interval is returned.\n   *\n   * @param {PoolListUsageMetricsOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listUsageMetricsWithHttpOperationResponse(options?: Models.PoolListUsageMetricsOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolListUsageMetricsOptions = (options && options.poolListUsageMetricsOptions !== undefined) ? options.poolListUsageMetricsOptions : undefined;\n    // Validate\n    try {\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let startTime: any;\n    let endTime: any;\n    let filter: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (poolListUsageMetricsOptions !== null && poolListUsageMetricsOptions !== undefined)\n      {\n        startTime = poolListUsageMetricsOptions.startTime;\n        if (startTime && !(startTime instanceof Date ||\n            (typeof (startTime as string).valueOf() === 'string' && !isNaN(Date.parse(startTime as string))))) {\n              throw new Error('startTime must be of type date.');\n            }\n      }\n      if (poolListUsageMetricsOptions !== null && poolListUsageMetricsOptions !== undefined)\n      {\n        endTime = poolListUsageMetricsOptions.endTime;\n        if (endTime && !(endTime instanceof Date ||\n            (typeof (endTime as string).valueOf() === 'string' && !isNaN(Date.parse(endTime as string))))) {\n              throw new Error('endTime must be of type date.');\n            }\n      }\n      if (poolListUsageMetricsOptions !== null && poolListUsageMetricsOptions !== undefined)\n      {\n        filter = poolListUsageMetricsOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (poolListUsageMetricsOptions !== null && poolListUsageMetricsOptions !== undefined)\n      {\n        maxResults = poolListUsageMetricsOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (poolListUsageMetricsOptions !== null && poolListUsageMetricsOptions !== undefined)\n      {\n        timeout = poolListUsageMetricsOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolListUsageMetricsOptions !== null && poolListUsageMetricsOptions !== undefined)\n      {\n        clientRequestId = poolListUsageMetricsOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolListUsageMetricsOptions !== null && poolListUsageMetricsOptions !== undefined)\n      {\n        returnClientRequestId = poolListUsageMetricsOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolListUsageMetricsOptions !== null && poolListUsageMetricsOptions !== undefined)\n      {\n        ocpDate = poolListUsageMetricsOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'poolusagemetrics';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (startTime !== null && startTime !== undefined) {\n      queryParamsArray.push('starttime=' + encodeURIComponent(msRest.serializeObject(startTime)));\n    }\n    if (endTime !== null && endTime !== undefined) {\n      queryParamsArray.push('endtime=' + encodeURIComponent(msRest.serializeObject(endTime)));\n    }\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.PoolListUsageMetricsResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Gets lifetime summary statistics for all of the pools in the\n   * specified account.\n   *\n   * Statistics are aggregated across all pools that have ever existed in the\n   * account, from account creation to the last update time of the statistics.\n   *\n   * @param {PoolGetAllLifetimeStatisticsOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getAllLifetimeStatisticsWithHttpOperationResponse(options?: Models.PoolGetAllLifetimeStatisticsOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolGetAllLifetimeStatisticsOptions = (options && options.poolGetAllLifetimeStatisticsOptions !== undefined) ? options.poolGetAllLifetimeStatisticsOptions : undefined;\n    // Validate\n    try {\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (poolGetAllLifetimeStatisticsOptions !== null && poolGetAllLifetimeStatisticsOptions !== undefined)\n      {\n        timeout = poolGetAllLifetimeStatisticsOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolGetAllLifetimeStatisticsOptions !== null && poolGetAllLifetimeStatisticsOptions !== undefined)\n      {\n        clientRequestId = poolGetAllLifetimeStatisticsOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolGetAllLifetimeStatisticsOptions !== null && poolGetAllLifetimeStatisticsOptions !== undefined)\n      {\n        returnClientRequestId = poolGetAllLifetimeStatisticsOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolGetAllLifetimeStatisticsOptions !== null && poolGetAllLifetimeStatisticsOptions !== undefined)\n      {\n        ocpDate = poolGetAllLifetimeStatisticsOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'lifetimepoolstats';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.PoolStatistics;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Adds a pool to the specified account.\n   *\n   * When naming pools, avoid including sensitive information such as user names\n   * or secret project names. This information may appear in telemetry logs\n   * accessible to Microsoft Support engineers.\n   *\n   * @param {PoolAddParameter} pool The pool to be added.\n   *\n   * @param {PoolAddOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async addWithHttpOperationResponse(pool: Models.PoolAddParameter, options?: Models.PoolAddOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolAddOptions = (options && options.poolAddOptions !== undefined) ? options.poolAddOptions : undefined;\n    if (pool === null || pool === undefined)\n    {\n      pool = {} as any;\n    }\n    // Validate\n    try {\n      if (pool === null || pool === undefined) {\n        throw new Error('pool cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (poolAddOptions !== null && poolAddOptions !== undefined)\n      {\n        timeout = poolAddOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolAddOptions !== null && poolAddOptions !== undefined)\n      {\n        clientRequestId = poolAddOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolAddOptions !== null && poolAddOptions !== undefined)\n      {\n        returnClientRequestId = poolAddOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolAddOptions !== null && poolAddOptions !== undefined)\n      {\n        ocpDate = poolAddOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (pool !== null && pool !== undefined) {\n        let requestModelMapper = Mappers.PoolAddParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, pool, 'pool');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(pool, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 201) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the pools in the specified account.\n   *\n   * @param {PoolListOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listWithHttpOperationResponse(options?: Models.PoolListOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolListOptions = (options && options.poolListOptions !== undefined) ? options.poolListOptions : undefined;\n    // Validate\n    try {\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let filter: any;\n    let select: any;\n    let expand: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (poolListOptions !== null && poolListOptions !== undefined)\n      {\n        filter = poolListOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (poolListOptions !== null && poolListOptions !== undefined)\n      {\n        select = poolListOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (poolListOptions !== null && poolListOptions !== undefined)\n      {\n        expand = poolListOptions.expand;\n        if (expand !== null && expand !== undefined && typeof expand.valueOf() !== 'string') {\n          throw new Error('expand must be of type string.');\n        }\n      }\n      if (poolListOptions !== null && poolListOptions !== undefined)\n      {\n        maxResults = poolListOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (poolListOptions !== null && poolListOptions !== undefined)\n      {\n        timeout = poolListOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolListOptions !== null && poolListOptions !== undefined)\n      {\n        clientRequestId = poolListOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolListOptions !== null && poolListOptions !== undefined)\n      {\n        returnClientRequestId = poolListOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolListOptions !== null && poolListOptions !== undefined)\n      {\n        ocpDate = poolListOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (expand !== null && expand !== undefined) {\n      queryParamsArray.push('$expand=' + encodeURIComponent(expand));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudPoolListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Deletes a pool from the specified account.\n   *\n   * When you request that a pool be deleted, the following actions occur: the\n   * pool state is set to deleting; any ongoing resize operation on the pool are\n   * stopped; the Batch service starts resizing the pool to zero nodes; any tasks\n   * running on existing nodes are terminated and requeued (as if a resize pool\n   * operation had been requested with the default requeue option); finally, the\n   * pool is removed from the system. Because running tasks are requeued, the\n   * user can rerun these tasks by updating their job to target a different pool.\n   * The tasks can then run on the new pool. If you want to override the requeue\n   * behavior, then you should call resize pool explicitly to shrink the pool to\n   * zero size before deleting the pool. If you call an Update, Patch or Delete\n   * API on a pool in the deleting state, it will fail with HTTP status code 409\n   * with error code PoolBeingDeleted.\n   *\n   * @param {string} poolId The ID of the pool to delete.\n   *\n   * @param {PoolDeleteMethodOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async deleteMethodWithHttpOperationResponse(poolId: string, options?: Models.PoolDeleteMethodOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolDeleteMethodOptions = (options && options.poolDeleteMethodOptions !== undefined) ? options.poolDeleteMethodOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (poolDeleteMethodOptions !== null && poolDeleteMethodOptions !== undefined)\n      {\n        timeout = poolDeleteMethodOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolDeleteMethodOptions !== null && poolDeleteMethodOptions !== undefined)\n      {\n        clientRequestId = poolDeleteMethodOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolDeleteMethodOptions !== null && poolDeleteMethodOptions !== undefined)\n      {\n        returnClientRequestId = poolDeleteMethodOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolDeleteMethodOptions !== null && poolDeleteMethodOptions !== undefined)\n      {\n        ocpDate = poolDeleteMethodOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (poolDeleteMethodOptions !== null && poolDeleteMethodOptions !== undefined)\n      {\n        ifMatch = poolDeleteMethodOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (poolDeleteMethodOptions !== null && poolDeleteMethodOptions !== undefined)\n      {\n        ifNoneMatch = poolDeleteMethodOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (poolDeleteMethodOptions !== null && poolDeleteMethodOptions !== undefined)\n      {\n        ifModifiedSince = poolDeleteMethodOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (poolDeleteMethodOptions !== null && poolDeleteMethodOptions !== undefined)\n      {\n        ifUnmodifiedSince = poolDeleteMethodOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'DELETE';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * Gets basic properties of a pool.\n   *\n   * @param {string} poolId The ID of the pool to get.\n   *\n   * @param {PoolExistsOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async existsWithHttpOperationResponse(poolId: string, options?: Models.PoolExistsOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolExistsOptions = (options && options.poolExistsOptions !== undefined) ? options.poolExistsOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (poolExistsOptions !== null && poolExistsOptions !== undefined)\n      {\n        timeout = poolExistsOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolExistsOptions !== null && poolExistsOptions !== undefined)\n      {\n        clientRequestId = poolExistsOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolExistsOptions !== null && poolExistsOptions !== undefined)\n      {\n        returnClientRequestId = poolExistsOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolExistsOptions !== null && poolExistsOptions !== undefined)\n      {\n        ocpDate = poolExistsOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (poolExistsOptions !== null && poolExistsOptions !== undefined)\n      {\n        ifMatch = poolExistsOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (poolExistsOptions !== null && poolExistsOptions !== undefined)\n      {\n        ifNoneMatch = poolExistsOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (poolExistsOptions !== null && poolExistsOptions !== undefined)\n      {\n        ifModifiedSince = poolExistsOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (poolExistsOptions !== null && poolExistsOptions !== undefined)\n      {\n        ifUnmodifiedSince = poolExistsOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'HEAD';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200 && statusCode !== 404) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      operationRes.bodyAsJson = (statusCode === 200);\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * Gets information about the specified pool.\n   *\n   * @param {string} poolId The ID of the pool to get.\n   *\n   * @param {PoolGetOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getWithHttpOperationResponse(poolId: string, options?: Models.PoolGetOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolGetOptions = (options && options.poolGetOptions !== undefined) ? options.poolGetOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let select: any;\n    let expand: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (poolGetOptions !== null && poolGetOptions !== undefined)\n      {\n        select = poolGetOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (poolGetOptions !== null && poolGetOptions !== undefined)\n      {\n        expand = poolGetOptions.expand;\n        if (expand !== null && expand !== undefined && typeof expand.valueOf() !== 'string') {\n          throw new Error('expand must be of type string.');\n        }\n      }\n      if (poolGetOptions !== null && poolGetOptions !== undefined)\n      {\n        timeout = poolGetOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolGetOptions !== null && poolGetOptions !== undefined)\n      {\n        clientRequestId = poolGetOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolGetOptions !== null && poolGetOptions !== undefined)\n      {\n        returnClientRequestId = poolGetOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolGetOptions !== null && poolGetOptions !== undefined)\n      {\n        ocpDate = poolGetOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (poolGetOptions !== null && poolGetOptions !== undefined)\n      {\n        ifMatch = poolGetOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (poolGetOptions !== null && poolGetOptions !== undefined)\n      {\n        ifNoneMatch = poolGetOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (poolGetOptions !== null && poolGetOptions !== undefined)\n      {\n        ifModifiedSince = poolGetOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (poolGetOptions !== null && poolGetOptions !== undefined)\n      {\n        ifUnmodifiedSince = poolGetOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (expand !== null && expand !== undefined) {\n      queryParamsArray.push('$expand=' + encodeURIComponent(expand));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudPool;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Updates the properties of the specified pool.\n   *\n   * This only replaces the pool properties specified in the request. For\n   * example, if the pool has a start task associated with it, and a request does\n   * not specify a start task element, then the pool keeps the existing start\n   * task.\n   *\n   * @param {string} poolId The ID of the pool to update.\n   *\n   * @param {PoolPatchParameter} poolPatchParameter The parameters for the\n   * request.\n   *\n   * @param {PoolPatchOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async patchWithHttpOperationResponse(poolId: string, poolPatchParameter: Models.PoolPatchParameter, options?: Models.PoolPatchOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolPatchOptions = (options && options.poolPatchOptions !== undefined) ? options.poolPatchOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (poolPatchParameter === null || poolPatchParameter === undefined) {\n        throw new Error('poolPatchParameter cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (poolPatchOptions !== null && poolPatchOptions !== undefined)\n      {\n        timeout = poolPatchOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolPatchOptions !== null && poolPatchOptions !== undefined)\n      {\n        clientRequestId = poolPatchOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolPatchOptions !== null && poolPatchOptions !== undefined)\n      {\n        returnClientRequestId = poolPatchOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolPatchOptions !== null && poolPatchOptions !== undefined)\n      {\n        ocpDate = poolPatchOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (poolPatchOptions !== null && poolPatchOptions !== undefined)\n      {\n        ifMatch = poolPatchOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (poolPatchOptions !== null && poolPatchOptions !== undefined)\n      {\n        ifNoneMatch = poolPatchOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (poolPatchOptions !== null && poolPatchOptions !== undefined)\n      {\n        ifModifiedSince = poolPatchOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (poolPatchOptions !== null && poolPatchOptions !== undefined)\n      {\n        ifUnmodifiedSince = poolPatchOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'PATCH';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (poolPatchParameter !== null && poolPatchParameter !== undefined) {\n        let requestModelMapper = Mappers.PoolPatchParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, poolPatchParameter, 'poolPatchParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(poolPatchParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Disables automatic scaling for a pool.\n   *\n   * @param {string} poolId The ID of the pool on which to disable automatic\n   * scaling.\n   *\n   * @param {PoolDisableAutoScaleOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async disableAutoScaleWithHttpOperationResponse(poolId: string, options?: Models.PoolDisableAutoScaleOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolDisableAutoScaleOptions = (options && options.poolDisableAutoScaleOptions !== undefined) ? options.poolDisableAutoScaleOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (poolDisableAutoScaleOptions !== null && poolDisableAutoScaleOptions !== undefined)\n      {\n        timeout = poolDisableAutoScaleOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolDisableAutoScaleOptions !== null && poolDisableAutoScaleOptions !== undefined)\n      {\n        clientRequestId = poolDisableAutoScaleOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolDisableAutoScaleOptions !== null && poolDisableAutoScaleOptions !== undefined)\n      {\n        returnClientRequestId = poolDisableAutoScaleOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolDisableAutoScaleOptions !== null && poolDisableAutoScaleOptions !== undefined)\n      {\n        ocpDate = poolDisableAutoScaleOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/disableautoscale';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Enables automatic scaling for a pool.\n   *\n   * You cannot enable automatic scaling on a pool if a resize operation is in\n   * progress on the pool. If automatic scaling of the pool is currently\n   * disabled, you must specify a valid autoscale formula as part of the request.\n   * If automatic scaling of the pool is already enabled, you may specify a new\n   * autoscale formula and/or a new evaluation interval. You cannot call this API\n   * for the same pool more than once every 30 seconds.\n   *\n   * @param {string} poolId The ID of the pool on which to enable automatic\n   * scaling.\n   *\n   * @param {PoolEnableAutoScaleParameter} poolEnableAutoScaleParameter The\n   * parameters for the request.\n   *\n   * @param {PoolEnableAutoScaleOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async enableAutoScaleWithHttpOperationResponse(poolId: string, poolEnableAutoScaleParameter: Models.PoolEnableAutoScaleParameter, options?: Models.PoolEnableAutoScaleOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolEnableAutoScaleOptions = (options && options.poolEnableAutoScaleOptions !== undefined) ? options.poolEnableAutoScaleOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (poolEnableAutoScaleParameter === null || poolEnableAutoScaleParameter === undefined) {\n        throw new Error('poolEnableAutoScaleParameter cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (poolEnableAutoScaleOptions !== null && poolEnableAutoScaleOptions !== undefined)\n      {\n        timeout = poolEnableAutoScaleOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolEnableAutoScaleOptions !== null && poolEnableAutoScaleOptions !== undefined)\n      {\n        clientRequestId = poolEnableAutoScaleOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolEnableAutoScaleOptions !== null && poolEnableAutoScaleOptions !== undefined)\n      {\n        returnClientRequestId = poolEnableAutoScaleOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolEnableAutoScaleOptions !== null && poolEnableAutoScaleOptions !== undefined)\n      {\n        ocpDate = poolEnableAutoScaleOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (poolEnableAutoScaleOptions !== null && poolEnableAutoScaleOptions !== undefined)\n      {\n        ifMatch = poolEnableAutoScaleOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (poolEnableAutoScaleOptions !== null && poolEnableAutoScaleOptions !== undefined)\n      {\n        ifNoneMatch = poolEnableAutoScaleOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (poolEnableAutoScaleOptions !== null && poolEnableAutoScaleOptions !== undefined)\n      {\n        ifModifiedSince = poolEnableAutoScaleOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (poolEnableAutoScaleOptions !== null && poolEnableAutoScaleOptions !== undefined)\n      {\n        ifUnmodifiedSince = poolEnableAutoScaleOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/enableautoscale';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (poolEnableAutoScaleParameter !== null && poolEnableAutoScaleParameter !== undefined) {\n        let requestModelMapper = Mappers.PoolEnableAutoScaleParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, poolEnableAutoScaleParameter, 'poolEnableAutoScaleParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(poolEnableAutoScaleParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Gets the result of evaluating an automatic scaling formula on the\n   * pool.\n   *\n   * This API is primarily for validating an autoscale formula, as it simply\n   * returns the result without applying the formula to the pool. The pool must\n   * have auto scaling enabled in order to evaluate a formula.\n   *\n   * @param {string} poolId The ID of the pool on which to evaluate the automatic\n   * scaling formula.\n   *\n   * @param {string} autoScaleFormula The formula for the desired number of\n   * compute nodes in the pool. The formula is validated and its results\n   * calculated, but it is not applied to the pool. To apply the formula to the\n   * pool, 'Enable automatic scaling on a pool'. For more information about\n   * specifying this formula, see Automatically scale compute nodes in an Azure\n   * Batch pool\n   * (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).\n   *\n   * @param {PoolEvaluateAutoScaleOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async evaluateAutoScaleWithHttpOperationResponse(poolId: string, autoScaleFormula: string, options?: Models.PoolEvaluateAutoScaleOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolEvaluateAutoScaleOptions = (options && options.poolEvaluateAutoScaleOptions !== undefined) ? options.poolEvaluateAutoScaleOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (autoScaleFormula === null || autoScaleFormula === undefined || typeof autoScaleFormula.valueOf() !== 'string') {\n        throw new Error('autoScaleFormula cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let poolEvaluateAutoScaleParameter: any = {};\n    try {\n      if (poolEvaluateAutoScaleOptions !== null && poolEvaluateAutoScaleOptions !== undefined)\n      {\n        timeout = poolEvaluateAutoScaleOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolEvaluateAutoScaleOptions !== null && poolEvaluateAutoScaleOptions !== undefined)\n      {\n        clientRequestId = poolEvaluateAutoScaleOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolEvaluateAutoScaleOptions !== null && poolEvaluateAutoScaleOptions !== undefined)\n      {\n        returnClientRequestId = poolEvaluateAutoScaleOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolEvaluateAutoScaleOptions !== null && poolEvaluateAutoScaleOptions !== undefined)\n      {\n        ocpDate = poolEvaluateAutoScaleOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (autoScaleFormula !== null && autoScaleFormula !== undefined)\n      {\n        poolEvaluateAutoScaleParameter.autoScaleFormula = autoScaleFormula;\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/evaluateautoscale';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (poolEvaluateAutoScaleParameter !== null && poolEvaluateAutoScaleParameter !== undefined) {\n        let requestModelMapper = Mappers.PoolEvaluateAutoScaleParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, poolEvaluateAutoScaleParameter, 'poolEvaluateAutoScaleParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(poolEvaluateAutoScaleParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.AutoScaleRun;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Changes the number of compute nodes that are assigned to a pool.\n   *\n   * You can only resize a pool when its allocation state is steady. If the pool\n   * is already resizing, the request fails with status code 409. When you resize\n   * a pool, the pool's allocation state changes from steady to resizing. You\n   * cannot resize pools which are configured for automatic scaling. If you try\n   * to do this, the Batch service returns an error 409. If you resize a pool\n   * downwards, the Batch service chooses which nodes to remove. To remove\n   * specific nodes, use the pool remove nodes API instead.\n   *\n   * @param {string} poolId The ID of the pool to resize.\n   *\n   * @param {PoolResizeParameter} poolResizeParameter The parameters for the\n   * request.\n   *\n   * @param {PoolResizeOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async resizeWithHttpOperationResponse(poolId: string, poolResizeParameter: Models.PoolResizeParameter, options?: Models.PoolResizeOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolResizeOptions = (options && options.poolResizeOptions !== undefined) ? options.poolResizeOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (poolResizeParameter === null || poolResizeParameter === undefined) {\n        throw new Error('poolResizeParameter cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (poolResizeOptions !== null && poolResizeOptions !== undefined)\n      {\n        timeout = poolResizeOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolResizeOptions !== null && poolResizeOptions !== undefined)\n      {\n        clientRequestId = poolResizeOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolResizeOptions !== null && poolResizeOptions !== undefined)\n      {\n        returnClientRequestId = poolResizeOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolResizeOptions !== null && poolResizeOptions !== undefined)\n      {\n        ocpDate = poolResizeOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (poolResizeOptions !== null && poolResizeOptions !== undefined)\n      {\n        ifMatch = poolResizeOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (poolResizeOptions !== null && poolResizeOptions !== undefined)\n      {\n        ifNoneMatch = poolResizeOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (poolResizeOptions !== null && poolResizeOptions !== undefined)\n      {\n        ifModifiedSince = poolResizeOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (poolResizeOptions !== null && poolResizeOptions !== undefined)\n      {\n        ifUnmodifiedSince = poolResizeOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/resize';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (poolResizeParameter !== null && poolResizeParameter !== undefined) {\n        let requestModelMapper = Mappers.PoolResizeParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, poolResizeParameter, 'poolResizeParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(poolResizeParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Stops an ongoing resize operation on the pool.\n   *\n   * This does not restore the pool to its previous state before the resize\n   * operation: it only stops any further changes being made, and the pool\n   * maintains its current state. After stopping, the pool stabilizes at the\n   * number of nodes it was at when the stop operation was done. During the stop\n   * operation, the pool allocation state changes first to stopping and then to\n   * steady. A resize operation need not be an explicit resize pool request; this\n   * API can also be used to halt the initial sizing of the pool when it is\n   * created.\n   *\n   * @param {string} poolId The ID of the pool whose resizing you want to stop.\n   *\n   * @param {PoolStopResizeOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async stopResizeWithHttpOperationResponse(poolId: string, options?: Models.PoolStopResizeOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolStopResizeOptions = (options && options.poolStopResizeOptions !== undefined) ? options.poolStopResizeOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (poolStopResizeOptions !== null && poolStopResizeOptions !== undefined)\n      {\n        timeout = poolStopResizeOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolStopResizeOptions !== null && poolStopResizeOptions !== undefined)\n      {\n        clientRequestId = poolStopResizeOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolStopResizeOptions !== null && poolStopResizeOptions !== undefined)\n      {\n        returnClientRequestId = poolStopResizeOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolStopResizeOptions !== null && poolStopResizeOptions !== undefined)\n      {\n        ocpDate = poolStopResizeOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (poolStopResizeOptions !== null && poolStopResizeOptions !== undefined)\n      {\n        ifMatch = poolStopResizeOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (poolStopResizeOptions !== null && poolStopResizeOptions !== undefined)\n      {\n        ifNoneMatch = poolStopResizeOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (poolStopResizeOptions !== null && poolStopResizeOptions !== undefined)\n      {\n        ifModifiedSince = poolStopResizeOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (poolStopResizeOptions !== null && poolStopResizeOptions !== undefined)\n      {\n        ifUnmodifiedSince = poolStopResizeOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/stopresize';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Updates the properties of the specified pool.\n   *\n   * This fully replaces all the updateable properties of the pool. For example,\n   * if the pool has a start task associated with it and if start task is not\n   * specified with this request, then the Batch service will remove the existing\n   * start task.\n   *\n   * @param {string} poolId The ID of the pool to update.\n   *\n   * @param {PoolUpdatePropertiesParameter} poolUpdatePropertiesParameter The\n   * parameters for the request.\n   *\n   * @param {PoolUpdatePropertiesOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async updatePropertiesWithHttpOperationResponse(poolId: string, poolUpdatePropertiesParameter: Models.PoolUpdatePropertiesParameter, options?: Models.PoolUpdatePropertiesOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolUpdatePropertiesOptions = (options && options.poolUpdatePropertiesOptions !== undefined) ? options.poolUpdatePropertiesOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (poolUpdatePropertiesParameter === null || poolUpdatePropertiesParameter === undefined) {\n        throw new Error('poolUpdatePropertiesParameter cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (poolUpdatePropertiesOptions !== null && poolUpdatePropertiesOptions !== undefined)\n      {\n        timeout = poolUpdatePropertiesOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolUpdatePropertiesOptions !== null && poolUpdatePropertiesOptions !== undefined)\n      {\n        clientRequestId = poolUpdatePropertiesOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolUpdatePropertiesOptions !== null && poolUpdatePropertiesOptions !== undefined)\n      {\n        returnClientRequestId = poolUpdatePropertiesOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolUpdatePropertiesOptions !== null && poolUpdatePropertiesOptions !== undefined)\n      {\n        ocpDate = poolUpdatePropertiesOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/updateproperties';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (poolUpdatePropertiesParameter !== null && poolUpdatePropertiesParameter !== undefined) {\n        let requestModelMapper = Mappers.PoolUpdatePropertiesParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, poolUpdatePropertiesParameter, 'poolUpdatePropertiesParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(poolUpdatePropertiesParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 204) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Upgrades the operating system of the specified pool.\n   *\n   * During an upgrade, the Batch service upgrades each compute node in the pool.\n   * When a compute node is chosen for upgrade, any tasks running on that node\n   * are removed from the node and returned to the queue to be rerun later (or on\n   * a different compute node). The node will be unavailable until the upgrade is\n   * complete. This operation results in temporarily reduced pool capacity as\n   * nodes are taken out of service to be upgraded. Although the Batch service\n   * tries to avoid upgrading all compute nodes at the same time, it does not\n   * guarantee to do this (particularly on small pools); therefore, the pool may\n   * be temporarily unavailable to run tasks. When this operation runs, the pool\n   * state changes to upgrading. When all compute nodes have finished upgrading,\n   * the pool state returns to active. While the upgrade is in progress, the\n   * pool's currentOSVersion reflects the OS version that nodes are upgrading\n   * from, and targetOSVersion reflects the OS version that nodes are upgrading\n   * to. Once the upgrade is complete, currentOSVersion is updated to reflect the\n   * OS version now running on all nodes. This operation can only be invoked on\n   * pools created with the cloudServiceConfiguration property.\n   *\n   * @param {string} poolId The ID of the pool to upgrade.\n   *\n   * @param {string} targetOSVersion The Azure Guest OS version to be installed\n   * on the virtual machines in the pool.\n   *\n   * @param {PoolUpgradeOSOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async upgradeOSWithHttpOperationResponse(poolId: string, targetOSVersion: string, options?: Models.PoolUpgradeOSOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolUpgradeOSOptions = (options && options.poolUpgradeOSOptions !== undefined) ? options.poolUpgradeOSOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (targetOSVersion === null || targetOSVersion === undefined || typeof targetOSVersion.valueOf() !== 'string') {\n        throw new Error('targetOSVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    let poolUpgradeOSParameter: any = {};\n    try {\n      if (poolUpgradeOSOptions !== null && poolUpgradeOSOptions !== undefined)\n      {\n        timeout = poolUpgradeOSOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolUpgradeOSOptions !== null && poolUpgradeOSOptions !== undefined)\n      {\n        clientRequestId = poolUpgradeOSOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolUpgradeOSOptions !== null && poolUpgradeOSOptions !== undefined)\n      {\n        returnClientRequestId = poolUpgradeOSOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolUpgradeOSOptions !== null && poolUpgradeOSOptions !== undefined)\n      {\n        ocpDate = poolUpgradeOSOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (poolUpgradeOSOptions !== null && poolUpgradeOSOptions !== undefined)\n      {\n        ifMatch = poolUpgradeOSOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (poolUpgradeOSOptions !== null && poolUpgradeOSOptions !== undefined)\n      {\n        ifNoneMatch = poolUpgradeOSOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (poolUpgradeOSOptions !== null && poolUpgradeOSOptions !== undefined)\n      {\n        ifModifiedSince = poolUpgradeOSOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (poolUpgradeOSOptions !== null && poolUpgradeOSOptions !== undefined)\n      {\n        ifUnmodifiedSince = poolUpgradeOSOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n      if (targetOSVersion !== null && targetOSVersion !== undefined)\n      {\n        poolUpgradeOSParameter.targetOSVersion = targetOSVersion;\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/upgradeos';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (poolUpgradeOSParameter !== null && poolUpgradeOSParameter !== undefined) {\n        let requestModelMapper = Mappers.PoolUpgradeOSParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, poolUpgradeOSParameter, 'poolUpgradeOSParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(poolUpgradeOSParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Removes compute nodes from the specified pool.\n   *\n   * This operation can only run when the allocation state of the pool is steady.\n   * When this operation runs, the allocation state changes from steady to\n   * resizing.\n   *\n   * @param {string} poolId The ID of the pool from which you want to remove\n   * nodes.\n   *\n   * @param {NodeRemoveParameter} nodeRemoveParameter The parameters for the\n   * request.\n   *\n   * @param {PoolRemoveNodesOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async removeNodesWithHttpOperationResponse(poolId: string, nodeRemoveParameter: Models.NodeRemoveParameter, options?: Models.PoolRemoveNodesOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolRemoveNodesOptions = (options && options.poolRemoveNodesOptions !== undefined) ? options.poolRemoveNodesOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeRemoveParameter === null || nodeRemoveParameter === undefined) {\n        throw new Error('nodeRemoveParameter cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (poolRemoveNodesOptions !== null && poolRemoveNodesOptions !== undefined)\n      {\n        timeout = poolRemoveNodesOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (poolRemoveNodesOptions !== null && poolRemoveNodesOptions !== undefined)\n      {\n        clientRequestId = poolRemoveNodesOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolRemoveNodesOptions !== null && poolRemoveNodesOptions !== undefined)\n      {\n        returnClientRequestId = poolRemoveNodesOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolRemoveNodesOptions !== null && poolRemoveNodesOptions !== undefined)\n      {\n        ocpDate = poolRemoveNodesOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (poolRemoveNodesOptions !== null && poolRemoveNodesOptions !== undefined)\n      {\n        ifMatch = poolRemoveNodesOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (poolRemoveNodesOptions !== null && poolRemoveNodesOptions !== undefined)\n      {\n        ifNoneMatch = poolRemoveNodesOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (poolRemoveNodesOptions !== null && poolRemoveNodesOptions !== undefined)\n      {\n        ifModifiedSince = poolRemoveNodesOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (poolRemoveNodesOptions !== null && poolRemoveNodesOptions !== undefined)\n      {\n        ifUnmodifiedSince = poolRemoveNodesOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/removenodes';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (nodeRemoveParameter !== null && nodeRemoveParameter !== undefined) {\n        let requestModelMapper = Mappers.NodeRemoveParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, nodeRemoveParameter, 'nodeRemoveParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(nodeRemoveParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists the usage metrics, aggregated by pool across individual time\n   * intervals, for the specified account.\n   *\n   * If you do not specify a $filter clause including a poolId, the response\n   * includes all pools that existed in the account in the time range of the\n   * returned aggregation intervals. If you do not specify a $filter clause\n   * including a startTime or endTime these filters default to the start and end\n   * times of the last aggregation interval currently available; that is, only\n   * the last aggregation interval is returned.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {PoolListUsageMetricsNextOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listUsageMetricsNextWithHttpOperationResponse(nextPageLink: string, options?: Models.PoolListUsageMetricsNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolListUsageMetricsNextOptions = (options && options.poolListUsageMetricsNextOptions !== undefined) ? options.poolListUsageMetricsNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (poolListUsageMetricsNextOptions !== null && poolListUsageMetricsNextOptions !== undefined)\n      {\n        clientRequestId = poolListUsageMetricsNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolListUsageMetricsNextOptions !== null && poolListUsageMetricsNextOptions !== undefined)\n      {\n        returnClientRequestId = poolListUsageMetricsNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolListUsageMetricsNextOptions !== null && poolListUsageMetricsNextOptions !== undefined)\n      {\n        ocpDate = poolListUsageMetricsNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.PoolListUsageMetricsResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the pools in the specified account.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {PoolListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listNextWithHttpOperationResponse(nextPageLink: string, options?: Models.PoolListNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let poolListNextOptions = (options && options.poolListNextOptions !== undefined) ? options.poolListNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (poolListNextOptions !== null && poolListNextOptions !== undefined)\n      {\n        clientRequestId = poolListNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (poolListNextOptions !== null && poolListNextOptions !== undefined)\n      {\n        returnClientRequestId = poolListNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (poolListNextOptions !== null && poolListNextOptions !== undefined)\n      {\n        ocpDate = poolListNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudPoolListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists the usage metrics, aggregated by pool across individual time\n   * intervals, for the specified account.\n   *\n   * If you do not specify a $filter clause including a poolId, the response\n   * includes all pools that existed in the account in the time range of the\n   * returned aggregation intervals. If you do not specify a $filter clause\n   * including a startTime or endTime these filters default to the start and end\n   * times of the last aggregation interval currently available; that is, only\n   * the last aggregation interval is returned.\n   *\n   * @param {PoolListUsageMetricsOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.PoolListUsageMetricsResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.PoolListUsageMetricsResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listUsageMetrics(): Promise<Models.PoolListUsageMetricsResult>;\n  listUsageMetrics(options: Models.PoolListUsageMetricsOptionalParams): Promise<Models.PoolListUsageMetricsResult>;\n  listUsageMetrics(callback: msRest.ServiceCallback<Models.PoolListUsageMetricsResult>): void;\n  listUsageMetrics(options: Models.PoolListUsageMetricsOptionalParams, callback: msRest.ServiceCallback<Models.PoolListUsageMetricsResult>): void;\n  listUsageMetrics(options?: Models.PoolListUsageMetricsOptionalParams, callback?: msRest.ServiceCallback<Models.PoolListUsageMetricsResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.PoolListUsageMetricsResult>;\n    if (!callback) {\n      return this.listUsageMetricsWithHttpOperationResponse(options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.PoolListUsageMetricsResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listUsageMetricsWithHttpOperationResponse(options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.PoolListUsageMetricsResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Gets lifetime summary statistics for all of the pools in the\n   * specified account.\n   *\n   * Statistics are aggregated across all pools that have ever existed in the\n   * account, from account creation to the last update time of the statistics.\n   *\n   * @param {PoolGetAllLifetimeStatisticsOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.PoolStatistics} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.PoolStatistics} for more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  getAllLifetimeStatistics(): Promise<Models.PoolStatistics>;\n  getAllLifetimeStatistics(options: Models.PoolGetAllLifetimeStatisticsOptionalParams): Promise<Models.PoolStatistics>;\n  getAllLifetimeStatistics(callback: msRest.ServiceCallback<Models.PoolStatistics>): void;\n  getAllLifetimeStatistics(options: Models.PoolGetAllLifetimeStatisticsOptionalParams, callback: msRest.ServiceCallback<Models.PoolStatistics>): void;\n  getAllLifetimeStatistics(options?: Models.PoolGetAllLifetimeStatisticsOptionalParams, callback?: msRest.ServiceCallback<Models.PoolStatistics>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.PoolStatistics>;\n    if (!callback) {\n      return this.getAllLifetimeStatisticsWithHttpOperationResponse(options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.PoolStatistics);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getAllLifetimeStatisticsWithHttpOperationResponse(options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.PoolStatistics;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Adds a pool to the specified account.\n   *\n   * When naming pools, avoid including sensitive information such as user names\n   * or secret project names. This information may appear in telemetry logs\n   * accessible to Microsoft Support engineers.\n   *\n   * @param {PoolAddParameter} pool The pool to be added.\n   *\n   * @param {PoolAddOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  add(pool: Models.PoolAddParameter): Promise<void>;\n  add(pool: Models.PoolAddParameter, options: Models.PoolAddOptionalParams): Promise<void>;\n  add(pool: Models.PoolAddParameter, callback: msRest.ServiceCallback<void>): void;\n  add(pool: Models.PoolAddParameter, options: Models.PoolAddOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  add(pool: Models.PoolAddParameter, options?: Models.PoolAddOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.addWithHttpOperationResponse(pool, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.addWithHttpOperationResponse(pool, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the pools in the specified account.\n   *\n   * @param {PoolListOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudPoolListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudPoolListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  list(): Promise<Models.CloudPoolListResult>;\n  list(options: Models.PoolListOptionalParams): Promise<Models.CloudPoolListResult>;\n  list(callback: msRest.ServiceCallback<Models.CloudPoolListResult>): void;\n  list(options: Models.PoolListOptionalParams, callback: msRest.ServiceCallback<Models.CloudPoolListResult>): void;\n  list(options?: Models.PoolListOptionalParams, callback?: msRest.ServiceCallback<Models.CloudPoolListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudPoolListResult>;\n    if (!callback) {\n      return this.listWithHttpOperationResponse(options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudPoolListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listWithHttpOperationResponse(options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudPoolListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Deletes a pool from the specified account.\n   *\n   * When you request that a pool be deleted, the following actions occur: the\n   * pool state is set to deleting; any ongoing resize operation on the pool are\n   * stopped; the Batch service starts resizing the pool to zero nodes; any tasks\n   * running on existing nodes are terminated and requeued (as if a resize pool\n   * operation had been requested with the default requeue option); finally, the\n   * pool is removed from the system. Because running tasks are requeued, the\n   * user can rerun these tasks by updating their job to target a different pool.\n   * The tasks can then run on the new pool. If you want to override the requeue\n   * behavior, then you should call resize pool explicitly to shrink the pool to\n   * zero size before deleting the pool. If you call an Update, Patch or Delete\n   * API on a pool in the deleting state, it will fail with HTTP status code 409\n   * with error code PoolBeingDeleted.\n   *\n   * @param {string} poolId The ID of the pool to delete.\n   *\n   * @param {PoolDeleteMethodOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  deleteMethod(poolId: string): Promise<void>;\n  deleteMethod(poolId: string, options: Models.PoolDeleteMethodOptionalParams): Promise<void>;\n  deleteMethod(poolId: string, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(poolId: string, options: Models.PoolDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(poolId: string, options?: Models.PoolDeleteMethodOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.deleteMethodWithHttpOperationResponse(poolId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.deleteMethodWithHttpOperationResponse(poolId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * Gets basic properties of a pool.\n   *\n   * @param {string} poolId The ID of the pool to get.\n   *\n   * @param {PoolExistsOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {boolean} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  exists(poolId: string): Promise<boolean>;\n  exists(poolId: string, options: Models.PoolExistsOptionalParams): Promise<boolean>;\n  exists(poolId: string, callback: msRest.ServiceCallback<boolean>): void;\n  exists(poolId: string, options: Models.PoolExistsOptionalParams, callback: msRest.ServiceCallback<boolean>): void;\n  exists(poolId: string, options?: Models.PoolExistsOptionalParams, callback?: msRest.ServiceCallback<boolean>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<boolean>;\n    if (!callback) {\n      return this.existsWithHttpOperationResponse(poolId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as boolean);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.existsWithHttpOperationResponse(poolId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as boolean;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * Gets information about the specified pool.\n   *\n   * @param {string} poolId The ID of the pool to get.\n   *\n   * @param {PoolGetOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudPool} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudPool} for more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  get(poolId: string): Promise<Models.CloudPool>;\n  get(poolId: string, options: Models.PoolGetOptionalParams): Promise<Models.CloudPool>;\n  get(poolId: string, callback: msRest.ServiceCallback<Models.CloudPool>): void;\n  get(poolId: string, options: Models.PoolGetOptionalParams, callback: msRest.ServiceCallback<Models.CloudPool>): void;\n  get(poolId: string, options?: Models.PoolGetOptionalParams, callback?: msRest.ServiceCallback<Models.CloudPool>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudPool>;\n    if (!callback) {\n      return this.getWithHttpOperationResponse(poolId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudPool);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getWithHttpOperationResponse(poolId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudPool;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Updates the properties of the specified pool.\n   *\n   * This only replaces the pool properties specified in the request. For\n   * example, if the pool has a start task associated with it, and a request does\n   * not specify a start task element, then the pool keeps the existing start\n   * task.\n   *\n   * @param {string} poolId The ID of the pool to update.\n   *\n   * @param {PoolPatchParameter} poolPatchParameter The parameters for the\n   * request.\n   *\n   * @param {PoolPatchOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  patch(poolId: string, poolPatchParameter: Models.PoolPatchParameter): Promise<void>;\n  patch(poolId: string, poolPatchParameter: Models.PoolPatchParameter, options: Models.PoolPatchOptionalParams): Promise<void>;\n  patch(poolId: string, poolPatchParameter: Models.PoolPatchParameter, callback: msRest.ServiceCallback<void>): void;\n  patch(poolId: string, poolPatchParameter: Models.PoolPatchParameter, options: Models.PoolPatchOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  patch(poolId: string, poolPatchParameter: Models.PoolPatchParameter, options?: Models.PoolPatchOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.patchWithHttpOperationResponse(poolId, poolPatchParameter, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.patchWithHttpOperationResponse(poolId, poolPatchParameter, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Disables automatic scaling for a pool.\n   *\n   * @param {string} poolId The ID of the pool on which to disable automatic\n   * scaling.\n   *\n   * @param {PoolDisableAutoScaleOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  disableAutoScale(poolId: string): Promise<void>;\n  disableAutoScale(poolId: string, options: Models.PoolDisableAutoScaleOptionalParams): Promise<void>;\n  disableAutoScale(poolId: string, callback: msRest.ServiceCallback<void>): void;\n  disableAutoScale(poolId: string, options: Models.PoolDisableAutoScaleOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  disableAutoScale(poolId: string, options?: Models.PoolDisableAutoScaleOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.disableAutoScaleWithHttpOperationResponse(poolId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.disableAutoScaleWithHttpOperationResponse(poolId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Enables automatic scaling for a pool.\n   *\n   * You cannot enable automatic scaling on a pool if a resize operation is in\n   * progress on the pool. If automatic scaling of the pool is currently\n   * disabled, you must specify a valid autoscale formula as part of the request.\n   * If automatic scaling of the pool is already enabled, you may specify a new\n   * autoscale formula and/or a new evaluation interval. You cannot call this API\n   * for the same pool more than once every 30 seconds.\n   *\n   * @param {string} poolId The ID of the pool on which to enable automatic\n   * scaling.\n   *\n   * @param {PoolEnableAutoScaleParameter} poolEnableAutoScaleParameter The\n   * parameters for the request.\n   *\n   * @param {PoolEnableAutoScaleOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  enableAutoScale(poolId: string, poolEnableAutoScaleParameter: Models.PoolEnableAutoScaleParameter): Promise<void>;\n  enableAutoScale(poolId: string, poolEnableAutoScaleParameter: Models.PoolEnableAutoScaleParameter, options: Models.PoolEnableAutoScaleOptionalParams): Promise<void>;\n  enableAutoScale(poolId: string, poolEnableAutoScaleParameter: Models.PoolEnableAutoScaleParameter, callback: msRest.ServiceCallback<void>): void;\n  enableAutoScale(poolId: string, poolEnableAutoScaleParameter: Models.PoolEnableAutoScaleParameter, options: Models.PoolEnableAutoScaleOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  enableAutoScale(poolId: string, poolEnableAutoScaleParameter: Models.PoolEnableAutoScaleParameter, options?: Models.PoolEnableAutoScaleOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.enableAutoScaleWithHttpOperationResponse(poolId, poolEnableAutoScaleParameter, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.enableAutoScaleWithHttpOperationResponse(poolId, poolEnableAutoScaleParameter, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Gets the result of evaluating an automatic scaling formula on the\n   * pool.\n   *\n   * This API is primarily for validating an autoscale formula, as it simply\n   * returns the result without applying the formula to the pool. The pool must\n   * have auto scaling enabled in order to evaluate a formula.\n   *\n   * @param {string} poolId The ID of the pool on which to evaluate the automatic\n   * scaling formula.\n   *\n   * @param {string} autoScaleFormula The formula for the desired number of\n   * compute nodes in the pool. The formula is validated and its results\n   * calculated, but it is not applied to the pool. To apply the formula to the\n   * pool, 'Enable automatic scaling on a pool'. For more information about\n   * specifying this formula, see Automatically scale compute nodes in an Azure\n   * Batch pool\n   * (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).\n   *\n   * @param {PoolEvaluateAutoScaleOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.AutoScaleRun} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.AutoScaleRun} for more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  evaluateAutoScale(poolId: string, autoScaleFormula: string): Promise<Models.AutoScaleRun>;\n  evaluateAutoScale(poolId: string, autoScaleFormula: string, options: Models.PoolEvaluateAutoScaleOptionalParams): Promise<Models.AutoScaleRun>;\n  evaluateAutoScale(poolId: string, autoScaleFormula: string, callback: msRest.ServiceCallback<Models.AutoScaleRun>): void;\n  evaluateAutoScale(poolId: string, autoScaleFormula: string, options: Models.PoolEvaluateAutoScaleOptionalParams, callback: msRest.ServiceCallback<Models.AutoScaleRun>): void;\n  evaluateAutoScale(poolId: string, autoScaleFormula: string, options?: Models.PoolEvaluateAutoScaleOptionalParams, callback?: msRest.ServiceCallback<Models.AutoScaleRun>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.AutoScaleRun>;\n    if (!callback) {\n      return this.evaluateAutoScaleWithHttpOperationResponse(poolId, autoScaleFormula, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.AutoScaleRun);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.evaluateAutoScaleWithHttpOperationResponse(poolId, autoScaleFormula, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.AutoScaleRun;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Changes the number of compute nodes that are assigned to a pool.\n   *\n   * You can only resize a pool when its allocation state is steady. If the pool\n   * is already resizing, the request fails with status code 409. When you resize\n   * a pool, the pool's allocation state changes from steady to resizing. You\n   * cannot resize pools which are configured for automatic scaling. If you try\n   * to do this, the Batch service returns an error 409. If you resize a pool\n   * downwards, the Batch service chooses which nodes to remove. To remove\n   * specific nodes, use the pool remove nodes API instead.\n   *\n   * @param {string} poolId The ID of the pool to resize.\n   *\n   * @param {PoolResizeParameter} poolResizeParameter The parameters for the\n   * request.\n   *\n   * @param {PoolResizeOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  resize(poolId: string, poolResizeParameter: Models.PoolResizeParameter): Promise<void>;\n  resize(poolId: string, poolResizeParameter: Models.PoolResizeParameter, options: Models.PoolResizeOptionalParams): Promise<void>;\n  resize(poolId: string, poolResizeParameter: Models.PoolResizeParameter, callback: msRest.ServiceCallback<void>): void;\n  resize(poolId: string, poolResizeParameter: Models.PoolResizeParameter, options: Models.PoolResizeOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  resize(poolId: string, poolResizeParameter: Models.PoolResizeParameter, options?: Models.PoolResizeOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.resizeWithHttpOperationResponse(poolId, poolResizeParameter, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.resizeWithHttpOperationResponse(poolId, poolResizeParameter, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Stops an ongoing resize operation on the pool.\n   *\n   * This does not restore the pool to its previous state before the resize\n   * operation: it only stops any further changes being made, and the pool\n   * maintains its current state. After stopping, the pool stabilizes at the\n   * number of nodes it was at when the stop operation was done. During the stop\n   * operation, the pool allocation state changes first to stopping and then to\n   * steady. A resize operation need not be an explicit resize pool request; this\n   * API can also be used to halt the initial sizing of the pool when it is\n   * created.\n   *\n   * @param {string} poolId The ID of the pool whose resizing you want to stop.\n   *\n   * @param {PoolStopResizeOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  stopResize(poolId: string): Promise<void>;\n  stopResize(poolId: string, options: Models.PoolStopResizeOptionalParams): Promise<void>;\n  stopResize(poolId: string, callback: msRest.ServiceCallback<void>): void;\n  stopResize(poolId: string, options: Models.PoolStopResizeOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  stopResize(poolId: string, options?: Models.PoolStopResizeOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.stopResizeWithHttpOperationResponse(poolId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.stopResizeWithHttpOperationResponse(poolId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Updates the properties of the specified pool.\n   *\n   * This fully replaces all the updateable properties of the pool. For example,\n   * if the pool has a start task associated with it and if start task is not\n   * specified with this request, then the Batch service will remove the existing\n   * start task.\n   *\n   * @param {string} poolId The ID of the pool to update.\n   *\n   * @param {PoolUpdatePropertiesParameter} poolUpdatePropertiesParameter The\n   * parameters for the request.\n   *\n   * @param {PoolUpdatePropertiesOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  updateProperties(poolId: string, poolUpdatePropertiesParameter: Models.PoolUpdatePropertiesParameter): Promise<void>;\n  updateProperties(poolId: string, poolUpdatePropertiesParameter: Models.PoolUpdatePropertiesParameter, options: Models.PoolUpdatePropertiesOptionalParams): Promise<void>;\n  updateProperties(poolId: string, poolUpdatePropertiesParameter: Models.PoolUpdatePropertiesParameter, callback: msRest.ServiceCallback<void>): void;\n  updateProperties(poolId: string, poolUpdatePropertiesParameter: Models.PoolUpdatePropertiesParameter, options: Models.PoolUpdatePropertiesOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  updateProperties(poolId: string, poolUpdatePropertiesParameter: Models.PoolUpdatePropertiesParameter, options?: Models.PoolUpdatePropertiesOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.updatePropertiesWithHttpOperationResponse(poolId, poolUpdatePropertiesParameter, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.updatePropertiesWithHttpOperationResponse(poolId, poolUpdatePropertiesParameter, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Upgrades the operating system of the specified pool.\n   *\n   * During an upgrade, the Batch service upgrades each compute node in the pool.\n   * When a compute node is chosen for upgrade, any tasks running on that node\n   * are removed from the node and returned to the queue to be rerun later (or on\n   * a different compute node). The node will be unavailable until the upgrade is\n   * complete. This operation results in temporarily reduced pool capacity as\n   * nodes are taken out of service to be upgraded. Although the Batch service\n   * tries to avoid upgrading all compute nodes at the same time, it does not\n   * guarantee to do this (particularly on small pools); therefore, the pool may\n   * be temporarily unavailable to run tasks. When this operation runs, the pool\n   * state changes to upgrading. When all compute nodes have finished upgrading,\n   * the pool state returns to active. While the upgrade is in progress, the\n   * pool's currentOSVersion reflects the OS version that nodes are upgrading\n   * from, and targetOSVersion reflects the OS version that nodes are upgrading\n   * to. Once the upgrade is complete, currentOSVersion is updated to reflect the\n   * OS version now running on all nodes. This operation can only be invoked on\n   * pools created with the cloudServiceConfiguration property.\n   *\n   * @param {string} poolId The ID of the pool to upgrade.\n   *\n   * @param {string} targetOSVersion The Azure Guest OS version to be installed\n   * on the virtual machines in the pool.\n   *\n   * @param {PoolUpgradeOSOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  upgradeOS(poolId: string, targetOSVersion: string): Promise<void>;\n  upgradeOS(poolId: string, targetOSVersion: string, options: Models.PoolUpgradeOSOptionalParams): Promise<void>;\n  upgradeOS(poolId: string, targetOSVersion: string, callback: msRest.ServiceCallback<void>): void;\n  upgradeOS(poolId: string, targetOSVersion: string, options: Models.PoolUpgradeOSOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  upgradeOS(poolId: string, targetOSVersion: string, options?: Models.PoolUpgradeOSOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.upgradeOSWithHttpOperationResponse(poolId, targetOSVersion, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.upgradeOSWithHttpOperationResponse(poolId, targetOSVersion, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Removes compute nodes from the specified pool.\n   *\n   * This operation can only run when the allocation state of the pool is steady.\n   * When this operation runs, the allocation state changes from steady to\n   * resizing.\n   *\n   * @param {string} poolId The ID of the pool from which you want to remove\n   * nodes.\n   *\n   * @param {NodeRemoveParameter} nodeRemoveParameter The parameters for the\n   * request.\n   *\n   * @param {PoolRemoveNodesOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  removeNodes(poolId: string, nodeRemoveParameter: Models.NodeRemoveParameter): Promise<void>;\n  removeNodes(poolId: string, nodeRemoveParameter: Models.NodeRemoveParameter, options: Models.PoolRemoveNodesOptionalParams): Promise<void>;\n  removeNodes(poolId: string, nodeRemoveParameter: Models.NodeRemoveParameter, callback: msRest.ServiceCallback<void>): void;\n  removeNodes(poolId: string, nodeRemoveParameter: Models.NodeRemoveParameter, options: Models.PoolRemoveNodesOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  removeNodes(poolId: string, nodeRemoveParameter: Models.NodeRemoveParameter, options?: Models.PoolRemoveNodesOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.removeNodesWithHttpOperationResponse(poolId, nodeRemoveParameter, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.removeNodesWithHttpOperationResponse(poolId, nodeRemoveParameter, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists the usage metrics, aggregated by pool across individual time\n   * intervals, for the specified account.\n   *\n   * If you do not specify a $filter clause including a poolId, the response\n   * includes all pools that existed in the account in the time range of the\n   * returned aggregation intervals. If you do not specify a $filter clause\n   * including a startTime or endTime these filters default to the start and end\n   * times of the last aggregation interval currently available; that is, only\n   * the last aggregation interval is returned.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {PoolListUsageMetricsNextOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.PoolListUsageMetricsResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.PoolListUsageMetricsResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listUsageMetricsNext(nextPageLink: string): Promise<Models.PoolListUsageMetricsResult>;\n  listUsageMetricsNext(nextPageLink: string, options: Models.PoolListUsageMetricsNextOptionalParams): Promise<Models.PoolListUsageMetricsResult>;\n  listUsageMetricsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PoolListUsageMetricsResult>): void;\n  listUsageMetricsNext(nextPageLink: string, options: Models.PoolListUsageMetricsNextOptionalParams, callback: msRest.ServiceCallback<Models.PoolListUsageMetricsResult>): void;\n  listUsageMetricsNext(nextPageLink: string, options?: Models.PoolListUsageMetricsNextOptionalParams, callback?: msRest.ServiceCallback<Models.PoolListUsageMetricsResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.PoolListUsageMetricsResult>;\n    if (!callback) {\n      return this.listUsageMetricsNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.PoolListUsageMetricsResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listUsageMetricsNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.PoolListUsageMetricsResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the pools in the specified account.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {PoolListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudPoolListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudPoolListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listNext(nextPageLink: string): Promise<Models.CloudPoolListResult>;\n  listNext(nextPageLink: string, options: Models.PoolListNextOptionalParams): Promise<Models.CloudPoolListResult>;\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CloudPoolListResult>): void;\n  listNext(nextPageLink: string, options: Models.PoolListNextOptionalParams, callback: msRest.ServiceCallback<Models.CloudPoolListResult>): void;\n  listNext(nextPageLink: string, options?: Models.PoolListNextOptionalParams, callback?: msRest.ServiceCallback<Models.CloudPoolListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudPoolListResult>;\n    if (!callback) {\n      return this.listNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudPoolListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudPoolListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/operations/pool.ts","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/mappers\";\nimport { BatchServiceClient } from \"../batchServiceClient\";\n\nconst WebResource = msRest.WebResource;\n\n/** Class representing a Account. */\nexport class Account {\n  private readonly client: BatchServiceClient;\n  /**\n   * Create a Account.\n   * @param {BatchServiceClient} client Reference to the service client.\n   */\n  constructor(client: BatchServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Lists all node agent SKUs supported by the Azure Batch service.\n   *\n   * @param {AccountListNodeAgentSkusOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listNodeAgentSkusWithHttpOperationResponse(options?: Models.AccountListNodeAgentSkusOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let accountListNodeAgentSkusOptions = (options && options.accountListNodeAgentSkusOptions !== undefined) ? options.accountListNodeAgentSkusOptions : undefined;\n    // Validate\n    try {\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let filter: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (accountListNodeAgentSkusOptions !== null && accountListNodeAgentSkusOptions !== undefined)\n      {\n        filter = accountListNodeAgentSkusOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (accountListNodeAgentSkusOptions !== null && accountListNodeAgentSkusOptions !== undefined)\n      {\n        maxResults = accountListNodeAgentSkusOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (accountListNodeAgentSkusOptions !== null && accountListNodeAgentSkusOptions !== undefined)\n      {\n        timeout = accountListNodeAgentSkusOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (accountListNodeAgentSkusOptions !== null && accountListNodeAgentSkusOptions !== undefined)\n      {\n        clientRequestId = accountListNodeAgentSkusOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (accountListNodeAgentSkusOptions !== null && accountListNodeAgentSkusOptions !== undefined)\n      {\n        returnClientRequestId = accountListNodeAgentSkusOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (accountListNodeAgentSkusOptions !== null && accountListNodeAgentSkusOptions !== undefined)\n      {\n        ocpDate = accountListNodeAgentSkusOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'nodeagentskus';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.AccountListNodeAgentSkusResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all node agent SKUs supported by the Azure Batch service.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {AccountListNodeAgentSkusNextOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listNodeAgentSkusNextWithHttpOperationResponse(nextPageLink: string, options?: Models.AccountListNodeAgentSkusNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let accountListNodeAgentSkusNextOptions = (options && options.accountListNodeAgentSkusNextOptions !== undefined) ? options.accountListNodeAgentSkusNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (accountListNodeAgentSkusNextOptions !== null && accountListNodeAgentSkusNextOptions !== undefined)\n      {\n        clientRequestId = accountListNodeAgentSkusNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (accountListNodeAgentSkusNextOptions !== null && accountListNodeAgentSkusNextOptions !== undefined)\n      {\n        returnClientRequestId = accountListNodeAgentSkusNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (accountListNodeAgentSkusNextOptions !== null && accountListNodeAgentSkusNextOptions !== undefined)\n      {\n        ocpDate = accountListNodeAgentSkusNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.AccountListNodeAgentSkusResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all node agent SKUs supported by the Azure Batch service.\n   *\n   * @param {AccountListNodeAgentSkusOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.AccountListNodeAgentSkusResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.AccountListNodeAgentSkusResult} for\n   *                      more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listNodeAgentSkus(): Promise<Models.AccountListNodeAgentSkusResult>;\n  listNodeAgentSkus(options: Models.AccountListNodeAgentSkusOptionalParams): Promise<Models.AccountListNodeAgentSkusResult>;\n  listNodeAgentSkus(callback: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): void;\n  listNodeAgentSkus(options: Models.AccountListNodeAgentSkusOptionalParams, callback: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): void;\n  listNodeAgentSkus(options?: Models.AccountListNodeAgentSkusOptionalParams, callback?: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>;\n    if (!callback) {\n      return this.listNodeAgentSkusWithHttpOperationResponse(options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.AccountListNodeAgentSkusResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listNodeAgentSkusWithHttpOperationResponse(options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.AccountListNodeAgentSkusResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all node agent SKUs supported by the Azure Batch service.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {AccountListNodeAgentSkusNextOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.AccountListNodeAgentSkusResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.AccountListNodeAgentSkusResult} for\n   *                      more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listNodeAgentSkusNext(nextPageLink: string): Promise<Models.AccountListNodeAgentSkusResult>;\n  listNodeAgentSkusNext(nextPageLink: string, options: Models.AccountListNodeAgentSkusNextOptionalParams): Promise<Models.AccountListNodeAgentSkusResult>;\n  listNodeAgentSkusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): void;\n  listNodeAgentSkusNext(nextPageLink: string, options: Models.AccountListNodeAgentSkusNextOptionalParams, callback: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): void;\n  listNodeAgentSkusNext(nextPageLink: string, options?: Models.AccountListNodeAgentSkusNextOptionalParams, callback?: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>;\n    if (!callback) {\n      return this.listNodeAgentSkusNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.AccountListNodeAgentSkusResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listNodeAgentSkusNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.AccountListNodeAgentSkusResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/operations/account.ts","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/mappers\";\nimport { BatchServiceClient } from \"../batchServiceClient\";\n\nconst WebResource = msRest.WebResource;\n\n/** Class representing a Job. */\nexport class Job {\n  private readonly client: BatchServiceClient;\n  /**\n   * Create a Job.\n   * @param {BatchServiceClient} client Reference to the service client.\n   */\n  constructor(client: BatchServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Gets lifetime summary statistics for all of the jobs in the\n   * specified account.\n   *\n   * Statistics are aggregated across all jobs that have ever existed in the\n   * account, from account creation to the last update time of the statistics.\n   *\n   * @param {JobGetAllLifetimeStatisticsOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getAllLifetimeStatisticsWithHttpOperationResponse(options?: Models.JobGetAllLifetimeStatisticsOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobGetAllLifetimeStatisticsOptions = (options && options.jobGetAllLifetimeStatisticsOptions !== undefined) ? options.jobGetAllLifetimeStatisticsOptions : undefined;\n    // Validate\n    try {\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobGetAllLifetimeStatisticsOptions !== null && jobGetAllLifetimeStatisticsOptions !== undefined)\n      {\n        timeout = jobGetAllLifetimeStatisticsOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobGetAllLifetimeStatisticsOptions !== null && jobGetAllLifetimeStatisticsOptions !== undefined)\n      {\n        clientRequestId = jobGetAllLifetimeStatisticsOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobGetAllLifetimeStatisticsOptions !== null && jobGetAllLifetimeStatisticsOptions !== undefined)\n      {\n        returnClientRequestId = jobGetAllLifetimeStatisticsOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobGetAllLifetimeStatisticsOptions !== null && jobGetAllLifetimeStatisticsOptions !== undefined)\n      {\n        ocpDate = jobGetAllLifetimeStatisticsOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'lifetimejobstats';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.JobStatistics;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Deletes a job.\n   *\n   * Deleting a job also deletes all tasks that are part of that job, and all job\n   * statistics. This also overrides the retention period for task data; that is,\n   * if the job contains tasks which are still retained on compute nodes, the\n   * Batch services deletes those tasks' working directories and all their\n   * contents.  When a Delete Job request is received, the Batch service sets the\n   * job to the deleting state. All update operations on a job that is in\n   * deleting state will fail with status code 409 (Conflict), with additional\n   * information indicating that the job is being deleted.\n   *\n   * @param {string} jobId The ID of the job to delete.\n   *\n   * @param {JobDeleteMethodOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async deleteMethodWithHttpOperationResponse(jobId: string, options?: Models.JobDeleteMethodOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobDeleteMethodOptions = (options && options.jobDeleteMethodOptions !== undefined) ? options.jobDeleteMethodOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobDeleteMethodOptions !== null && jobDeleteMethodOptions !== undefined)\n      {\n        timeout = jobDeleteMethodOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobDeleteMethodOptions !== null && jobDeleteMethodOptions !== undefined)\n      {\n        clientRequestId = jobDeleteMethodOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobDeleteMethodOptions !== null && jobDeleteMethodOptions !== undefined)\n      {\n        returnClientRequestId = jobDeleteMethodOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobDeleteMethodOptions !== null && jobDeleteMethodOptions !== undefined)\n      {\n        ocpDate = jobDeleteMethodOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobDeleteMethodOptions !== null && jobDeleteMethodOptions !== undefined)\n      {\n        ifMatch = jobDeleteMethodOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobDeleteMethodOptions !== null && jobDeleteMethodOptions !== undefined)\n      {\n        ifNoneMatch = jobDeleteMethodOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobDeleteMethodOptions !== null && jobDeleteMethodOptions !== undefined)\n      {\n        ifModifiedSince = jobDeleteMethodOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobDeleteMethodOptions !== null && jobDeleteMethodOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobDeleteMethodOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'DELETE';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Gets information about the specified job.\n   *\n   * @param {string} jobId The ID of the job.\n   *\n   * @param {JobGetOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getWithHttpOperationResponse(jobId: string, options?: Models.JobGetOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobGetOptions = (options && options.jobGetOptions !== undefined) ? options.jobGetOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let select: any;\n    let expand: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobGetOptions !== null && jobGetOptions !== undefined)\n      {\n        select = jobGetOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (jobGetOptions !== null && jobGetOptions !== undefined)\n      {\n        expand = jobGetOptions.expand;\n        if (expand !== null && expand !== undefined && typeof expand.valueOf() !== 'string') {\n          throw new Error('expand must be of type string.');\n        }\n      }\n      if (jobGetOptions !== null && jobGetOptions !== undefined)\n      {\n        timeout = jobGetOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobGetOptions !== null && jobGetOptions !== undefined)\n      {\n        clientRequestId = jobGetOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobGetOptions !== null && jobGetOptions !== undefined)\n      {\n        returnClientRequestId = jobGetOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobGetOptions !== null && jobGetOptions !== undefined)\n      {\n        ocpDate = jobGetOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobGetOptions !== null && jobGetOptions !== undefined)\n      {\n        ifMatch = jobGetOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobGetOptions !== null && jobGetOptions !== undefined)\n      {\n        ifNoneMatch = jobGetOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobGetOptions !== null && jobGetOptions !== undefined)\n      {\n        ifModifiedSince = jobGetOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobGetOptions !== null && jobGetOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobGetOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (expand !== null && expand !== undefined) {\n      queryParamsArray.push('$expand=' + encodeURIComponent(expand));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudJob;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Updates the properties of the specified job.\n   *\n   * This replaces only the job properties specified in the request. For example,\n   * if the job has constraints, and a request does not specify the constraints\n   * element, then the job keeps the existing constraints.\n   *\n   * @param {string} jobId The ID of the job whose properties you want to update.\n   *\n   * @param {JobPatchParameter} jobPatchParameter The parameters for the request.\n   *\n   * @param {JobPatchOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async patchWithHttpOperationResponse(jobId: string, jobPatchParameter: Models.JobPatchParameter, options?: Models.JobPatchOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobPatchOptions = (options && options.jobPatchOptions !== undefined) ? options.jobPatchOptions : undefined;\n    if (jobPatchParameter === null || jobPatchParameter === undefined)\n    {\n      jobPatchParameter = {} as any;\n    }\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (jobPatchParameter === null || jobPatchParameter === undefined) {\n        throw new Error('jobPatchParameter cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobPatchOptions !== null && jobPatchOptions !== undefined)\n      {\n        timeout = jobPatchOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobPatchOptions !== null && jobPatchOptions !== undefined)\n      {\n        clientRequestId = jobPatchOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobPatchOptions !== null && jobPatchOptions !== undefined)\n      {\n        returnClientRequestId = jobPatchOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobPatchOptions !== null && jobPatchOptions !== undefined)\n      {\n        ocpDate = jobPatchOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobPatchOptions !== null && jobPatchOptions !== undefined)\n      {\n        ifMatch = jobPatchOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobPatchOptions !== null && jobPatchOptions !== undefined)\n      {\n        ifNoneMatch = jobPatchOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobPatchOptions !== null && jobPatchOptions !== undefined)\n      {\n        ifModifiedSince = jobPatchOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobPatchOptions !== null && jobPatchOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobPatchOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'PATCH';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (jobPatchParameter !== null && jobPatchParameter !== undefined) {\n        let requestModelMapper = Mappers.JobPatchParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, jobPatchParameter, 'jobPatchParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(jobPatchParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Updates the properties of the specified job.\n   *\n   * This fully replaces all the updateable properties of the job. For example,\n   * if the job has constraints associated with it and if constraints is not\n   * specified with this request, then the Batch service will remove the existing\n   * constraints.\n   *\n   * @param {string} jobId The ID of the job whose properties you want to update.\n   *\n   * @param {JobUpdateParameter} jobUpdateParameter The parameters for the\n   * request.\n   *\n   * @param {JobUpdateOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async updateWithHttpOperationResponse(jobId: string, jobUpdateParameter: Models.JobUpdateParameter, options?: Models.JobUpdateOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobUpdateOptions = (options && options.jobUpdateOptions !== undefined) ? options.jobUpdateOptions : undefined;\n    if (jobUpdateParameter === null || jobUpdateParameter === undefined)\n    {\n      jobUpdateParameter = {} as any;\n    }\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (jobUpdateParameter === null || jobUpdateParameter === undefined) {\n        throw new Error('jobUpdateParameter cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobUpdateOptions !== null && jobUpdateOptions !== undefined)\n      {\n        timeout = jobUpdateOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobUpdateOptions !== null && jobUpdateOptions !== undefined)\n      {\n        clientRequestId = jobUpdateOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobUpdateOptions !== null && jobUpdateOptions !== undefined)\n      {\n        returnClientRequestId = jobUpdateOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobUpdateOptions !== null && jobUpdateOptions !== undefined)\n      {\n        ocpDate = jobUpdateOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobUpdateOptions !== null && jobUpdateOptions !== undefined)\n      {\n        ifMatch = jobUpdateOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobUpdateOptions !== null && jobUpdateOptions !== undefined)\n      {\n        ifNoneMatch = jobUpdateOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobUpdateOptions !== null && jobUpdateOptions !== undefined)\n      {\n        ifModifiedSince = jobUpdateOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobUpdateOptions !== null && jobUpdateOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobUpdateOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'PUT';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (jobUpdateParameter !== null && jobUpdateParameter !== undefined) {\n        let requestModelMapper = Mappers.JobUpdateParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, jobUpdateParameter, 'jobUpdateParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(jobUpdateParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Disables the specified job, preventing new tasks from running.\n   *\n   * The Batch Service immediately moves the job to the disabling state. Batch\n   * then uses the disableTasks parameter to determine what to do with the\n   * currently running tasks of the job. The job remains in the disabling state\n   * until the disable operation is completed and all tasks have been dealt with\n   * according to the disableTasks option; the job then moves to the disabled\n   * state. No new tasks are started under the job until it moves back to active\n   * state. If you try to disable a job that is in any state other than active,\n   * disabling, or disabled, the request fails with status code 409.\n   *\n   * @param {string} jobId The ID of the job to disable.\n   *\n   * @param {string} disableTasks What to do with active tasks associated with\n   * the job. Values are:\n   *\n   * requeue - Terminate running tasks and requeue them. The tasks will run again\n   * when the job is enabled.\n   * terminate - Terminate running tasks. The tasks will not run again.\n   * wait - Allow currently running tasks to complete. Possible values include:\n   * 'requeue', 'terminate', 'wait'\n   *\n   * @param {JobDisableOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async disableWithHttpOperationResponse(jobId: string, disableTasks: string, options?: Models.JobDisableOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobDisableOptions = (options && options.jobDisableOptions !== undefined) ? options.jobDisableOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (disableTasks) {\n        let allowedValues = [ 'requeue', 'terminate', 'wait' ];\n        if (!allowedValues.some( function(item) { return item === disableTasks; })) {\n          throw new Error(disableTasks + ' is not a valid value. The valid values are: ' + allowedValues);\n        }\n      } else {\n        throw new Error('disableTasks cannot be null or undefined.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    let jobDisableParameter: any = {};\n    try {\n      if (jobDisableOptions !== null && jobDisableOptions !== undefined)\n      {\n        timeout = jobDisableOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobDisableOptions !== null && jobDisableOptions !== undefined)\n      {\n        clientRequestId = jobDisableOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobDisableOptions !== null && jobDisableOptions !== undefined)\n      {\n        returnClientRequestId = jobDisableOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobDisableOptions !== null && jobDisableOptions !== undefined)\n      {\n        ocpDate = jobDisableOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobDisableOptions !== null && jobDisableOptions !== undefined)\n      {\n        ifMatch = jobDisableOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobDisableOptions !== null && jobDisableOptions !== undefined)\n      {\n        ifNoneMatch = jobDisableOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobDisableOptions !== null && jobDisableOptions !== undefined)\n      {\n        ifModifiedSince = jobDisableOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobDisableOptions !== null && jobDisableOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobDisableOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n      if (disableTasks !== null && disableTasks !== undefined)\n      {\n        jobDisableParameter.disableTasks = disableTasks;\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/disable';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (jobDisableParameter !== null && jobDisableParameter !== undefined) {\n        let requestModelMapper = Mappers.JobDisableParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, jobDisableParameter, 'jobDisableParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(jobDisableParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Enables the specified job, allowing new tasks to run.\n   *\n   * When you call this API, the Batch service sets a disabled job to the\n   * enabling state. After the this operation is completed, the job moves to the\n   * active state, and scheduling of new tasks under the job resumes. The Batch\n   * service does not allow a task to remain in the active state for more than 7\n   * days. Therefore, if you enable a job containing active tasks which were\n   * added more than 7 days ago, those tasks will not run.\n   *\n   * @param {string} jobId The ID of the job to enable.\n   *\n   * @param {JobEnableOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async enableWithHttpOperationResponse(jobId: string, options?: Models.JobEnableOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobEnableOptions = (options && options.jobEnableOptions !== undefined) ? options.jobEnableOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobEnableOptions !== null && jobEnableOptions !== undefined)\n      {\n        timeout = jobEnableOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobEnableOptions !== null && jobEnableOptions !== undefined)\n      {\n        clientRequestId = jobEnableOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobEnableOptions !== null && jobEnableOptions !== undefined)\n      {\n        returnClientRequestId = jobEnableOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobEnableOptions !== null && jobEnableOptions !== undefined)\n      {\n        ocpDate = jobEnableOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobEnableOptions !== null && jobEnableOptions !== undefined)\n      {\n        ifMatch = jobEnableOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobEnableOptions !== null && jobEnableOptions !== undefined)\n      {\n        ifNoneMatch = jobEnableOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobEnableOptions !== null && jobEnableOptions !== undefined)\n      {\n        ifModifiedSince = jobEnableOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobEnableOptions !== null && jobEnableOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobEnableOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/enable';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Terminates the specified job, marking it as completed.\n   *\n   * When a Terminate Job request is received, the Batch service sets the job to\n   * the terminating state. The Batch service then terminates any active or\n   * running tasks associated with the job, and runs any required Job Release\n   * tasks. The job then moves into the completed state.\n   *\n   * @param {string} jobId The ID of the job to terminate.\n   *\n   * @param {JobTerminateOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async terminateWithHttpOperationResponse(jobId: string, options?: Models.JobTerminateOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let terminateReason = (options && options.terminateReason !== undefined) ? options.terminateReason : undefined;\n    let jobTerminateOptions = (options && options.jobTerminateOptions !== undefined) ? options.jobTerminateOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (terminateReason !== null && terminateReason !== undefined && typeof terminateReason.valueOf() !== 'string') {\n        throw new Error('terminateReason must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    let jobTerminateParameter: any;\n    try {\n      if (jobTerminateOptions !== null && jobTerminateOptions !== undefined)\n      {\n        timeout = jobTerminateOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobTerminateOptions !== null && jobTerminateOptions !== undefined)\n      {\n        clientRequestId = jobTerminateOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobTerminateOptions !== null && jobTerminateOptions !== undefined)\n      {\n        returnClientRequestId = jobTerminateOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobTerminateOptions !== null && jobTerminateOptions !== undefined)\n      {\n        ocpDate = jobTerminateOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobTerminateOptions !== null && jobTerminateOptions !== undefined)\n      {\n        ifMatch = jobTerminateOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobTerminateOptions !== null && jobTerminateOptions !== undefined)\n      {\n        ifNoneMatch = jobTerminateOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobTerminateOptions !== null && jobTerminateOptions !== undefined)\n      {\n        ifModifiedSince = jobTerminateOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobTerminateOptions !== null && jobTerminateOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobTerminateOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n      if (terminateReason !== null && terminateReason !== undefined)\n      {\n        jobTerminateParameter = {};\n        jobTerminateParameter.terminateReason = terminateReason;\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/terminate';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (jobTerminateParameter !== null && jobTerminateParameter !== undefined) {\n        let requestModelMapper = Mappers.JobTerminateParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, jobTerminateParameter, 'jobTerminateParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(jobTerminateParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Adds a job to the specified account.\n   *\n   * The Batch service supports two ways to control the work done as part of a\n   * job. In the first approach, the user specifies a Job Manager task. The Batch\n   * service launches this task when it is ready to start the job. The Job\n   * Manager task controls all other tasks that run under this job, by using the\n   * Task APIs. In the second approach, the user directly controls the execution\n   * of tasks under an active job, by using the Task APIs. Also note: when naming\n   * jobs, avoid including sensitive information such as user names or secret\n   * project names. This information may appear in telemetry logs accessible to\n   * Microsoft Support engineers.\n   *\n   * @param {JobAddParameter} job The job to be added.\n   *\n   * @param {JobAddOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async addWithHttpOperationResponse(job: Models.JobAddParameter, options?: Models.JobAddOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobAddOptions = (options && options.jobAddOptions !== undefined) ? options.jobAddOptions : undefined;\n    if (job === null || job === undefined)\n    {\n      job = {} as any;\n    }\n    // Validate\n    try {\n      if (job === null || job === undefined) {\n        throw new Error('job cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobAddOptions !== null && jobAddOptions !== undefined)\n      {\n        timeout = jobAddOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobAddOptions !== null && jobAddOptions !== undefined)\n      {\n        clientRequestId = jobAddOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobAddOptions !== null && jobAddOptions !== undefined)\n      {\n        returnClientRequestId = jobAddOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobAddOptions !== null && jobAddOptions !== undefined)\n      {\n        ocpDate = jobAddOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (job !== null && job !== undefined) {\n        let requestModelMapper = Mappers.JobAddParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, job, 'job');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(job, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 201) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the jobs in the specified account.\n   *\n   * @param {JobListOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listWithHttpOperationResponse(options?: Models.JobListOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobListOptions = (options && options.jobListOptions !== undefined) ? options.jobListOptions : undefined;\n    // Validate\n    try {\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let filter: any;\n    let select: any;\n    let expand: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobListOptions !== null && jobListOptions !== undefined)\n      {\n        filter = jobListOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (jobListOptions !== null && jobListOptions !== undefined)\n      {\n        select = jobListOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (jobListOptions !== null && jobListOptions !== undefined)\n      {\n        expand = jobListOptions.expand;\n        if (expand !== null && expand !== undefined && typeof expand.valueOf() !== 'string') {\n          throw new Error('expand must be of type string.');\n        }\n      }\n      if (jobListOptions !== null && jobListOptions !== undefined)\n      {\n        maxResults = jobListOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (jobListOptions !== null && jobListOptions !== undefined)\n      {\n        timeout = jobListOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobListOptions !== null && jobListOptions !== undefined)\n      {\n        clientRequestId = jobListOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobListOptions !== null && jobListOptions !== undefined)\n      {\n        returnClientRequestId = jobListOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobListOptions !== null && jobListOptions !== undefined)\n      {\n        ocpDate = jobListOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (expand !== null && expand !== undefined) {\n      queryParamsArray.push('$expand=' + encodeURIComponent(expand));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudJobListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists the jobs that have been created under the specified job\n   * schedule.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule from which you want\n   * to get a list of jobs.\n   *\n   * @param {JobListFromJobScheduleOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listFromJobScheduleWithHttpOperationResponse(jobScheduleId: string, options?: Models.JobListFromJobScheduleOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobListFromJobScheduleOptions = (options && options.jobListFromJobScheduleOptions !== undefined) ? options.jobListFromJobScheduleOptions : undefined;\n    // Validate\n    try {\n      if (jobScheduleId === null || jobScheduleId === undefined || typeof jobScheduleId.valueOf() !== 'string') {\n        throw new Error('jobScheduleId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let filter: any;\n    let select: any;\n    let expand: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobListFromJobScheduleOptions !== null && jobListFromJobScheduleOptions !== undefined)\n      {\n        filter = jobListFromJobScheduleOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (jobListFromJobScheduleOptions !== null && jobListFromJobScheduleOptions !== undefined)\n      {\n        select = jobListFromJobScheduleOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (jobListFromJobScheduleOptions !== null && jobListFromJobScheduleOptions !== undefined)\n      {\n        expand = jobListFromJobScheduleOptions.expand;\n        if (expand !== null && expand !== undefined && typeof expand.valueOf() !== 'string') {\n          throw new Error('expand must be of type string.');\n        }\n      }\n      if (jobListFromJobScheduleOptions !== null && jobListFromJobScheduleOptions !== undefined)\n      {\n        maxResults = jobListFromJobScheduleOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (jobListFromJobScheduleOptions !== null && jobListFromJobScheduleOptions !== undefined)\n      {\n        timeout = jobListFromJobScheduleOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobListFromJobScheduleOptions !== null && jobListFromJobScheduleOptions !== undefined)\n      {\n        clientRequestId = jobListFromJobScheduleOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobListFromJobScheduleOptions !== null && jobListFromJobScheduleOptions !== undefined)\n      {\n        returnClientRequestId = jobListFromJobScheduleOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobListFromJobScheduleOptions !== null && jobListFromJobScheduleOptions !== undefined)\n      {\n        ocpDate = jobListFromJobScheduleOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobschedules/{jobScheduleId}/jobs';\n    requestUrl = requestUrl.replace('{jobScheduleId}', encodeURIComponent(jobScheduleId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (expand !== null && expand !== undefined) {\n      queryParamsArray.push('$expand=' + encodeURIComponent(expand));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudJobListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists the execution status of the Job Preparation and Job Release\n   * task for the specified job across the compute nodes where the job has run.\n   *\n   * This API returns the Job Preparation and Job Release task status on all\n   * compute nodes that have run the Job Preparation or Job Release task. This\n   * includes nodes which have since been removed from the pool. If this API is\n   * invoked on a job which has no Job Preparation or Job Release task, the Batch\n   * service returns HTTP status code 409 (Conflict) with an error code of\n   * JobPreparationTaskNotSpecified.\n   *\n   * @param {string} jobId The ID of the job.\n   *\n   * @param {JobListPreparationAndReleaseTaskStatusOptionalParams} [options]\n   * Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listPreparationAndReleaseTaskStatusWithHttpOperationResponse(jobId: string, options?: Models.JobListPreparationAndReleaseTaskStatusOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobListPreparationAndReleaseTaskStatusOptions = (options && options.jobListPreparationAndReleaseTaskStatusOptions !== undefined) ? options.jobListPreparationAndReleaseTaskStatusOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let filter: any;\n    let select: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobListPreparationAndReleaseTaskStatusOptions !== null && jobListPreparationAndReleaseTaskStatusOptions !== undefined)\n      {\n        filter = jobListPreparationAndReleaseTaskStatusOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (jobListPreparationAndReleaseTaskStatusOptions !== null && jobListPreparationAndReleaseTaskStatusOptions !== undefined)\n      {\n        select = jobListPreparationAndReleaseTaskStatusOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (jobListPreparationAndReleaseTaskStatusOptions !== null && jobListPreparationAndReleaseTaskStatusOptions !== undefined)\n      {\n        maxResults = jobListPreparationAndReleaseTaskStatusOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (jobListPreparationAndReleaseTaskStatusOptions !== null && jobListPreparationAndReleaseTaskStatusOptions !== undefined)\n      {\n        timeout = jobListPreparationAndReleaseTaskStatusOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobListPreparationAndReleaseTaskStatusOptions !== null && jobListPreparationAndReleaseTaskStatusOptions !== undefined)\n      {\n        clientRequestId = jobListPreparationAndReleaseTaskStatusOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobListPreparationAndReleaseTaskStatusOptions !== null && jobListPreparationAndReleaseTaskStatusOptions !== undefined)\n      {\n        returnClientRequestId = jobListPreparationAndReleaseTaskStatusOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobListPreparationAndReleaseTaskStatusOptions !== null && jobListPreparationAndReleaseTaskStatusOptions !== undefined)\n      {\n        ocpDate = jobListPreparationAndReleaseTaskStatusOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/jobpreparationandreleasetaskstatus';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudJobListPreparationAndReleaseTaskStatusResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Gets the task counts for the specified job.\n   *\n   * Task counts provide a count of the tasks by active, running or completed\n   * task state, and a count of tasks which succeeded or failed. Tasks in the\n   * preparing state are counted as running. If the validationStatus is\n   * unvalidated, then the Batch service has not been able to check state counts\n   * against the task states as reported in the List Tasks API. The\n   * validationStatus may be unvalidated if the job contains more than 200,000\n   * tasks.\n   *\n   * @param {string} jobId The ID of the job.\n   *\n   * @param {JobGetTaskCountsOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getTaskCountsWithHttpOperationResponse(jobId: string, options?: Models.JobGetTaskCountsOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobGetTaskCountsOptions = (options && options.jobGetTaskCountsOptions !== undefined) ? options.jobGetTaskCountsOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobGetTaskCountsOptions !== null && jobGetTaskCountsOptions !== undefined)\n      {\n        timeout = jobGetTaskCountsOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobGetTaskCountsOptions !== null && jobGetTaskCountsOptions !== undefined)\n      {\n        clientRequestId = jobGetTaskCountsOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobGetTaskCountsOptions !== null && jobGetTaskCountsOptions !== undefined)\n      {\n        returnClientRequestId = jobGetTaskCountsOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobGetTaskCountsOptions !== null && jobGetTaskCountsOptions !== undefined)\n      {\n        ocpDate = jobGetTaskCountsOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/taskcounts';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.TaskCounts;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the jobs in the specified account.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {JobListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listNextWithHttpOperationResponse(nextPageLink: string, options?: Models.JobListNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobListNextOptions = (options && options.jobListNextOptions !== undefined) ? options.jobListNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobListNextOptions !== null && jobListNextOptions !== undefined)\n      {\n        clientRequestId = jobListNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobListNextOptions !== null && jobListNextOptions !== undefined)\n      {\n        returnClientRequestId = jobListNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobListNextOptions !== null && jobListNextOptions !== undefined)\n      {\n        ocpDate = jobListNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudJobListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists the jobs that have been created under the specified job\n   * schedule.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {JobListFromJobScheduleNextOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listFromJobScheduleNextWithHttpOperationResponse(nextPageLink: string, options?: Models.JobListFromJobScheduleNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobListFromJobScheduleNextOptions = (options && options.jobListFromJobScheduleNextOptions !== undefined) ? options.jobListFromJobScheduleNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobListFromJobScheduleNextOptions !== null && jobListFromJobScheduleNextOptions !== undefined)\n      {\n        clientRequestId = jobListFromJobScheduleNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobListFromJobScheduleNextOptions !== null && jobListFromJobScheduleNextOptions !== undefined)\n      {\n        returnClientRequestId = jobListFromJobScheduleNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobListFromJobScheduleNextOptions !== null && jobListFromJobScheduleNextOptions !== undefined)\n      {\n        ocpDate = jobListFromJobScheduleNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudJobListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists the execution status of the Job Preparation and Job Release\n   * task for the specified job across the compute nodes where the job has run.\n   *\n   * This API returns the Job Preparation and Job Release task status on all\n   * compute nodes that have run the Job Preparation or Job Release task. This\n   * includes nodes which have since been removed from the pool. If this API is\n   * invoked on a job which has no Job Preparation or Job Release task, the Batch\n   * service returns HTTP status code 409 (Conflict) with an error code of\n   * JobPreparationTaskNotSpecified.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {JobListPreparationAndReleaseTaskStatusNextOptionalParams} [options]\n   * Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listPreparationAndReleaseTaskStatusNextWithHttpOperationResponse(nextPageLink: string, options?: Models.JobListPreparationAndReleaseTaskStatusNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobListPreparationAndReleaseTaskStatusNextOptions = (options && options.jobListPreparationAndReleaseTaskStatusNextOptions !== undefined) ? options.jobListPreparationAndReleaseTaskStatusNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobListPreparationAndReleaseTaskStatusNextOptions !== null && jobListPreparationAndReleaseTaskStatusNextOptions !== undefined)\n      {\n        clientRequestId = jobListPreparationAndReleaseTaskStatusNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobListPreparationAndReleaseTaskStatusNextOptions !== null && jobListPreparationAndReleaseTaskStatusNextOptions !== undefined)\n      {\n        returnClientRequestId = jobListPreparationAndReleaseTaskStatusNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobListPreparationAndReleaseTaskStatusNextOptions !== null && jobListPreparationAndReleaseTaskStatusNextOptions !== undefined)\n      {\n        ocpDate = jobListPreparationAndReleaseTaskStatusNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudJobListPreparationAndReleaseTaskStatusResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Gets lifetime summary statistics for all of the jobs in the\n   * specified account.\n   *\n   * Statistics are aggregated across all jobs that have ever existed in the\n   * account, from account creation to the last update time of the statistics.\n   *\n   * @param {JobGetAllLifetimeStatisticsOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.JobStatistics} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.JobStatistics} for more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  getAllLifetimeStatistics(): Promise<Models.JobStatistics>;\n  getAllLifetimeStatistics(options: Models.JobGetAllLifetimeStatisticsOptionalParams): Promise<Models.JobStatistics>;\n  getAllLifetimeStatistics(callback: msRest.ServiceCallback<Models.JobStatistics>): void;\n  getAllLifetimeStatistics(options: Models.JobGetAllLifetimeStatisticsOptionalParams, callback: msRest.ServiceCallback<Models.JobStatistics>): void;\n  getAllLifetimeStatistics(options?: Models.JobGetAllLifetimeStatisticsOptionalParams, callback?: msRest.ServiceCallback<Models.JobStatistics>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.JobStatistics>;\n    if (!callback) {\n      return this.getAllLifetimeStatisticsWithHttpOperationResponse(options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.JobStatistics);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getAllLifetimeStatisticsWithHttpOperationResponse(options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.JobStatistics;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Deletes a job.\n   *\n   * Deleting a job also deletes all tasks that are part of that job, and all job\n   * statistics. This also overrides the retention period for task data; that is,\n   * if the job contains tasks which are still retained on compute nodes, the\n   * Batch services deletes those tasks' working directories and all their\n   * contents.  When a Delete Job request is received, the Batch service sets the\n   * job to the deleting state. All update operations on a job that is in\n   * deleting state will fail with status code 409 (Conflict), with additional\n   * information indicating that the job is being deleted.\n   *\n   * @param {string} jobId The ID of the job to delete.\n   *\n   * @param {JobDeleteMethodOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  deleteMethod(jobId: string): Promise<void>;\n  deleteMethod(jobId: string, options: Models.JobDeleteMethodOptionalParams): Promise<void>;\n  deleteMethod(jobId: string, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(jobId: string, options: Models.JobDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(jobId: string, options?: Models.JobDeleteMethodOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.deleteMethodWithHttpOperationResponse(jobId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.deleteMethodWithHttpOperationResponse(jobId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Gets information about the specified job.\n   *\n   * @param {string} jobId The ID of the job.\n   *\n   * @param {JobGetOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudJob} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudJob} for more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  get(jobId: string): Promise<Models.CloudJob>;\n  get(jobId: string, options: Models.JobGetOptionalParams): Promise<Models.CloudJob>;\n  get(jobId: string, callback: msRest.ServiceCallback<Models.CloudJob>): void;\n  get(jobId: string, options: Models.JobGetOptionalParams, callback: msRest.ServiceCallback<Models.CloudJob>): void;\n  get(jobId: string, options?: Models.JobGetOptionalParams, callback?: msRest.ServiceCallback<Models.CloudJob>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudJob>;\n    if (!callback) {\n      return this.getWithHttpOperationResponse(jobId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudJob);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getWithHttpOperationResponse(jobId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudJob;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Updates the properties of the specified job.\n   *\n   * This replaces only the job properties specified in the request. For example,\n   * if the job has constraints, and a request does not specify the constraints\n   * element, then the job keeps the existing constraints.\n   *\n   * @param {string} jobId The ID of the job whose properties you want to update.\n   *\n   * @param {JobPatchParameter} jobPatchParameter The parameters for the request.\n   *\n   * @param {JobPatchOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  patch(jobId: string, jobPatchParameter: Models.JobPatchParameter): Promise<void>;\n  patch(jobId: string, jobPatchParameter: Models.JobPatchParameter, options: Models.JobPatchOptionalParams): Promise<void>;\n  patch(jobId: string, jobPatchParameter: Models.JobPatchParameter, callback: msRest.ServiceCallback<void>): void;\n  patch(jobId: string, jobPatchParameter: Models.JobPatchParameter, options: Models.JobPatchOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  patch(jobId: string, jobPatchParameter: Models.JobPatchParameter, options?: Models.JobPatchOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.patchWithHttpOperationResponse(jobId, jobPatchParameter, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.patchWithHttpOperationResponse(jobId, jobPatchParameter, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Updates the properties of the specified job.\n   *\n   * This fully replaces all the updateable properties of the job. For example,\n   * if the job has constraints associated with it and if constraints is not\n   * specified with this request, then the Batch service will remove the existing\n   * constraints.\n   *\n   * @param {string} jobId The ID of the job whose properties you want to update.\n   *\n   * @param {JobUpdateParameter} jobUpdateParameter The parameters for the\n   * request.\n   *\n   * @param {JobUpdateOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  update(jobId: string, jobUpdateParameter: Models.JobUpdateParameter): Promise<void>;\n  update(jobId: string, jobUpdateParameter: Models.JobUpdateParameter, options: Models.JobUpdateOptionalParams): Promise<void>;\n  update(jobId: string, jobUpdateParameter: Models.JobUpdateParameter, callback: msRest.ServiceCallback<void>): void;\n  update(jobId: string, jobUpdateParameter: Models.JobUpdateParameter, options: Models.JobUpdateOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  update(jobId: string, jobUpdateParameter: Models.JobUpdateParameter, options?: Models.JobUpdateOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.updateWithHttpOperationResponse(jobId, jobUpdateParameter, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.updateWithHttpOperationResponse(jobId, jobUpdateParameter, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Disables the specified job, preventing new tasks from running.\n   *\n   * The Batch Service immediately moves the job to the disabling state. Batch\n   * then uses the disableTasks parameter to determine what to do with the\n   * currently running tasks of the job. The job remains in the disabling state\n   * until the disable operation is completed and all tasks have been dealt with\n   * according to the disableTasks option; the job then moves to the disabled\n   * state. No new tasks are started under the job until it moves back to active\n   * state. If you try to disable a job that is in any state other than active,\n   * disabling, or disabled, the request fails with status code 409.\n   *\n   * @param {string} jobId The ID of the job to disable.\n   *\n   * @param {string} disableTasks What to do with active tasks associated with\n   * the job. Values are:\n   *\n   * requeue - Terminate running tasks and requeue them. The tasks will run again\n   * when the job is enabled.\n   * terminate - Terminate running tasks. The tasks will not run again.\n   * wait - Allow currently running tasks to complete. Possible values include:\n   * 'requeue', 'terminate', 'wait'\n   *\n   * @param {JobDisableOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  disable(jobId: string, disableTasks: string): Promise<void>;\n  disable(jobId: string, disableTasks: string, options: Models.JobDisableOptionalParams): Promise<void>;\n  disable(jobId: string, disableTasks: string, callback: msRest.ServiceCallback<void>): void;\n  disable(jobId: string, disableTasks: string, options: Models.JobDisableOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  disable(jobId: string, disableTasks: string, options?: Models.JobDisableOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.disableWithHttpOperationResponse(jobId, disableTasks, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.disableWithHttpOperationResponse(jobId, disableTasks, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Enables the specified job, allowing new tasks to run.\n   *\n   * When you call this API, the Batch service sets a disabled job to the\n   * enabling state. After the this operation is completed, the job moves to the\n   * active state, and scheduling of new tasks under the job resumes. The Batch\n   * service does not allow a task to remain in the active state for more than 7\n   * days. Therefore, if you enable a job containing active tasks which were\n   * added more than 7 days ago, those tasks will not run.\n   *\n   * @param {string} jobId The ID of the job to enable.\n   *\n   * @param {JobEnableOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  enable(jobId: string): Promise<void>;\n  enable(jobId: string, options: Models.JobEnableOptionalParams): Promise<void>;\n  enable(jobId: string, callback: msRest.ServiceCallback<void>): void;\n  enable(jobId: string, options: Models.JobEnableOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  enable(jobId: string, options?: Models.JobEnableOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.enableWithHttpOperationResponse(jobId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.enableWithHttpOperationResponse(jobId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Terminates the specified job, marking it as completed.\n   *\n   * When a Terminate Job request is received, the Batch service sets the job to\n   * the terminating state. The Batch service then terminates any active or\n   * running tasks associated with the job, and runs any required Job Release\n   * tasks. The job then moves into the completed state.\n   *\n   * @param {string} jobId The ID of the job to terminate.\n   *\n   * @param {JobTerminateOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  terminate(jobId: string): Promise<void>;\n  terminate(jobId: string, options: Models.JobTerminateOptionalParams): Promise<void>;\n  terminate(jobId: string, callback: msRest.ServiceCallback<void>): void;\n  terminate(jobId: string, options: Models.JobTerminateOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  terminate(jobId: string, options?: Models.JobTerminateOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.terminateWithHttpOperationResponse(jobId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.terminateWithHttpOperationResponse(jobId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Adds a job to the specified account.\n   *\n   * The Batch service supports two ways to control the work done as part of a\n   * job. In the first approach, the user specifies a Job Manager task. The Batch\n   * service launches this task when it is ready to start the job. The Job\n   * Manager task controls all other tasks that run under this job, by using the\n   * Task APIs. In the second approach, the user directly controls the execution\n   * of tasks under an active job, by using the Task APIs. Also note: when naming\n   * jobs, avoid including sensitive information such as user names or secret\n   * project names. This information may appear in telemetry logs accessible to\n   * Microsoft Support engineers.\n   *\n   * @param {JobAddParameter} job The job to be added.\n   *\n   * @param {JobAddOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  add(job: Models.JobAddParameter): Promise<void>;\n  add(job: Models.JobAddParameter, options: Models.JobAddOptionalParams): Promise<void>;\n  add(job: Models.JobAddParameter, callback: msRest.ServiceCallback<void>): void;\n  add(job: Models.JobAddParameter, options: Models.JobAddOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  add(job: Models.JobAddParameter, options?: Models.JobAddOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.addWithHttpOperationResponse(job, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.addWithHttpOperationResponse(job, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the jobs in the specified account.\n   *\n   * @param {JobListOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudJobListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudJobListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  list(): Promise<Models.CloudJobListResult>;\n  list(options: Models.JobListOptionalParams): Promise<Models.CloudJobListResult>;\n  list(callback: msRest.ServiceCallback<Models.CloudJobListResult>): void;\n  list(options: Models.JobListOptionalParams, callback: msRest.ServiceCallback<Models.CloudJobListResult>): void;\n  list(options?: Models.JobListOptionalParams, callback?: msRest.ServiceCallback<Models.CloudJobListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudJobListResult>;\n    if (!callback) {\n      return this.listWithHttpOperationResponse(options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudJobListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listWithHttpOperationResponse(options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudJobListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists the jobs that have been created under the specified job\n   * schedule.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule from which you want\n   * to get a list of jobs.\n   *\n   * @param {JobListFromJobScheduleOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudJobListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudJobListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listFromJobSchedule(jobScheduleId: string): Promise<Models.CloudJobListResult>;\n  listFromJobSchedule(jobScheduleId: string, options: Models.JobListFromJobScheduleOptionalParams): Promise<Models.CloudJobListResult>;\n  listFromJobSchedule(jobScheduleId: string, callback: msRest.ServiceCallback<Models.CloudJobListResult>): void;\n  listFromJobSchedule(jobScheduleId: string, options: Models.JobListFromJobScheduleOptionalParams, callback: msRest.ServiceCallback<Models.CloudJobListResult>): void;\n  listFromJobSchedule(jobScheduleId: string, options?: Models.JobListFromJobScheduleOptionalParams, callback?: msRest.ServiceCallback<Models.CloudJobListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudJobListResult>;\n    if (!callback) {\n      return this.listFromJobScheduleWithHttpOperationResponse(jobScheduleId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudJobListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listFromJobScheduleWithHttpOperationResponse(jobScheduleId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudJobListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists the execution status of the Job Preparation and Job Release\n   * task for the specified job across the compute nodes where the job has run.\n   *\n   * This API returns the Job Preparation and Job Release task status on all\n   * compute nodes that have run the Job Preparation or Job Release task. This\n   * includes nodes which have since been removed from the pool. If this API is\n   * invoked on a job which has no Job Preparation or Job Release task, the Batch\n   * service returns HTTP status code 409 (Conflict) with an error code of\n   * JobPreparationTaskNotSpecified.\n   *\n   * @param {string} jobId The ID of the job.\n   *\n   * @param {JobListPreparationAndReleaseTaskStatusOptionalParams} [options]\n   * Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudJobListPreparationAndReleaseTaskStatusResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link\n   *                      Models.CloudJobListPreparationAndReleaseTaskStatusResult}\n   *                      for more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listPreparationAndReleaseTaskStatus(jobId: string): Promise<Models.CloudJobListPreparationAndReleaseTaskStatusResult>;\n  listPreparationAndReleaseTaskStatus(jobId: string, options: Models.JobListPreparationAndReleaseTaskStatusOptionalParams): Promise<Models.CloudJobListPreparationAndReleaseTaskStatusResult>;\n  listPreparationAndReleaseTaskStatus(jobId: string, callback: msRest.ServiceCallback<Models.CloudJobListPreparationAndReleaseTaskStatusResult>): void;\n  listPreparationAndReleaseTaskStatus(jobId: string, options: Models.JobListPreparationAndReleaseTaskStatusOptionalParams, callback: msRest.ServiceCallback<Models.CloudJobListPreparationAndReleaseTaskStatusResult>): void;\n  listPreparationAndReleaseTaskStatus(jobId: string, options?: Models.JobListPreparationAndReleaseTaskStatusOptionalParams, callback?: msRest.ServiceCallback<Models.CloudJobListPreparationAndReleaseTaskStatusResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudJobListPreparationAndReleaseTaskStatusResult>;\n    if (!callback) {\n      return this.listPreparationAndReleaseTaskStatusWithHttpOperationResponse(jobId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudJobListPreparationAndReleaseTaskStatusResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listPreparationAndReleaseTaskStatusWithHttpOperationResponse(jobId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudJobListPreparationAndReleaseTaskStatusResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Gets the task counts for the specified job.\n   *\n   * Task counts provide a count of the tasks by active, running or completed\n   * task state, and a count of tasks which succeeded or failed. Tasks in the\n   * preparing state are counted as running. If the validationStatus is\n   * unvalidated, then the Batch service has not been able to check state counts\n   * against the task states as reported in the List Tasks API. The\n   * validationStatus may be unvalidated if the job contains more than 200,000\n   * tasks.\n   *\n   * @param {string} jobId The ID of the job.\n   *\n   * @param {JobGetTaskCountsOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.TaskCounts} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.TaskCounts} for more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  getTaskCounts(jobId: string): Promise<Models.TaskCounts>;\n  getTaskCounts(jobId: string, options: Models.JobGetTaskCountsOptionalParams): Promise<Models.TaskCounts>;\n  getTaskCounts(jobId: string, callback: msRest.ServiceCallback<Models.TaskCounts>): void;\n  getTaskCounts(jobId: string, options: Models.JobGetTaskCountsOptionalParams, callback: msRest.ServiceCallback<Models.TaskCounts>): void;\n  getTaskCounts(jobId: string, options?: Models.JobGetTaskCountsOptionalParams, callback?: msRest.ServiceCallback<Models.TaskCounts>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.TaskCounts>;\n    if (!callback) {\n      return this.getTaskCountsWithHttpOperationResponse(jobId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.TaskCounts);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getTaskCountsWithHttpOperationResponse(jobId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.TaskCounts;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the jobs in the specified account.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {JobListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudJobListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudJobListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listNext(nextPageLink: string): Promise<Models.CloudJobListResult>;\n  listNext(nextPageLink: string, options: Models.JobListNextOptionalParams): Promise<Models.CloudJobListResult>;\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CloudJobListResult>): void;\n  listNext(nextPageLink: string, options: Models.JobListNextOptionalParams, callback: msRest.ServiceCallback<Models.CloudJobListResult>): void;\n  listNext(nextPageLink: string, options?: Models.JobListNextOptionalParams, callback?: msRest.ServiceCallback<Models.CloudJobListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudJobListResult>;\n    if (!callback) {\n      return this.listNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudJobListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudJobListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists the jobs that have been created under the specified job\n   * schedule.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {JobListFromJobScheduleNextOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudJobListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudJobListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listFromJobScheduleNext(nextPageLink: string): Promise<Models.CloudJobListResult>;\n  listFromJobScheduleNext(nextPageLink: string, options: Models.JobListFromJobScheduleNextOptionalParams): Promise<Models.CloudJobListResult>;\n  listFromJobScheduleNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CloudJobListResult>): void;\n  listFromJobScheduleNext(nextPageLink: string, options: Models.JobListFromJobScheduleNextOptionalParams, callback: msRest.ServiceCallback<Models.CloudJobListResult>): void;\n  listFromJobScheduleNext(nextPageLink: string, options?: Models.JobListFromJobScheduleNextOptionalParams, callback?: msRest.ServiceCallback<Models.CloudJobListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudJobListResult>;\n    if (!callback) {\n      return this.listFromJobScheduleNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudJobListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listFromJobScheduleNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudJobListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists the execution status of the Job Preparation and Job Release\n   * task for the specified job across the compute nodes where the job has run.\n   *\n   * This API returns the Job Preparation and Job Release task status on all\n   * compute nodes that have run the Job Preparation or Job Release task. This\n   * includes nodes which have since been removed from the pool. If this API is\n   * invoked on a job which has no Job Preparation or Job Release task, the Batch\n   * service returns HTTP status code 409 (Conflict) with an error code of\n   * JobPreparationTaskNotSpecified.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {JobListPreparationAndReleaseTaskStatusNextOptionalParams} [options]\n   * Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudJobListPreparationAndReleaseTaskStatusResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link\n   *                      Models.CloudJobListPreparationAndReleaseTaskStatusResult}\n   *                      for more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listPreparationAndReleaseTaskStatusNext(nextPageLink: string): Promise<Models.CloudJobListPreparationAndReleaseTaskStatusResult>;\n  listPreparationAndReleaseTaskStatusNext(nextPageLink: string, options: Models.JobListPreparationAndReleaseTaskStatusNextOptionalParams): Promise<Models.CloudJobListPreparationAndReleaseTaskStatusResult>;\n  listPreparationAndReleaseTaskStatusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CloudJobListPreparationAndReleaseTaskStatusResult>): void;\n  listPreparationAndReleaseTaskStatusNext(nextPageLink: string, options: Models.JobListPreparationAndReleaseTaskStatusNextOptionalParams, callback: msRest.ServiceCallback<Models.CloudJobListPreparationAndReleaseTaskStatusResult>): void;\n  listPreparationAndReleaseTaskStatusNext(nextPageLink: string, options?: Models.JobListPreparationAndReleaseTaskStatusNextOptionalParams, callback?: msRest.ServiceCallback<Models.CloudJobListPreparationAndReleaseTaskStatusResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudJobListPreparationAndReleaseTaskStatusResult>;\n    if (!callback) {\n      return this.listPreparationAndReleaseTaskStatusNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudJobListPreparationAndReleaseTaskStatusResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listPreparationAndReleaseTaskStatusNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudJobListPreparationAndReleaseTaskStatusResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/operations/job.ts","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/mappers\";\nimport { BatchServiceClient } from \"../batchServiceClient\";\n\nconst WebResource = msRest.WebResource;\n\n/** Class representing a CertificateOperations. */\nexport class CertificateOperations {\n  private readonly client: BatchServiceClient;\n  /**\n   * Create a CertificateOperations.\n   * @param {BatchServiceClient} client Reference to the service client.\n   */\n  constructor(client: BatchServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Adds a certificate to the specified account.\n   *\n   * @param {CertificateAddParameter} certificate The certificate to be added.\n   *\n   * @param {CertificateAddOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async addWithHttpOperationResponse(certificate: Models.CertificateAddParameter, options?: Models.CertificateAddOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let certificateAddOptions = (options && options.certificateAddOptions !== undefined) ? options.certificateAddOptions : undefined;\n    // Validate\n    try {\n      if (certificate === null || certificate === undefined) {\n        throw new Error('certificate cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (certificateAddOptions !== null && certificateAddOptions !== undefined)\n      {\n        timeout = certificateAddOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (certificateAddOptions !== null && certificateAddOptions !== undefined)\n      {\n        clientRequestId = certificateAddOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (certificateAddOptions !== null && certificateAddOptions !== undefined)\n      {\n        returnClientRequestId = certificateAddOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (certificateAddOptions !== null && certificateAddOptions !== undefined)\n      {\n        ocpDate = certificateAddOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'certificates';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (certificate !== null && certificate !== undefined) {\n        let requestModelMapper = Mappers.CertificateAddParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, certificate, 'certificate');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(certificate, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 201) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the certificates that have been added to the specified\n   * account.\n   *\n   * @param {CertificateListOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listWithHttpOperationResponse(options?: Models.CertificateListOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let certificateListOptions = (options && options.certificateListOptions !== undefined) ? options.certificateListOptions : undefined;\n    // Validate\n    try {\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let filter: any;\n    let select: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (certificateListOptions !== null && certificateListOptions !== undefined)\n      {\n        filter = certificateListOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (certificateListOptions !== null && certificateListOptions !== undefined)\n      {\n        select = certificateListOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (certificateListOptions !== null && certificateListOptions !== undefined)\n      {\n        maxResults = certificateListOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (certificateListOptions !== null && certificateListOptions !== undefined)\n      {\n        timeout = certificateListOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (certificateListOptions !== null && certificateListOptions !== undefined)\n      {\n        clientRequestId = certificateListOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (certificateListOptions !== null && certificateListOptions !== undefined)\n      {\n        returnClientRequestId = certificateListOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (certificateListOptions !== null && certificateListOptions !== undefined)\n      {\n        ocpDate = certificateListOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'certificates';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CertificateListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Cancels a failed deletion of a certificate from the specified\n   * account.\n   *\n   * If you try to delete a certificate that is being used by a pool or compute\n   * node, the status of the certificate changes to deleteFailed. If you decide\n   * that you want to continue using the certificate, you can use this operation\n   * to set the status of the certificate back to active. If you intend to delete\n   * the certificate, you do not need to run this operation after the deletion\n   * failed. You must make sure that the certificate is not being used by any\n   * resources, and then you can try again to delete the certificate.\n   *\n   * @param {string} thumbprintAlgorithm The algorithm used to derive the\n   * thumbprint parameter. This must be sha1.\n   *\n   * @param {string} thumbprint The thumbprint of the certificate being deleted.\n   *\n   * @param {CertificateCancelDeletionOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async cancelDeletionWithHttpOperationResponse(thumbprintAlgorithm: string, thumbprint: string, options?: Models.CertificateCancelDeletionOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let certificateCancelDeletionOptions = (options && options.certificateCancelDeletionOptions !== undefined) ? options.certificateCancelDeletionOptions : undefined;\n    // Validate\n    try {\n      if (thumbprintAlgorithm === null || thumbprintAlgorithm === undefined || typeof thumbprintAlgorithm.valueOf() !== 'string') {\n        throw new Error('thumbprintAlgorithm cannot be null or undefined and it must be of type string.');\n      }\n      if (thumbprint === null || thumbprint === undefined || typeof thumbprint.valueOf() !== 'string') {\n        throw new Error('thumbprint cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (certificateCancelDeletionOptions !== null && certificateCancelDeletionOptions !== undefined)\n      {\n        timeout = certificateCancelDeletionOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (certificateCancelDeletionOptions !== null && certificateCancelDeletionOptions !== undefined)\n      {\n        clientRequestId = certificateCancelDeletionOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (certificateCancelDeletionOptions !== null && certificateCancelDeletionOptions !== undefined)\n      {\n        returnClientRequestId = certificateCancelDeletionOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (certificateCancelDeletionOptions !== null && certificateCancelDeletionOptions !== undefined)\n      {\n        ocpDate = certificateCancelDeletionOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete';\n    requestUrl = requestUrl.replace('{thumbprintAlgorithm}', encodeURIComponent(thumbprintAlgorithm));\n    requestUrl = requestUrl.replace('{thumbprint}', encodeURIComponent(thumbprint));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 204) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Deletes a certificate from the specified account.\n   *\n   * You cannot delete a certificate if a resource (pool or compute node) is\n   * using it. Before you can delete a certificate, you must therefore make sure\n   * that the certificate is not associated with any existing pools, the\n   * certificate is not installed on any compute nodes (even if you remove a\n   * certificate from a pool, it is not removed from existing compute nodes in\n   * that pool until they restart), and no running tasks depend on the\n   * certificate. If you try to delete a certificate that is in use, the deletion\n   * fails. The certificate status changes to deleteFailed. You can use Cancel\n   * Delete Certificate to set the status back to active if you decide that you\n   * want to continue using the certificate.\n   *\n   * @param {string} thumbprintAlgorithm The algorithm used to derive the\n   * thumbprint parameter. This must be sha1.\n   *\n   * @param {string} thumbprint The thumbprint of the certificate to be deleted.\n   *\n   * @param {CertificateDeleteMethodOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async deleteMethodWithHttpOperationResponse(thumbprintAlgorithm: string, thumbprint: string, options?: Models.CertificateDeleteMethodOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let certificateDeleteMethodOptions = (options && options.certificateDeleteMethodOptions !== undefined) ? options.certificateDeleteMethodOptions : undefined;\n    // Validate\n    try {\n      if (thumbprintAlgorithm === null || thumbprintAlgorithm === undefined || typeof thumbprintAlgorithm.valueOf() !== 'string') {\n        throw new Error('thumbprintAlgorithm cannot be null or undefined and it must be of type string.');\n      }\n      if (thumbprint === null || thumbprint === undefined || typeof thumbprint.valueOf() !== 'string') {\n        throw new Error('thumbprint cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (certificateDeleteMethodOptions !== null && certificateDeleteMethodOptions !== undefined)\n      {\n        timeout = certificateDeleteMethodOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (certificateDeleteMethodOptions !== null && certificateDeleteMethodOptions !== undefined)\n      {\n        clientRequestId = certificateDeleteMethodOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (certificateDeleteMethodOptions !== null && certificateDeleteMethodOptions !== undefined)\n      {\n        returnClientRequestId = certificateDeleteMethodOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (certificateDeleteMethodOptions !== null && certificateDeleteMethodOptions !== undefined)\n      {\n        ocpDate = certificateDeleteMethodOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})';\n    requestUrl = requestUrl.replace('{thumbprintAlgorithm}', encodeURIComponent(thumbprintAlgorithm));\n    requestUrl = requestUrl.replace('{thumbprint}', encodeURIComponent(thumbprint));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'DELETE';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * Gets information about the specified certificate.\n   *\n   * @param {string} thumbprintAlgorithm The algorithm used to derive the\n   * thumbprint parameter. This must be sha1.\n   *\n   * @param {string} thumbprint The thumbprint of the certificate to get.\n   *\n   * @param {CertificateGetOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getWithHttpOperationResponse(thumbprintAlgorithm: string, thumbprint: string, options?: Models.CertificateGetOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let certificateGetOptions = (options && options.certificateGetOptions !== undefined) ? options.certificateGetOptions : undefined;\n    // Validate\n    try {\n      if (thumbprintAlgorithm === null || thumbprintAlgorithm === undefined || typeof thumbprintAlgorithm.valueOf() !== 'string') {\n        throw new Error('thumbprintAlgorithm cannot be null or undefined and it must be of type string.');\n      }\n      if (thumbprint === null || thumbprint === undefined || typeof thumbprint.valueOf() !== 'string') {\n        throw new Error('thumbprint cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let select: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (certificateGetOptions !== null && certificateGetOptions !== undefined)\n      {\n        select = certificateGetOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (certificateGetOptions !== null && certificateGetOptions !== undefined)\n      {\n        timeout = certificateGetOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (certificateGetOptions !== null && certificateGetOptions !== undefined)\n      {\n        clientRequestId = certificateGetOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (certificateGetOptions !== null && certificateGetOptions !== undefined)\n      {\n        returnClientRequestId = certificateGetOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (certificateGetOptions !== null && certificateGetOptions !== undefined)\n      {\n        ocpDate = certificateGetOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})';\n    requestUrl = requestUrl.replace('{thumbprintAlgorithm}', encodeURIComponent(thumbprintAlgorithm));\n    requestUrl = requestUrl.replace('{thumbprint}', encodeURIComponent(thumbprint));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.Certificate;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the certificates that have been added to the specified\n   * account.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {CertificateListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listNextWithHttpOperationResponse(nextPageLink: string, options?: Models.CertificateListNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let certificateListNextOptions = (options && options.certificateListNextOptions !== undefined) ? options.certificateListNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (certificateListNextOptions !== null && certificateListNextOptions !== undefined)\n      {\n        clientRequestId = certificateListNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (certificateListNextOptions !== null && certificateListNextOptions !== undefined)\n      {\n        returnClientRequestId = certificateListNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (certificateListNextOptions !== null && certificateListNextOptions !== undefined)\n      {\n        ocpDate = certificateListNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CertificateListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Adds a certificate to the specified account.\n   *\n   * @param {CertificateAddParameter} certificate The certificate to be added.\n   *\n   * @param {CertificateAddOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  add(certificate: Models.CertificateAddParameter): Promise<void>;\n  add(certificate: Models.CertificateAddParameter, options: Models.CertificateAddOptionalParams): Promise<void>;\n  add(certificate: Models.CertificateAddParameter, callback: msRest.ServiceCallback<void>): void;\n  add(certificate: Models.CertificateAddParameter, options: Models.CertificateAddOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  add(certificate: Models.CertificateAddParameter, options?: Models.CertificateAddOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.addWithHttpOperationResponse(certificate, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.addWithHttpOperationResponse(certificate, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the certificates that have been added to the specified\n   * account.\n   *\n   * @param {CertificateListOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CertificateListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CertificateListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  list(): Promise<Models.CertificateListResult>;\n  list(options: Models.CertificateListOptionalParams): Promise<Models.CertificateListResult>;\n  list(callback: msRest.ServiceCallback<Models.CertificateListResult>): void;\n  list(options: Models.CertificateListOptionalParams, callback: msRest.ServiceCallback<Models.CertificateListResult>): void;\n  list(options?: Models.CertificateListOptionalParams, callback?: msRest.ServiceCallback<Models.CertificateListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CertificateListResult>;\n    if (!callback) {\n      return this.listWithHttpOperationResponse(options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CertificateListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listWithHttpOperationResponse(options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CertificateListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Cancels a failed deletion of a certificate from the specified\n   * account.\n   *\n   * If you try to delete a certificate that is being used by a pool or compute\n   * node, the status of the certificate changes to deleteFailed. If you decide\n   * that you want to continue using the certificate, you can use this operation\n   * to set the status of the certificate back to active. If you intend to delete\n   * the certificate, you do not need to run this operation after the deletion\n   * failed. You must make sure that the certificate is not being used by any\n   * resources, and then you can try again to delete the certificate.\n   *\n   * @param {string} thumbprintAlgorithm The algorithm used to derive the\n   * thumbprint parameter. This must be sha1.\n   *\n   * @param {string} thumbprint The thumbprint of the certificate being deleted.\n   *\n   * @param {CertificateCancelDeletionOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  cancelDeletion(thumbprintAlgorithm: string, thumbprint: string): Promise<void>;\n  cancelDeletion(thumbprintAlgorithm: string, thumbprint: string, options: Models.CertificateCancelDeletionOptionalParams): Promise<void>;\n  cancelDeletion(thumbprintAlgorithm: string, thumbprint: string, callback: msRest.ServiceCallback<void>): void;\n  cancelDeletion(thumbprintAlgorithm: string, thumbprint: string, options: Models.CertificateCancelDeletionOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  cancelDeletion(thumbprintAlgorithm: string, thumbprint: string, options?: Models.CertificateCancelDeletionOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.cancelDeletionWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.cancelDeletionWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Deletes a certificate from the specified account.\n   *\n   * You cannot delete a certificate if a resource (pool or compute node) is\n   * using it. Before you can delete a certificate, you must therefore make sure\n   * that the certificate is not associated with any existing pools, the\n   * certificate is not installed on any compute nodes (even if you remove a\n   * certificate from a pool, it is not removed from existing compute nodes in\n   * that pool until they restart), and no running tasks depend on the\n   * certificate. If you try to delete a certificate that is in use, the deletion\n   * fails. The certificate status changes to deleteFailed. You can use Cancel\n   * Delete Certificate to set the status back to active if you decide that you\n   * want to continue using the certificate.\n   *\n   * @param {string} thumbprintAlgorithm The algorithm used to derive the\n   * thumbprint parameter. This must be sha1.\n   *\n   * @param {string} thumbprint The thumbprint of the certificate to be deleted.\n   *\n   * @param {CertificateDeleteMethodOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  deleteMethod(thumbprintAlgorithm: string, thumbprint: string): Promise<void>;\n  deleteMethod(thumbprintAlgorithm: string, thumbprint: string, options: Models.CertificateDeleteMethodOptionalParams): Promise<void>;\n  deleteMethod(thumbprintAlgorithm: string, thumbprint: string, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(thumbprintAlgorithm: string, thumbprint: string, options: Models.CertificateDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(thumbprintAlgorithm: string, thumbprint: string, options?: Models.CertificateDeleteMethodOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.deleteMethodWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.deleteMethodWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * Gets information about the specified certificate.\n   *\n   * @param {string} thumbprintAlgorithm The algorithm used to derive the\n   * thumbprint parameter. This must be sha1.\n   *\n   * @param {string} thumbprint The thumbprint of the certificate to get.\n   *\n   * @param {CertificateGetOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.Certificate} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.Certificate} for more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  get(thumbprintAlgorithm: string, thumbprint: string): Promise<Models.Certificate>;\n  get(thumbprintAlgorithm: string, thumbprint: string, options: Models.CertificateGetOptionalParams): Promise<Models.Certificate>;\n  get(thumbprintAlgorithm: string, thumbprint: string, callback: msRest.ServiceCallback<Models.Certificate>): void;\n  get(thumbprintAlgorithm: string, thumbprint: string, options: Models.CertificateGetOptionalParams, callback: msRest.ServiceCallback<Models.Certificate>): void;\n  get(thumbprintAlgorithm: string, thumbprint: string, options?: Models.CertificateGetOptionalParams, callback?: msRest.ServiceCallback<Models.Certificate>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.Certificate>;\n    if (!callback) {\n      return this.getWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.Certificate);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.Certificate;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the certificates that have been added to the specified\n   * account.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {CertificateListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CertificateListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CertificateListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listNext(nextPageLink: string): Promise<Models.CertificateListResult>;\n  listNext(nextPageLink: string, options: Models.CertificateListNextOptionalParams): Promise<Models.CertificateListResult>;\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CertificateListResult>): void;\n  listNext(nextPageLink: string, options: Models.CertificateListNextOptionalParams, callback: msRest.ServiceCallback<Models.CertificateListResult>): void;\n  listNext(nextPageLink: string, options?: Models.CertificateListNextOptionalParams, callback?: msRest.ServiceCallback<Models.CertificateListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CertificateListResult>;\n    if (!callback) {\n      return this.listNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CertificateListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CertificateListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/operations/certificateOperations.ts","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/mappers\";\nimport { BatchServiceClient } from \"../batchServiceClient\";\n\nconst WebResource = msRest.WebResource;\n\n/** Class representing a File. */\nexport class File {\n  private readonly client: BatchServiceClient;\n  /**\n   * Create a File.\n   * @param {BatchServiceClient} client Reference to the service client.\n   */\n  constructor(client: BatchServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Deletes the specified task file from the compute node where the\n   * task ran.\n   *\n   * @param {string} jobId The ID of the job that contains the task.\n   *\n   * @param {string} taskId The ID of the task whose file you want to delete.\n   *\n   * @param {string} filePath The path to the task file or directory that you\n   * want to delete.\n   *\n   * @param {FileDeleteFromTaskOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async deleteFromTaskWithHttpOperationResponse(jobId: string, taskId: string, filePath: string, options?: Models.FileDeleteFromTaskOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let recursive = (options && options.recursive !== undefined) ? options.recursive : undefined;\n    let fileDeleteFromTaskOptions = (options && options.fileDeleteFromTaskOptions !== undefined) ? options.fileDeleteFromTaskOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (taskId === null || taskId === undefined || typeof taskId.valueOf() !== 'string') {\n        throw new Error('taskId cannot be null or undefined and it must be of type string.');\n      }\n      if (filePath === null || filePath === undefined || typeof filePath.valueOf() !== 'string') {\n        throw new Error('filePath cannot be null or undefined and it must be of type string.');\n      }\n      if (recursive !== null && recursive !== undefined && typeof recursive !== 'boolean') {\n        throw new Error('recursive must be of type boolean.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (fileDeleteFromTaskOptions !== null && fileDeleteFromTaskOptions !== undefined)\n      {\n        timeout = fileDeleteFromTaskOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (fileDeleteFromTaskOptions !== null && fileDeleteFromTaskOptions !== undefined)\n      {\n        clientRequestId = fileDeleteFromTaskOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (fileDeleteFromTaskOptions !== null && fileDeleteFromTaskOptions !== undefined)\n      {\n        returnClientRequestId = fileDeleteFromTaskOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (fileDeleteFromTaskOptions !== null && fileDeleteFromTaskOptions !== undefined)\n      {\n        ocpDate = fileDeleteFromTaskOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks/{taskId}/files/{filePath}';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    requestUrl = requestUrl.replace('{taskId}', encodeURIComponent(taskId));\n    requestUrl = requestUrl.replace('{filePath}', encodeURIComponent(filePath));\n    let queryParamsArray: Array<any> = [];\n    if (recursive !== null && recursive !== undefined) {\n      queryParamsArray.push('recursive=' + encodeURIComponent(recursive.toString()));\n    }\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'DELETE';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * Returns the content of the specified task file.\n   *\n   * @param {string} jobId The ID of the job that contains the task.\n   *\n   * @param {string} taskId The ID of the task whose file you want to retrieve.\n   *\n   * @param {string} filePath The path to the task file that you want to get the\n   * content of.\n   *\n   * @param {FileGetFromTaskOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getFromTaskWithHttpOperationResponse(jobId: string, taskId: string, filePath: string, options?: Models.FileGetFromTaskOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let fileGetFromTaskOptions = (options && options.fileGetFromTaskOptions !== undefined) ? options.fileGetFromTaskOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (taskId === null || taskId === undefined || typeof taskId.valueOf() !== 'string') {\n        throw new Error('taskId cannot be null or undefined and it must be of type string.');\n      }\n      if (filePath === null || filePath === undefined || typeof filePath.valueOf() !== 'string') {\n        throw new Error('filePath cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ocpRange: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (fileGetFromTaskOptions !== null && fileGetFromTaskOptions !== undefined)\n      {\n        timeout = fileGetFromTaskOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (fileGetFromTaskOptions !== null && fileGetFromTaskOptions !== undefined)\n      {\n        clientRequestId = fileGetFromTaskOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (fileGetFromTaskOptions !== null && fileGetFromTaskOptions !== undefined)\n      {\n        returnClientRequestId = fileGetFromTaskOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (fileGetFromTaskOptions !== null && fileGetFromTaskOptions !== undefined)\n      {\n        ocpDate = fileGetFromTaskOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (fileGetFromTaskOptions !== null && fileGetFromTaskOptions !== undefined)\n      {\n        ocpRange = fileGetFromTaskOptions.ocpRange;\n        if (ocpRange !== null && ocpRange !== undefined && typeof ocpRange.valueOf() !== 'string') {\n          throw new Error('ocpRange must be of type string.');\n        }\n      }\n      if (fileGetFromTaskOptions !== null && fileGetFromTaskOptions !== undefined)\n      {\n        ifModifiedSince = fileGetFromTaskOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (fileGetFromTaskOptions !== null && fileGetFromTaskOptions !== undefined)\n      {\n        ifUnmodifiedSince = fileGetFromTaskOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks/{taskId}/files/{filePath}';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    requestUrl = requestUrl.replace('{taskId}', encodeURIComponent(taskId));\n    requestUrl = requestUrl.replace('{filePath}', encodeURIComponent(filePath));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ocpRange !== undefined && ocpRange !== null) {\n      httpRequest.headers['ocp-range'] = ocpRange;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    httpRequest.rawResponse = true;\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(`Unexpected status code: ${statusCode}`);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n\n        return Promise.reject(error);\n      }\n\n    } catch(error) {\n      return Promise.reject(error);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * Gets the properties of the specified task file.\n   *\n   * @param {string} jobId The ID of the job that contains the task.\n   *\n   * @param {string} taskId The ID of the task whose file you want to get the\n   * properties of.\n   *\n   * @param {string} filePath The path to the task file that you want to get the\n   * properties of.\n   *\n   * @param {FileGetPropertiesFromTaskOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getPropertiesFromTaskWithHttpOperationResponse(jobId: string, taskId: string, filePath: string, options?: Models.FileGetPropertiesFromTaskOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let fileGetPropertiesFromTaskOptions = (options && options.fileGetPropertiesFromTaskOptions !== undefined) ? options.fileGetPropertiesFromTaskOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (taskId === null || taskId === undefined || typeof taskId.valueOf() !== 'string') {\n        throw new Error('taskId cannot be null or undefined and it must be of type string.');\n      }\n      if (filePath === null || filePath === undefined || typeof filePath.valueOf() !== 'string') {\n        throw new Error('filePath cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (fileGetPropertiesFromTaskOptions !== null && fileGetPropertiesFromTaskOptions !== undefined)\n      {\n        timeout = fileGetPropertiesFromTaskOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (fileGetPropertiesFromTaskOptions !== null && fileGetPropertiesFromTaskOptions !== undefined)\n      {\n        clientRequestId = fileGetPropertiesFromTaskOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (fileGetPropertiesFromTaskOptions !== null && fileGetPropertiesFromTaskOptions !== undefined)\n      {\n        returnClientRequestId = fileGetPropertiesFromTaskOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (fileGetPropertiesFromTaskOptions !== null && fileGetPropertiesFromTaskOptions !== undefined)\n      {\n        ocpDate = fileGetPropertiesFromTaskOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (fileGetPropertiesFromTaskOptions !== null && fileGetPropertiesFromTaskOptions !== undefined)\n      {\n        ifModifiedSince = fileGetPropertiesFromTaskOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (fileGetPropertiesFromTaskOptions !== null && fileGetPropertiesFromTaskOptions !== undefined)\n      {\n        ifUnmodifiedSince = fileGetPropertiesFromTaskOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks/{taskId}/files/{filePath}';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    requestUrl = requestUrl.replace('{taskId}', encodeURIComponent(taskId));\n    requestUrl = requestUrl.replace('{filePath}', encodeURIComponent(filePath));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'HEAD';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Deletes the specified file from the compute node.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node from which you want to\n   * delete the file.\n   *\n   * @param {string} filePath The path to the file or directory that you want to\n   * delete.\n   *\n   * @param {FileDeleteFromComputeNodeOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async deleteFromComputeNodeWithHttpOperationResponse(poolId: string, nodeId: string, filePath: string, options?: Models.FileDeleteFromComputeNodeOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let recursive = (options && options.recursive !== undefined) ? options.recursive : undefined;\n    let fileDeleteFromComputeNodeOptions = (options && options.fileDeleteFromComputeNodeOptions !== undefined) ? options.fileDeleteFromComputeNodeOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (filePath === null || filePath === undefined || typeof filePath.valueOf() !== 'string') {\n        throw new Error('filePath cannot be null or undefined and it must be of type string.');\n      }\n      if (recursive !== null && recursive !== undefined && typeof recursive !== 'boolean') {\n        throw new Error('recursive must be of type boolean.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (fileDeleteFromComputeNodeOptions !== null && fileDeleteFromComputeNodeOptions !== undefined)\n      {\n        timeout = fileDeleteFromComputeNodeOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (fileDeleteFromComputeNodeOptions !== null && fileDeleteFromComputeNodeOptions !== undefined)\n      {\n        clientRequestId = fileDeleteFromComputeNodeOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (fileDeleteFromComputeNodeOptions !== null && fileDeleteFromComputeNodeOptions !== undefined)\n      {\n        returnClientRequestId = fileDeleteFromComputeNodeOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (fileDeleteFromComputeNodeOptions !== null && fileDeleteFromComputeNodeOptions !== undefined)\n      {\n        ocpDate = fileDeleteFromComputeNodeOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/files/{filePath}';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    requestUrl = requestUrl.replace('{filePath}', encodeURIComponent(filePath));\n    let queryParamsArray: Array<any> = [];\n    if (recursive !== null && recursive !== undefined) {\n      queryParamsArray.push('recursive=' + encodeURIComponent(recursive.toString()));\n    }\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'DELETE';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * Returns the content of the specified compute node file.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node that contains the file.\n   *\n   * @param {string} filePath The path to the compute node file that you want to\n   * get the content of.\n   *\n   * @param {FileGetFromComputeNodeOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getFromComputeNodeWithHttpOperationResponse(poolId: string, nodeId: string, filePath: string, options?: Models.FileGetFromComputeNodeOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let fileGetFromComputeNodeOptions = (options && options.fileGetFromComputeNodeOptions !== undefined) ? options.fileGetFromComputeNodeOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (filePath === null || filePath === undefined || typeof filePath.valueOf() !== 'string') {\n        throw new Error('filePath cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ocpRange: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (fileGetFromComputeNodeOptions !== null && fileGetFromComputeNodeOptions !== undefined)\n      {\n        timeout = fileGetFromComputeNodeOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (fileGetFromComputeNodeOptions !== null && fileGetFromComputeNodeOptions !== undefined)\n      {\n        clientRequestId = fileGetFromComputeNodeOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (fileGetFromComputeNodeOptions !== null && fileGetFromComputeNodeOptions !== undefined)\n      {\n        returnClientRequestId = fileGetFromComputeNodeOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (fileGetFromComputeNodeOptions !== null && fileGetFromComputeNodeOptions !== undefined)\n      {\n        ocpDate = fileGetFromComputeNodeOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (fileGetFromComputeNodeOptions !== null && fileGetFromComputeNodeOptions !== undefined)\n      {\n        ocpRange = fileGetFromComputeNodeOptions.ocpRange;\n        if (ocpRange !== null && ocpRange !== undefined && typeof ocpRange.valueOf() !== 'string') {\n          throw new Error('ocpRange must be of type string.');\n        }\n      }\n      if (fileGetFromComputeNodeOptions !== null && fileGetFromComputeNodeOptions !== undefined)\n      {\n        ifModifiedSince = fileGetFromComputeNodeOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (fileGetFromComputeNodeOptions !== null && fileGetFromComputeNodeOptions !== undefined)\n      {\n        ifUnmodifiedSince = fileGetFromComputeNodeOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/files/{filePath}';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    requestUrl = requestUrl.replace('{filePath}', encodeURIComponent(filePath));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ocpRange !== undefined && ocpRange !== null) {\n      httpRequest.headers['ocp-range'] = ocpRange;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    httpRequest.rawResponse = true;\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(`Unexpected status code: ${statusCode}`);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n\n        return Promise.reject(error);\n      }\n\n    } catch(error) {\n      return Promise.reject(error);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * Gets the properties of the specified compute node file.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node that contains the file.\n   *\n   * @param {string} filePath The path to the compute node file that you want to\n   * get the properties of.\n   *\n   * @param {FileGetPropertiesFromComputeNodeOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getPropertiesFromComputeNodeWithHttpOperationResponse(poolId: string, nodeId: string, filePath: string, options?: Models.FileGetPropertiesFromComputeNodeOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let fileGetPropertiesFromComputeNodeOptions = (options && options.fileGetPropertiesFromComputeNodeOptions !== undefined) ? options.fileGetPropertiesFromComputeNodeOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (filePath === null || filePath === undefined || typeof filePath.valueOf() !== 'string') {\n        throw new Error('filePath cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (fileGetPropertiesFromComputeNodeOptions !== null && fileGetPropertiesFromComputeNodeOptions !== undefined)\n      {\n        timeout = fileGetPropertiesFromComputeNodeOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (fileGetPropertiesFromComputeNodeOptions !== null && fileGetPropertiesFromComputeNodeOptions !== undefined)\n      {\n        clientRequestId = fileGetPropertiesFromComputeNodeOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (fileGetPropertiesFromComputeNodeOptions !== null && fileGetPropertiesFromComputeNodeOptions !== undefined)\n      {\n        returnClientRequestId = fileGetPropertiesFromComputeNodeOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (fileGetPropertiesFromComputeNodeOptions !== null && fileGetPropertiesFromComputeNodeOptions !== undefined)\n      {\n        ocpDate = fileGetPropertiesFromComputeNodeOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (fileGetPropertiesFromComputeNodeOptions !== null && fileGetPropertiesFromComputeNodeOptions !== undefined)\n      {\n        ifModifiedSince = fileGetPropertiesFromComputeNodeOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (fileGetPropertiesFromComputeNodeOptions !== null && fileGetPropertiesFromComputeNodeOptions !== undefined)\n      {\n        ifUnmodifiedSince = fileGetPropertiesFromComputeNodeOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/files/{filePath}';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    requestUrl = requestUrl.replace('{filePath}', encodeURIComponent(filePath));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'HEAD';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists the files in a task's directory on its compute node.\n   *\n   * @param {string} jobId The ID of the job that contains the task.\n   *\n   * @param {string} taskId The ID of the task whose files you want to list.\n   *\n   * @param {FileListFromTaskOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listFromTaskWithHttpOperationResponse(jobId: string, taskId: string, options?: Models.FileListFromTaskOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let recursive = (options && options.recursive !== undefined) ? options.recursive : undefined;\n    let fileListFromTaskOptions = (options && options.fileListFromTaskOptions !== undefined) ? options.fileListFromTaskOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (taskId === null || taskId === undefined || typeof taskId.valueOf() !== 'string') {\n        throw new Error('taskId cannot be null or undefined and it must be of type string.');\n      }\n      if (recursive !== null && recursive !== undefined && typeof recursive !== 'boolean') {\n        throw new Error('recursive must be of type boolean.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let filter: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (fileListFromTaskOptions !== null && fileListFromTaskOptions !== undefined)\n      {\n        filter = fileListFromTaskOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (fileListFromTaskOptions !== null && fileListFromTaskOptions !== undefined)\n      {\n        maxResults = fileListFromTaskOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (fileListFromTaskOptions !== null && fileListFromTaskOptions !== undefined)\n      {\n        timeout = fileListFromTaskOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (fileListFromTaskOptions !== null && fileListFromTaskOptions !== undefined)\n      {\n        clientRequestId = fileListFromTaskOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (fileListFromTaskOptions !== null && fileListFromTaskOptions !== undefined)\n      {\n        returnClientRequestId = fileListFromTaskOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (fileListFromTaskOptions !== null && fileListFromTaskOptions !== undefined)\n      {\n        ocpDate = fileListFromTaskOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks/{taskId}/files';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    requestUrl = requestUrl.replace('{taskId}', encodeURIComponent(taskId));\n    let queryParamsArray: Array<any> = [];\n    if (recursive !== null && recursive !== undefined) {\n      queryParamsArray.push('recursive=' + encodeURIComponent(recursive.toString()));\n    }\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.NodeFileListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the files in task directories on the specified compute\n   * node.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node whose files you want to\n   * list.\n   *\n   * @param {FileListFromComputeNodeOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listFromComputeNodeWithHttpOperationResponse(poolId: string, nodeId: string, options?: Models.FileListFromComputeNodeOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let recursive = (options && options.recursive !== undefined) ? options.recursive : undefined;\n    let fileListFromComputeNodeOptions = (options && options.fileListFromComputeNodeOptions !== undefined) ? options.fileListFromComputeNodeOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (recursive !== null && recursive !== undefined && typeof recursive !== 'boolean') {\n        throw new Error('recursive must be of type boolean.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let filter: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (fileListFromComputeNodeOptions !== null && fileListFromComputeNodeOptions !== undefined)\n      {\n        filter = fileListFromComputeNodeOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (fileListFromComputeNodeOptions !== null && fileListFromComputeNodeOptions !== undefined)\n      {\n        maxResults = fileListFromComputeNodeOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (fileListFromComputeNodeOptions !== null && fileListFromComputeNodeOptions !== undefined)\n      {\n        timeout = fileListFromComputeNodeOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (fileListFromComputeNodeOptions !== null && fileListFromComputeNodeOptions !== undefined)\n      {\n        clientRequestId = fileListFromComputeNodeOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (fileListFromComputeNodeOptions !== null && fileListFromComputeNodeOptions !== undefined)\n      {\n        returnClientRequestId = fileListFromComputeNodeOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (fileListFromComputeNodeOptions !== null && fileListFromComputeNodeOptions !== undefined)\n      {\n        ocpDate = fileListFromComputeNodeOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/files';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    let queryParamsArray: Array<any> = [];\n    if (recursive !== null && recursive !== undefined) {\n      queryParamsArray.push('recursive=' + encodeURIComponent(recursive.toString()));\n    }\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.NodeFileListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists the files in a task's directory on its compute node.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {FileListFromTaskNextOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listFromTaskNextWithHttpOperationResponse(nextPageLink: string, options?: Models.FileListFromTaskNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let fileListFromTaskNextOptions = (options && options.fileListFromTaskNextOptions !== undefined) ? options.fileListFromTaskNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (fileListFromTaskNextOptions !== null && fileListFromTaskNextOptions !== undefined)\n      {\n        clientRequestId = fileListFromTaskNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (fileListFromTaskNextOptions !== null && fileListFromTaskNextOptions !== undefined)\n      {\n        returnClientRequestId = fileListFromTaskNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (fileListFromTaskNextOptions !== null && fileListFromTaskNextOptions !== undefined)\n      {\n        ocpDate = fileListFromTaskNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.NodeFileListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the files in task directories on the specified compute\n   * node.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {FileListFromComputeNodeNextOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listFromComputeNodeNextWithHttpOperationResponse(nextPageLink: string, options?: Models.FileListFromComputeNodeNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let fileListFromComputeNodeNextOptions = (options && options.fileListFromComputeNodeNextOptions !== undefined) ? options.fileListFromComputeNodeNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (fileListFromComputeNodeNextOptions !== null && fileListFromComputeNodeNextOptions !== undefined)\n      {\n        clientRequestId = fileListFromComputeNodeNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (fileListFromComputeNodeNextOptions !== null && fileListFromComputeNodeNextOptions !== undefined)\n      {\n        returnClientRequestId = fileListFromComputeNodeNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (fileListFromComputeNodeNextOptions !== null && fileListFromComputeNodeNextOptions !== undefined)\n      {\n        ocpDate = fileListFromComputeNodeNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.NodeFileListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Deletes the specified task file from the compute node where the\n   * task ran.\n   *\n   * @param {string} jobId The ID of the job that contains the task.\n   *\n   * @param {string} taskId The ID of the task whose file you want to delete.\n   *\n   * @param {string} filePath The path to the task file or directory that you\n   * want to delete.\n   *\n   * @param {FileDeleteFromTaskOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  deleteFromTask(jobId: string, taskId: string, filePath: string): Promise<void>;\n  deleteFromTask(jobId: string, taskId: string, filePath: string, options: Models.FileDeleteFromTaskOptionalParams): Promise<void>;\n  deleteFromTask(jobId: string, taskId: string, filePath: string, callback: msRest.ServiceCallback<void>): void;\n  deleteFromTask(jobId: string, taskId: string, filePath: string, options: Models.FileDeleteFromTaskOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileDeleteFromTaskOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.deleteFromTaskWithHttpOperationResponse(jobId, taskId, filePath, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.deleteFromTaskWithHttpOperationResponse(jobId, taskId, filePath, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * Returns the content of the specified task file.\n   *\n   * @param {string} jobId The ID of the job that contains the task.\n   *\n   * @param {string} taskId The ID of the task whose file you want to retrieve.\n   *\n   * @param {string} filePath The path to the task file that you want to get the\n   * content of.\n   *\n   * @param {FileGetFromTaskOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {ReadableStream} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  getFromTask(jobId: string, taskId: string, filePath: string): Promise<ReadableStream>;\n  getFromTask(jobId: string, taskId: string, filePath: string, options: Models.FileGetFromTaskOptionalParams): Promise<ReadableStream>;\n  getFromTask(jobId: string, taskId: string, filePath: string, callback: msRest.ServiceCallback<ReadableStream>): void;\n  getFromTask(jobId: string, taskId: string, filePath: string, options: Models.FileGetFromTaskOptionalParams, callback: msRest.ServiceCallback<ReadableStream>): void;\n  getFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileGetFromTaskOptionalParams, callback?: msRest.ServiceCallback<ReadableStream>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<ReadableStream>;\n    if (!callback) {\n      return this.getFromTaskWithHttpOperationResponse(jobId, taskId, filePath, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsStream as ReadableStream);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getFromTaskWithHttpOperationResponse(jobId, taskId, filePath, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsStream as ReadableStream;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * Gets the properties of the specified task file.\n   *\n   * @param {string} jobId The ID of the job that contains the task.\n   *\n   * @param {string} taskId The ID of the task whose file you want to get the\n   * properties of.\n   *\n   * @param {string} filePath The path to the task file that you want to get the\n   * properties of.\n   *\n   * @param {FileGetPropertiesFromTaskOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  getPropertiesFromTask(jobId: string, taskId: string, filePath: string): Promise<void>;\n  getPropertiesFromTask(jobId: string, taskId: string, filePath: string, options: Models.FileGetPropertiesFromTaskOptionalParams): Promise<void>;\n  getPropertiesFromTask(jobId: string, taskId: string, filePath: string, callback: msRest.ServiceCallback<void>): void;\n  getPropertiesFromTask(jobId: string, taskId: string, filePath: string, options: Models.FileGetPropertiesFromTaskOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  getPropertiesFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileGetPropertiesFromTaskOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.getPropertiesFromTaskWithHttpOperationResponse(jobId, taskId, filePath, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getPropertiesFromTaskWithHttpOperationResponse(jobId, taskId, filePath, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Deletes the specified file from the compute node.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node from which you want to\n   * delete the file.\n   *\n   * @param {string} filePath The path to the file or directory that you want to\n   * delete.\n   *\n   * @param {FileDeleteFromComputeNodeOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  deleteFromComputeNode(poolId: string, nodeId: string, filePath: string): Promise<void>;\n  deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, options: Models.FileDeleteFromComputeNodeOptionalParams): Promise<void>;\n  deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: msRest.ServiceCallback<void>): void;\n  deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, options: Models.FileDeleteFromComputeNodeOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileDeleteFromComputeNodeOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.deleteFromComputeNodeWithHttpOperationResponse(poolId, nodeId, filePath, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.deleteFromComputeNodeWithHttpOperationResponse(poolId, nodeId, filePath, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * Returns the content of the specified compute node file.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node that contains the file.\n   *\n   * @param {string} filePath The path to the compute node file that you want to\n   * get the content of.\n   *\n   * @param {FileGetFromComputeNodeOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {ReadableStream} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  getFromComputeNode(poolId: string, nodeId: string, filePath: string): Promise<ReadableStream>;\n  getFromComputeNode(poolId: string, nodeId: string, filePath: string, options: Models.FileGetFromComputeNodeOptionalParams): Promise<ReadableStream>;\n  getFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: msRest.ServiceCallback<ReadableStream>): void;\n  getFromComputeNode(poolId: string, nodeId: string, filePath: string, options: Models.FileGetFromComputeNodeOptionalParams, callback: msRest.ServiceCallback<ReadableStream>): void;\n  getFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileGetFromComputeNodeOptionalParams, callback?: msRest.ServiceCallback<ReadableStream>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<ReadableStream>;\n    if (!callback) {\n      return this.getFromComputeNodeWithHttpOperationResponse(poolId, nodeId, filePath, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsStream as ReadableStream);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getFromComputeNodeWithHttpOperationResponse(poolId, nodeId, filePath, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsStream as ReadableStream;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * Gets the properties of the specified compute node file.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node that contains the file.\n   *\n   * @param {string} filePath The path to the compute node file that you want to\n   * get the properties of.\n   *\n   * @param {FileGetPropertiesFromComputeNodeOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string): Promise<void>;\n  getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, options: Models.FileGetPropertiesFromComputeNodeOptionalParams): Promise<void>;\n  getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: msRest.ServiceCallback<void>): void;\n  getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, options: Models.FileGetPropertiesFromComputeNodeOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileGetPropertiesFromComputeNodeOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.getPropertiesFromComputeNodeWithHttpOperationResponse(poolId, nodeId, filePath, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getPropertiesFromComputeNodeWithHttpOperationResponse(poolId, nodeId, filePath, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists the files in a task's directory on its compute node.\n   *\n   * @param {string} jobId The ID of the job that contains the task.\n   *\n   * @param {string} taskId The ID of the task whose files you want to list.\n   *\n   * @param {FileListFromTaskOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.NodeFileListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.NodeFileListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listFromTask(jobId: string, taskId: string): Promise<Models.NodeFileListResult>;\n  listFromTask(jobId: string, taskId: string, options: Models.FileListFromTaskOptionalParams): Promise<Models.NodeFileListResult>;\n  listFromTask(jobId: string, taskId: string, callback: msRest.ServiceCallback<Models.NodeFileListResult>): void;\n  listFromTask(jobId: string, taskId: string, options: Models.FileListFromTaskOptionalParams, callback: msRest.ServiceCallback<Models.NodeFileListResult>): void;\n  listFromTask(jobId: string, taskId: string, options?: Models.FileListFromTaskOptionalParams, callback?: msRest.ServiceCallback<Models.NodeFileListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.NodeFileListResult>;\n    if (!callback) {\n      return this.listFromTaskWithHttpOperationResponse(jobId, taskId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.NodeFileListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listFromTaskWithHttpOperationResponse(jobId, taskId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.NodeFileListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the files in task directories on the specified compute\n   * node.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node whose files you want to\n   * list.\n   *\n   * @param {FileListFromComputeNodeOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.NodeFileListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.NodeFileListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listFromComputeNode(poolId: string, nodeId: string): Promise<Models.NodeFileListResult>;\n  listFromComputeNode(poolId: string, nodeId: string, options: Models.FileListFromComputeNodeOptionalParams): Promise<Models.NodeFileListResult>;\n  listFromComputeNode(poolId: string, nodeId: string, callback: msRest.ServiceCallback<Models.NodeFileListResult>): void;\n  listFromComputeNode(poolId: string, nodeId: string, options: Models.FileListFromComputeNodeOptionalParams, callback: msRest.ServiceCallback<Models.NodeFileListResult>): void;\n  listFromComputeNode(poolId: string, nodeId: string, options?: Models.FileListFromComputeNodeOptionalParams, callback?: msRest.ServiceCallback<Models.NodeFileListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.NodeFileListResult>;\n    if (!callback) {\n      return this.listFromComputeNodeWithHttpOperationResponse(poolId, nodeId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.NodeFileListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listFromComputeNodeWithHttpOperationResponse(poolId, nodeId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.NodeFileListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists the files in a task's directory on its compute node.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {FileListFromTaskNextOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.NodeFileListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.NodeFileListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listFromTaskNext(nextPageLink: string): Promise<Models.NodeFileListResult>;\n  listFromTaskNext(nextPageLink: string, options: Models.FileListFromTaskNextOptionalParams): Promise<Models.NodeFileListResult>;\n  listFromTaskNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.NodeFileListResult>): void;\n  listFromTaskNext(nextPageLink: string, options: Models.FileListFromTaskNextOptionalParams, callback: msRest.ServiceCallback<Models.NodeFileListResult>): void;\n  listFromTaskNext(nextPageLink: string, options?: Models.FileListFromTaskNextOptionalParams, callback?: msRest.ServiceCallback<Models.NodeFileListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.NodeFileListResult>;\n    if (!callback) {\n      return this.listFromTaskNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.NodeFileListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listFromTaskNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.NodeFileListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the files in task directories on the specified compute\n   * node.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {FileListFromComputeNodeNextOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.NodeFileListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.NodeFileListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listFromComputeNodeNext(nextPageLink: string): Promise<Models.NodeFileListResult>;\n  listFromComputeNodeNext(nextPageLink: string, options: Models.FileListFromComputeNodeNextOptionalParams): Promise<Models.NodeFileListResult>;\n  listFromComputeNodeNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.NodeFileListResult>): void;\n  listFromComputeNodeNext(nextPageLink: string, options: Models.FileListFromComputeNodeNextOptionalParams, callback: msRest.ServiceCallback<Models.NodeFileListResult>): void;\n  listFromComputeNodeNext(nextPageLink: string, options?: Models.FileListFromComputeNodeNextOptionalParams, callback?: msRest.ServiceCallback<Models.NodeFileListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.NodeFileListResult>;\n    if (!callback) {\n      return this.listFromComputeNodeNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.NodeFileListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listFromComputeNodeNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.NodeFileListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/operations/file.ts","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/mappers\";\nimport { BatchServiceClient } from \"../batchServiceClient\";\n\nconst WebResource = msRest.WebResource;\n\n/** Class representing a JobSchedule. */\nexport class JobSchedule {\n  private readonly client: BatchServiceClient;\n  /**\n   * Create a JobSchedule.\n   * @param {BatchServiceClient} client Reference to the service client.\n   */\n  constructor(client: BatchServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Checks the specified job schedule exists.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule which you want to\n   * check.\n   *\n   * @param {JobScheduleExistsOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async existsWithHttpOperationResponse(jobScheduleId: string, options?: Models.JobScheduleExistsOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobScheduleExistsOptions = (options && options.jobScheduleExistsOptions !== undefined) ? options.jobScheduleExistsOptions : undefined;\n    // Validate\n    try {\n      if (jobScheduleId === null || jobScheduleId === undefined || typeof jobScheduleId.valueOf() !== 'string') {\n        throw new Error('jobScheduleId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobScheduleExistsOptions !== null && jobScheduleExistsOptions !== undefined)\n      {\n        timeout = jobScheduleExistsOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobScheduleExistsOptions !== null && jobScheduleExistsOptions !== undefined)\n      {\n        clientRequestId = jobScheduleExistsOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobScheduleExistsOptions !== null && jobScheduleExistsOptions !== undefined)\n      {\n        returnClientRequestId = jobScheduleExistsOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobScheduleExistsOptions !== null && jobScheduleExistsOptions !== undefined)\n      {\n        ocpDate = jobScheduleExistsOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobScheduleExistsOptions !== null && jobScheduleExistsOptions !== undefined)\n      {\n        ifMatch = jobScheduleExistsOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobScheduleExistsOptions !== null && jobScheduleExistsOptions !== undefined)\n      {\n        ifNoneMatch = jobScheduleExistsOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobScheduleExistsOptions !== null && jobScheduleExistsOptions !== undefined)\n      {\n        ifModifiedSince = jobScheduleExistsOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobScheduleExistsOptions !== null && jobScheduleExistsOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobScheduleExistsOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobschedules/{jobScheduleId}';\n    requestUrl = requestUrl.replace('{jobScheduleId}', encodeURIComponent(jobScheduleId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'HEAD';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200 && statusCode !== 404) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      operationRes.bodyAsJson = (statusCode === 200);\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Deletes a job schedule from the specified account.\n   *\n   * When you delete a job schedule, this also deletes all jobs and tasks under\n   * that schedule. When tasks are deleted, all the files in their working\n   * directories on the compute nodes are also deleted (the retention period is\n   * ignored). The job schedule statistics are no longer accessible once the job\n   * schedule is deleted, though they are still counted towards account lifetime\n   * statistics.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to delete.\n   *\n   * @param {JobScheduleDeleteMethodOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async deleteMethodWithHttpOperationResponse(jobScheduleId: string, options?: Models.JobScheduleDeleteMethodOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobScheduleDeleteMethodOptions = (options && options.jobScheduleDeleteMethodOptions !== undefined) ? options.jobScheduleDeleteMethodOptions : undefined;\n    // Validate\n    try {\n      if (jobScheduleId === null || jobScheduleId === undefined || typeof jobScheduleId.valueOf() !== 'string') {\n        throw new Error('jobScheduleId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobScheduleDeleteMethodOptions !== null && jobScheduleDeleteMethodOptions !== undefined)\n      {\n        timeout = jobScheduleDeleteMethodOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobScheduleDeleteMethodOptions !== null && jobScheduleDeleteMethodOptions !== undefined)\n      {\n        clientRequestId = jobScheduleDeleteMethodOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobScheduleDeleteMethodOptions !== null && jobScheduleDeleteMethodOptions !== undefined)\n      {\n        returnClientRequestId = jobScheduleDeleteMethodOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobScheduleDeleteMethodOptions !== null && jobScheduleDeleteMethodOptions !== undefined)\n      {\n        ocpDate = jobScheduleDeleteMethodOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobScheduleDeleteMethodOptions !== null && jobScheduleDeleteMethodOptions !== undefined)\n      {\n        ifMatch = jobScheduleDeleteMethodOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobScheduleDeleteMethodOptions !== null && jobScheduleDeleteMethodOptions !== undefined)\n      {\n        ifNoneMatch = jobScheduleDeleteMethodOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobScheduleDeleteMethodOptions !== null && jobScheduleDeleteMethodOptions !== undefined)\n      {\n        ifModifiedSince = jobScheduleDeleteMethodOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobScheduleDeleteMethodOptions !== null && jobScheduleDeleteMethodOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobScheduleDeleteMethodOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobschedules/{jobScheduleId}';\n    requestUrl = requestUrl.replace('{jobScheduleId}', encodeURIComponent(jobScheduleId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'DELETE';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * Gets information about the specified job schedule.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to get.\n   *\n   * @param {JobScheduleGetOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getWithHttpOperationResponse(jobScheduleId: string, options?: Models.JobScheduleGetOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobScheduleGetOptions = (options && options.jobScheduleGetOptions !== undefined) ? options.jobScheduleGetOptions : undefined;\n    // Validate\n    try {\n      if (jobScheduleId === null || jobScheduleId === undefined || typeof jobScheduleId.valueOf() !== 'string') {\n        throw new Error('jobScheduleId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let select: any;\n    let expand: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobScheduleGetOptions !== null && jobScheduleGetOptions !== undefined)\n      {\n        select = jobScheduleGetOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (jobScheduleGetOptions !== null && jobScheduleGetOptions !== undefined)\n      {\n        expand = jobScheduleGetOptions.expand;\n        if (expand !== null && expand !== undefined && typeof expand.valueOf() !== 'string') {\n          throw new Error('expand must be of type string.');\n        }\n      }\n      if (jobScheduleGetOptions !== null && jobScheduleGetOptions !== undefined)\n      {\n        timeout = jobScheduleGetOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobScheduleGetOptions !== null && jobScheduleGetOptions !== undefined)\n      {\n        clientRequestId = jobScheduleGetOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobScheduleGetOptions !== null && jobScheduleGetOptions !== undefined)\n      {\n        returnClientRequestId = jobScheduleGetOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobScheduleGetOptions !== null && jobScheduleGetOptions !== undefined)\n      {\n        ocpDate = jobScheduleGetOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobScheduleGetOptions !== null && jobScheduleGetOptions !== undefined)\n      {\n        ifMatch = jobScheduleGetOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobScheduleGetOptions !== null && jobScheduleGetOptions !== undefined)\n      {\n        ifNoneMatch = jobScheduleGetOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobScheduleGetOptions !== null && jobScheduleGetOptions !== undefined)\n      {\n        ifModifiedSince = jobScheduleGetOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobScheduleGetOptions !== null && jobScheduleGetOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobScheduleGetOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobschedules/{jobScheduleId}';\n    requestUrl = requestUrl.replace('{jobScheduleId}', encodeURIComponent(jobScheduleId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (expand !== null && expand !== undefined) {\n      queryParamsArray.push('$expand=' + encodeURIComponent(expand));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudJobSchedule;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Updates the properties of the specified job schedule.\n   *\n   * This replaces only the job schedule properties specified in the request. For\n   * example, if the schedule property is not specified with this request, then\n   * the Batch service will keep the existing schedule. Changes to a job schedule\n   * only impact jobs created by the schedule after the update has taken place;\n   * currently running jobs are unaffected.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to update.\n   *\n   * @param {JobSchedulePatchParameter} jobSchedulePatchParameter The parameters\n   * for the request.\n   *\n   * @param {JobSchedulePatchOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async patchWithHttpOperationResponse(jobScheduleId: string, jobSchedulePatchParameter: Models.JobSchedulePatchParameter, options?: Models.JobSchedulePatchOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobSchedulePatchOptions = (options && options.jobSchedulePatchOptions !== undefined) ? options.jobSchedulePatchOptions : undefined;\n    if (jobSchedulePatchParameter === null || jobSchedulePatchParameter === undefined)\n    {\n      jobSchedulePatchParameter = {} as any;\n    }\n    // Validate\n    try {\n      if (jobScheduleId === null || jobScheduleId === undefined || typeof jobScheduleId.valueOf() !== 'string') {\n        throw new Error('jobScheduleId cannot be null or undefined and it must be of type string.');\n      }\n      if (jobSchedulePatchParameter === null || jobSchedulePatchParameter === undefined) {\n        throw new Error('jobSchedulePatchParameter cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobSchedulePatchOptions !== null && jobSchedulePatchOptions !== undefined)\n      {\n        timeout = jobSchedulePatchOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobSchedulePatchOptions !== null && jobSchedulePatchOptions !== undefined)\n      {\n        clientRequestId = jobSchedulePatchOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobSchedulePatchOptions !== null && jobSchedulePatchOptions !== undefined)\n      {\n        returnClientRequestId = jobSchedulePatchOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobSchedulePatchOptions !== null && jobSchedulePatchOptions !== undefined)\n      {\n        ocpDate = jobSchedulePatchOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobSchedulePatchOptions !== null && jobSchedulePatchOptions !== undefined)\n      {\n        ifMatch = jobSchedulePatchOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobSchedulePatchOptions !== null && jobSchedulePatchOptions !== undefined)\n      {\n        ifNoneMatch = jobSchedulePatchOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobSchedulePatchOptions !== null && jobSchedulePatchOptions !== undefined)\n      {\n        ifModifiedSince = jobSchedulePatchOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobSchedulePatchOptions !== null && jobSchedulePatchOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobSchedulePatchOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobschedules/{jobScheduleId}';\n    requestUrl = requestUrl.replace('{jobScheduleId}', encodeURIComponent(jobScheduleId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'PATCH';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (jobSchedulePatchParameter !== null && jobSchedulePatchParameter !== undefined) {\n        let requestModelMapper = Mappers.JobSchedulePatchParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, jobSchedulePatchParameter, 'jobSchedulePatchParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(jobSchedulePatchParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Updates the properties of the specified job schedule.\n   *\n   * This fully replaces all the updateable properties of the job schedule. For\n   * example, if the schedule property is not specified with this request, then\n   * the Batch service will remove the existing schedule. Changes to a job\n   * schedule only impact jobs created by the schedule after the update has taken\n   * place; currently running jobs are unaffected.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to update.\n   *\n   * @param {JobScheduleUpdateParameter} jobScheduleUpdateParameter The\n   * parameters for the request.\n   *\n   * @param {JobScheduleUpdateOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async updateWithHttpOperationResponse(jobScheduleId: string, jobScheduleUpdateParameter: Models.JobScheduleUpdateParameter, options?: Models.JobScheduleUpdateOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobScheduleUpdateOptions = (options && options.jobScheduleUpdateOptions !== undefined) ? options.jobScheduleUpdateOptions : undefined;\n    if (jobScheduleUpdateParameter === null || jobScheduleUpdateParameter === undefined)\n    {\n      jobScheduleUpdateParameter = {} as any;\n    }\n    // Validate\n    try {\n      if (jobScheduleId === null || jobScheduleId === undefined || typeof jobScheduleId.valueOf() !== 'string') {\n        throw new Error('jobScheduleId cannot be null or undefined and it must be of type string.');\n      }\n      if (jobScheduleUpdateParameter === null || jobScheduleUpdateParameter === undefined) {\n        throw new Error('jobScheduleUpdateParameter cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobScheduleUpdateOptions !== null && jobScheduleUpdateOptions !== undefined)\n      {\n        timeout = jobScheduleUpdateOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobScheduleUpdateOptions !== null && jobScheduleUpdateOptions !== undefined)\n      {\n        clientRequestId = jobScheduleUpdateOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobScheduleUpdateOptions !== null && jobScheduleUpdateOptions !== undefined)\n      {\n        returnClientRequestId = jobScheduleUpdateOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobScheduleUpdateOptions !== null && jobScheduleUpdateOptions !== undefined)\n      {\n        ocpDate = jobScheduleUpdateOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobScheduleUpdateOptions !== null && jobScheduleUpdateOptions !== undefined)\n      {\n        ifMatch = jobScheduleUpdateOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobScheduleUpdateOptions !== null && jobScheduleUpdateOptions !== undefined)\n      {\n        ifNoneMatch = jobScheduleUpdateOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobScheduleUpdateOptions !== null && jobScheduleUpdateOptions !== undefined)\n      {\n        ifModifiedSince = jobScheduleUpdateOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobScheduleUpdateOptions !== null && jobScheduleUpdateOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobScheduleUpdateOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobschedules/{jobScheduleId}';\n    requestUrl = requestUrl.replace('{jobScheduleId}', encodeURIComponent(jobScheduleId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'PUT';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (jobScheduleUpdateParameter !== null && jobScheduleUpdateParameter !== undefined) {\n        let requestModelMapper = Mappers.JobScheduleUpdateParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, jobScheduleUpdateParameter, 'jobScheduleUpdateParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(jobScheduleUpdateParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Disables a job schedule.\n   *\n   * No new jobs will be created until the job schedule is enabled again.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to disable.\n   *\n   * @param {JobScheduleDisableOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async disableWithHttpOperationResponse(jobScheduleId: string, options?: Models.JobScheduleDisableOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobScheduleDisableOptions = (options && options.jobScheduleDisableOptions !== undefined) ? options.jobScheduleDisableOptions : undefined;\n    // Validate\n    try {\n      if (jobScheduleId === null || jobScheduleId === undefined || typeof jobScheduleId.valueOf() !== 'string') {\n        throw new Error('jobScheduleId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobScheduleDisableOptions !== null && jobScheduleDisableOptions !== undefined)\n      {\n        timeout = jobScheduleDisableOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobScheduleDisableOptions !== null && jobScheduleDisableOptions !== undefined)\n      {\n        clientRequestId = jobScheduleDisableOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobScheduleDisableOptions !== null && jobScheduleDisableOptions !== undefined)\n      {\n        returnClientRequestId = jobScheduleDisableOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobScheduleDisableOptions !== null && jobScheduleDisableOptions !== undefined)\n      {\n        ocpDate = jobScheduleDisableOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobScheduleDisableOptions !== null && jobScheduleDisableOptions !== undefined)\n      {\n        ifMatch = jobScheduleDisableOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobScheduleDisableOptions !== null && jobScheduleDisableOptions !== undefined)\n      {\n        ifNoneMatch = jobScheduleDisableOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobScheduleDisableOptions !== null && jobScheduleDisableOptions !== undefined)\n      {\n        ifModifiedSince = jobScheduleDisableOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobScheduleDisableOptions !== null && jobScheduleDisableOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobScheduleDisableOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobschedules/{jobScheduleId}/disable';\n    requestUrl = requestUrl.replace('{jobScheduleId}', encodeURIComponent(jobScheduleId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 204) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Enables a job schedule.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to enable.\n   *\n   * @param {JobScheduleEnableOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async enableWithHttpOperationResponse(jobScheduleId: string, options?: Models.JobScheduleEnableOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobScheduleEnableOptions = (options && options.jobScheduleEnableOptions !== undefined) ? options.jobScheduleEnableOptions : undefined;\n    // Validate\n    try {\n      if (jobScheduleId === null || jobScheduleId === undefined || typeof jobScheduleId.valueOf() !== 'string') {\n        throw new Error('jobScheduleId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobScheduleEnableOptions !== null && jobScheduleEnableOptions !== undefined)\n      {\n        timeout = jobScheduleEnableOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobScheduleEnableOptions !== null && jobScheduleEnableOptions !== undefined)\n      {\n        clientRequestId = jobScheduleEnableOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobScheduleEnableOptions !== null && jobScheduleEnableOptions !== undefined)\n      {\n        returnClientRequestId = jobScheduleEnableOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobScheduleEnableOptions !== null && jobScheduleEnableOptions !== undefined)\n      {\n        ocpDate = jobScheduleEnableOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobScheduleEnableOptions !== null && jobScheduleEnableOptions !== undefined)\n      {\n        ifMatch = jobScheduleEnableOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobScheduleEnableOptions !== null && jobScheduleEnableOptions !== undefined)\n      {\n        ifNoneMatch = jobScheduleEnableOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobScheduleEnableOptions !== null && jobScheduleEnableOptions !== undefined)\n      {\n        ifModifiedSince = jobScheduleEnableOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobScheduleEnableOptions !== null && jobScheduleEnableOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobScheduleEnableOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobschedules/{jobScheduleId}/enable';\n    requestUrl = requestUrl.replace('{jobScheduleId}', encodeURIComponent(jobScheduleId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 204) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Terminates a job schedule.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to terminates.\n   *\n   * @param {JobScheduleTerminateOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async terminateWithHttpOperationResponse(jobScheduleId: string, options?: Models.JobScheduleTerminateOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobScheduleTerminateOptions = (options && options.jobScheduleTerminateOptions !== undefined) ? options.jobScheduleTerminateOptions : undefined;\n    // Validate\n    try {\n      if (jobScheduleId === null || jobScheduleId === undefined || typeof jobScheduleId.valueOf() !== 'string') {\n        throw new Error('jobScheduleId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (jobScheduleTerminateOptions !== null && jobScheduleTerminateOptions !== undefined)\n      {\n        timeout = jobScheduleTerminateOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobScheduleTerminateOptions !== null && jobScheduleTerminateOptions !== undefined)\n      {\n        clientRequestId = jobScheduleTerminateOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobScheduleTerminateOptions !== null && jobScheduleTerminateOptions !== undefined)\n      {\n        returnClientRequestId = jobScheduleTerminateOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobScheduleTerminateOptions !== null && jobScheduleTerminateOptions !== undefined)\n      {\n        ocpDate = jobScheduleTerminateOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (jobScheduleTerminateOptions !== null && jobScheduleTerminateOptions !== undefined)\n      {\n        ifMatch = jobScheduleTerminateOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (jobScheduleTerminateOptions !== null && jobScheduleTerminateOptions !== undefined)\n      {\n        ifNoneMatch = jobScheduleTerminateOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (jobScheduleTerminateOptions !== null && jobScheduleTerminateOptions !== undefined)\n      {\n        ifModifiedSince = jobScheduleTerminateOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (jobScheduleTerminateOptions !== null && jobScheduleTerminateOptions !== undefined)\n      {\n        ifUnmodifiedSince = jobScheduleTerminateOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobschedules/{jobScheduleId}/terminate';\n    requestUrl = requestUrl.replace('{jobScheduleId}', encodeURIComponent(jobScheduleId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Adds a job schedule to the specified account.\n   *\n   * @param {JobScheduleAddParameter} cloudJobSchedule The job schedule to be\n   * added.\n   *\n   * @param {JobScheduleAddOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async addWithHttpOperationResponse(cloudJobSchedule: Models.JobScheduleAddParameter, options?: Models.JobScheduleAddOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobScheduleAddOptions = (options && options.jobScheduleAddOptions !== undefined) ? options.jobScheduleAddOptions : undefined;\n    if (cloudJobSchedule === null || cloudJobSchedule === undefined)\n    {\n      cloudJobSchedule = {} as any;\n    }\n    // Validate\n    try {\n      if (cloudJobSchedule === null || cloudJobSchedule === undefined) {\n        throw new Error('cloudJobSchedule cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobScheduleAddOptions !== null && jobScheduleAddOptions !== undefined)\n      {\n        timeout = jobScheduleAddOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobScheduleAddOptions !== null && jobScheduleAddOptions !== undefined)\n      {\n        clientRequestId = jobScheduleAddOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobScheduleAddOptions !== null && jobScheduleAddOptions !== undefined)\n      {\n        returnClientRequestId = jobScheduleAddOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobScheduleAddOptions !== null && jobScheduleAddOptions !== undefined)\n      {\n        ocpDate = jobScheduleAddOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobschedules';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (cloudJobSchedule !== null && cloudJobSchedule !== undefined) {\n        let requestModelMapper = Mappers.JobScheduleAddParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, cloudJobSchedule, 'cloudJobSchedule');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(cloudJobSchedule, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 201) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the job schedules in the specified account.\n   *\n   * @param {JobScheduleListOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listWithHttpOperationResponse(options?: Models.JobScheduleListOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobScheduleListOptions = (options && options.jobScheduleListOptions !== undefined) ? options.jobScheduleListOptions : undefined;\n    // Validate\n    try {\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let filter: any;\n    let select: any;\n    let expand: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobScheduleListOptions !== null && jobScheduleListOptions !== undefined)\n      {\n        filter = jobScheduleListOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (jobScheduleListOptions !== null && jobScheduleListOptions !== undefined)\n      {\n        select = jobScheduleListOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (jobScheduleListOptions !== null && jobScheduleListOptions !== undefined)\n      {\n        expand = jobScheduleListOptions.expand;\n        if (expand !== null && expand !== undefined && typeof expand.valueOf() !== 'string') {\n          throw new Error('expand must be of type string.');\n        }\n      }\n      if (jobScheduleListOptions !== null && jobScheduleListOptions !== undefined)\n      {\n        maxResults = jobScheduleListOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (jobScheduleListOptions !== null && jobScheduleListOptions !== undefined)\n      {\n        timeout = jobScheduleListOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (jobScheduleListOptions !== null && jobScheduleListOptions !== undefined)\n      {\n        clientRequestId = jobScheduleListOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobScheduleListOptions !== null && jobScheduleListOptions !== undefined)\n      {\n        returnClientRequestId = jobScheduleListOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobScheduleListOptions !== null && jobScheduleListOptions !== undefined)\n      {\n        ocpDate = jobScheduleListOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobschedules';\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (expand !== null && expand !== undefined) {\n      queryParamsArray.push('$expand=' + encodeURIComponent(expand));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudJobScheduleListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the job schedules in the specified account.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {JobScheduleListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listNextWithHttpOperationResponse(nextPageLink: string, options?: Models.JobScheduleListNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let jobScheduleListNextOptions = (options && options.jobScheduleListNextOptions !== undefined) ? options.jobScheduleListNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (jobScheduleListNextOptions !== null && jobScheduleListNextOptions !== undefined)\n      {\n        clientRequestId = jobScheduleListNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (jobScheduleListNextOptions !== null && jobScheduleListNextOptions !== undefined)\n      {\n        returnClientRequestId = jobScheduleListNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (jobScheduleListNextOptions !== null && jobScheduleListNextOptions !== undefined)\n      {\n        ocpDate = jobScheduleListNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudJobScheduleListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Checks the specified job schedule exists.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule which you want to\n   * check.\n   *\n   * @param {JobScheduleExistsOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {boolean} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  exists(jobScheduleId: string): Promise<boolean>;\n  exists(jobScheduleId: string, options: Models.JobScheduleExistsOptionalParams): Promise<boolean>;\n  exists(jobScheduleId: string, callback: msRest.ServiceCallback<boolean>): void;\n  exists(jobScheduleId: string, options: Models.JobScheduleExistsOptionalParams, callback: msRest.ServiceCallback<boolean>): void;\n  exists(jobScheduleId: string, options?: Models.JobScheduleExistsOptionalParams, callback?: msRest.ServiceCallback<boolean>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<boolean>;\n    if (!callback) {\n      return this.existsWithHttpOperationResponse(jobScheduleId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as boolean);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.existsWithHttpOperationResponse(jobScheduleId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as boolean;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Deletes a job schedule from the specified account.\n   *\n   * When you delete a job schedule, this also deletes all jobs and tasks under\n   * that schedule. When tasks are deleted, all the files in their working\n   * directories on the compute nodes are also deleted (the retention period is\n   * ignored). The job schedule statistics are no longer accessible once the job\n   * schedule is deleted, though they are still counted towards account lifetime\n   * statistics.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to delete.\n   *\n   * @param {JobScheduleDeleteMethodOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  deleteMethod(jobScheduleId: string): Promise<void>;\n  deleteMethod(jobScheduleId: string, options: Models.JobScheduleDeleteMethodOptionalParams): Promise<void>;\n  deleteMethod(jobScheduleId: string, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(jobScheduleId: string, options: Models.JobScheduleDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(jobScheduleId: string, options?: Models.JobScheduleDeleteMethodOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.deleteMethodWithHttpOperationResponse(jobScheduleId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.deleteMethodWithHttpOperationResponse(jobScheduleId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * Gets information about the specified job schedule.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to get.\n   *\n   * @param {JobScheduleGetOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudJobSchedule} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudJobSchedule} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  get(jobScheduleId: string): Promise<Models.CloudJobSchedule>;\n  get(jobScheduleId: string, options: Models.JobScheduleGetOptionalParams): Promise<Models.CloudJobSchedule>;\n  get(jobScheduleId: string, callback: msRest.ServiceCallback<Models.CloudJobSchedule>): void;\n  get(jobScheduleId: string, options: Models.JobScheduleGetOptionalParams, callback: msRest.ServiceCallback<Models.CloudJobSchedule>): void;\n  get(jobScheduleId: string, options?: Models.JobScheduleGetOptionalParams, callback?: msRest.ServiceCallback<Models.CloudJobSchedule>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudJobSchedule>;\n    if (!callback) {\n      return this.getWithHttpOperationResponse(jobScheduleId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudJobSchedule);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getWithHttpOperationResponse(jobScheduleId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudJobSchedule;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Updates the properties of the specified job schedule.\n   *\n   * This replaces only the job schedule properties specified in the request. For\n   * example, if the schedule property is not specified with this request, then\n   * the Batch service will keep the existing schedule. Changes to a job schedule\n   * only impact jobs created by the schedule after the update has taken place;\n   * currently running jobs are unaffected.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to update.\n   *\n   * @param {JobSchedulePatchParameter} jobSchedulePatchParameter The parameters\n   * for the request.\n   *\n   * @param {JobSchedulePatchOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  patch(jobScheduleId: string, jobSchedulePatchParameter: Models.JobSchedulePatchParameter): Promise<void>;\n  patch(jobScheduleId: string, jobSchedulePatchParameter: Models.JobSchedulePatchParameter, options: Models.JobSchedulePatchOptionalParams): Promise<void>;\n  patch(jobScheduleId: string, jobSchedulePatchParameter: Models.JobSchedulePatchParameter, callback: msRest.ServiceCallback<void>): void;\n  patch(jobScheduleId: string, jobSchedulePatchParameter: Models.JobSchedulePatchParameter, options: Models.JobSchedulePatchOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  patch(jobScheduleId: string, jobSchedulePatchParameter: Models.JobSchedulePatchParameter, options?: Models.JobSchedulePatchOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.patchWithHttpOperationResponse(jobScheduleId, jobSchedulePatchParameter, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.patchWithHttpOperationResponse(jobScheduleId, jobSchedulePatchParameter, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Updates the properties of the specified job schedule.\n   *\n   * This fully replaces all the updateable properties of the job schedule. For\n   * example, if the schedule property is not specified with this request, then\n   * the Batch service will remove the existing schedule. Changes to a job\n   * schedule only impact jobs created by the schedule after the update has taken\n   * place; currently running jobs are unaffected.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to update.\n   *\n   * @param {JobScheduleUpdateParameter} jobScheduleUpdateParameter The\n   * parameters for the request.\n   *\n   * @param {JobScheduleUpdateOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  update(jobScheduleId: string, jobScheduleUpdateParameter: Models.JobScheduleUpdateParameter): Promise<void>;\n  update(jobScheduleId: string, jobScheduleUpdateParameter: Models.JobScheduleUpdateParameter, options: Models.JobScheduleUpdateOptionalParams): Promise<void>;\n  update(jobScheduleId: string, jobScheduleUpdateParameter: Models.JobScheduleUpdateParameter, callback: msRest.ServiceCallback<void>): void;\n  update(jobScheduleId: string, jobScheduleUpdateParameter: Models.JobScheduleUpdateParameter, options: Models.JobScheduleUpdateOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  update(jobScheduleId: string, jobScheduleUpdateParameter: Models.JobScheduleUpdateParameter, options?: Models.JobScheduleUpdateOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.updateWithHttpOperationResponse(jobScheduleId, jobScheduleUpdateParameter, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.updateWithHttpOperationResponse(jobScheduleId, jobScheduleUpdateParameter, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Disables a job schedule.\n   *\n   * No new jobs will be created until the job schedule is enabled again.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to disable.\n   *\n   * @param {JobScheduleDisableOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  disable(jobScheduleId: string): Promise<void>;\n  disable(jobScheduleId: string, options: Models.JobScheduleDisableOptionalParams): Promise<void>;\n  disable(jobScheduleId: string, callback: msRest.ServiceCallback<void>): void;\n  disable(jobScheduleId: string, options: Models.JobScheduleDisableOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  disable(jobScheduleId: string, options?: Models.JobScheduleDisableOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.disableWithHttpOperationResponse(jobScheduleId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.disableWithHttpOperationResponse(jobScheduleId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Enables a job schedule.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to enable.\n   *\n   * @param {JobScheduleEnableOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  enable(jobScheduleId: string): Promise<void>;\n  enable(jobScheduleId: string, options: Models.JobScheduleEnableOptionalParams): Promise<void>;\n  enable(jobScheduleId: string, callback: msRest.ServiceCallback<void>): void;\n  enable(jobScheduleId: string, options: Models.JobScheduleEnableOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  enable(jobScheduleId: string, options?: Models.JobScheduleEnableOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.enableWithHttpOperationResponse(jobScheduleId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.enableWithHttpOperationResponse(jobScheduleId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Terminates a job schedule.\n   *\n   * @param {string} jobScheduleId The ID of the job schedule to terminates.\n   *\n   * @param {JobScheduleTerminateOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  terminate(jobScheduleId: string): Promise<void>;\n  terminate(jobScheduleId: string, options: Models.JobScheduleTerminateOptionalParams): Promise<void>;\n  terminate(jobScheduleId: string, callback: msRest.ServiceCallback<void>): void;\n  terminate(jobScheduleId: string, options: Models.JobScheduleTerminateOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  terminate(jobScheduleId: string, options?: Models.JobScheduleTerminateOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.terminateWithHttpOperationResponse(jobScheduleId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.terminateWithHttpOperationResponse(jobScheduleId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Adds a job schedule to the specified account.\n   *\n   * @param {JobScheduleAddParameter} cloudJobSchedule The job schedule to be\n   * added.\n   *\n   * @param {JobScheduleAddOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  add(cloudJobSchedule: Models.JobScheduleAddParameter): Promise<void>;\n  add(cloudJobSchedule: Models.JobScheduleAddParameter, options: Models.JobScheduleAddOptionalParams): Promise<void>;\n  add(cloudJobSchedule: Models.JobScheduleAddParameter, callback: msRest.ServiceCallback<void>): void;\n  add(cloudJobSchedule: Models.JobScheduleAddParameter, options: Models.JobScheduleAddOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  add(cloudJobSchedule: Models.JobScheduleAddParameter, options?: Models.JobScheduleAddOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.addWithHttpOperationResponse(cloudJobSchedule, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.addWithHttpOperationResponse(cloudJobSchedule, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the job schedules in the specified account.\n   *\n   * @param {JobScheduleListOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudJobScheduleListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudJobScheduleListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  list(): Promise<Models.CloudJobScheduleListResult>;\n  list(options: Models.JobScheduleListOptionalParams): Promise<Models.CloudJobScheduleListResult>;\n  list(callback: msRest.ServiceCallback<Models.CloudJobScheduleListResult>): void;\n  list(options: Models.JobScheduleListOptionalParams, callback: msRest.ServiceCallback<Models.CloudJobScheduleListResult>): void;\n  list(options?: Models.JobScheduleListOptionalParams, callback?: msRest.ServiceCallback<Models.CloudJobScheduleListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudJobScheduleListResult>;\n    if (!callback) {\n      return this.listWithHttpOperationResponse(options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudJobScheduleListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listWithHttpOperationResponse(options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudJobScheduleListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the job schedules in the specified account.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {JobScheduleListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudJobScheduleListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudJobScheduleListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listNext(nextPageLink: string): Promise<Models.CloudJobScheduleListResult>;\n  listNext(nextPageLink: string, options: Models.JobScheduleListNextOptionalParams): Promise<Models.CloudJobScheduleListResult>;\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CloudJobScheduleListResult>): void;\n  listNext(nextPageLink: string, options: Models.JobScheduleListNextOptionalParams, callback: msRest.ServiceCallback<Models.CloudJobScheduleListResult>): void;\n  listNext(nextPageLink: string, options?: Models.JobScheduleListNextOptionalParams, callback?: msRest.ServiceCallback<Models.CloudJobScheduleListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudJobScheduleListResult>;\n    if (!callback) {\n      return this.listNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudJobScheduleListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudJobScheduleListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/operations/jobSchedule.ts","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/mappers\";\nimport { BatchServiceClient } from \"../batchServiceClient\";\n\nconst WebResource = msRest.WebResource;\n\n/** Class representing a Task. */\nexport class Task {\n  private readonly client: BatchServiceClient;\n  /**\n   * Create a Task.\n   * @param {BatchServiceClient} client Reference to the service client.\n   */\n  constructor(client: BatchServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Adds a task to the specified job.\n   *\n   * The maximum lifetime of a task from addition to completion is 7 days. If a\n   * task has not completed within 7 days of being added it will be terminated by\n   * the Batch service and left in whatever state it was in at that time.\n   *\n   * @param {string} jobId The ID of the job to which the task is to be added.\n   *\n   * @param {TaskAddParameter} task The task to be added.\n   *\n   * @param {TaskAddOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async addWithHttpOperationResponse(jobId: string, task: Models.TaskAddParameter, options?: Models.TaskAddOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let taskAddOptions = (options && options.taskAddOptions !== undefined) ? options.taskAddOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (task === null || task === undefined) {\n        throw new Error('task cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (taskAddOptions !== null && taskAddOptions !== undefined)\n      {\n        timeout = taskAddOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (taskAddOptions !== null && taskAddOptions !== undefined)\n      {\n        clientRequestId = taskAddOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (taskAddOptions !== null && taskAddOptions !== undefined)\n      {\n        returnClientRequestId = taskAddOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (taskAddOptions !== null && taskAddOptions !== undefined)\n      {\n        ocpDate = taskAddOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (task !== null && task !== undefined) {\n        let requestModelMapper = Mappers.TaskAddParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, task, 'task');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(task, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 201) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the tasks that are associated with the specified job.\n   *\n   * For multi-instance tasks, information such as affinityId, executionInfo and\n   * nodeInfo refer to the primary task. Use the list subtasks API to retrieve\n   * information about subtasks.\n   *\n   * @param {string} jobId The ID of the job.\n   *\n   * @param {TaskListOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listWithHttpOperationResponse(jobId: string, options?: Models.TaskListOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let taskListOptions = (options && options.taskListOptions !== undefined) ? options.taskListOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let filter: any;\n    let select: any;\n    let expand: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (taskListOptions !== null && taskListOptions !== undefined)\n      {\n        filter = taskListOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (taskListOptions !== null && taskListOptions !== undefined)\n      {\n        select = taskListOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (taskListOptions !== null && taskListOptions !== undefined)\n      {\n        expand = taskListOptions.expand;\n        if (expand !== null && expand !== undefined && typeof expand.valueOf() !== 'string') {\n          throw new Error('expand must be of type string.');\n        }\n      }\n      if (taskListOptions !== null && taskListOptions !== undefined)\n      {\n        maxResults = taskListOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (taskListOptions !== null && taskListOptions !== undefined)\n      {\n        timeout = taskListOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (taskListOptions !== null && taskListOptions !== undefined)\n      {\n        clientRequestId = taskListOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (taskListOptions !== null && taskListOptions !== undefined)\n      {\n        returnClientRequestId = taskListOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (taskListOptions !== null && taskListOptions !== undefined)\n      {\n        ocpDate = taskListOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (expand !== null && expand !== undefined) {\n      queryParamsArray.push('$expand=' + encodeURIComponent(expand));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudTaskListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Adds a collection of tasks to the specified job.\n   *\n   * Note that each task must have a unique ID. The Batch service may not return\n   * the results for each task in the same order the tasks were submitted in this\n   * request. If the server times out or the connection is closed during the\n   * request, the request may have been partially or fully processed, or not at\n   * all. In such cases, the user should re-issue the request. Note that it is up\n   * to the user to correctly handle failures when re-issuing a request. For\n   * example, you should use the same task IDs during a retry so that if the\n   * prior operation succeeded, the retry will not create extra tasks\n   * unexpectedly. If the response contains any tasks which failed to add, a\n   * client can retry the request. In a retry, it is most efficient to resubmit\n   * only tasks that failed to add, and to omit tasks that were successfully\n   * added on the first attempt. The maximum lifetime of a task from addition to\n   * completion is 7 days. If a task has not completed within 7 days of being\n   * added it will be terminated by the Batch service and left in whatever state\n   * it was in at that time.\n   *\n   * @param {string} jobId The ID of the job to which the task collection is to\n   * be added.\n   *\n   * @param {TaskAddParameter[]} value The collection of tasks to add. The total\n   * serialized size of this collection must be less than 4MB. If it is greater\n   * than 4MB (for example if each task has 100's of resource files or\n   * environment variables), the request will fail with code\n   * 'RequestBodyTooLarge' and should be retried again with fewer tasks.\n   *\n   * @param {TaskAddCollectionOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async addCollectionWithHttpOperationResponse(jobId: string, value: Models.TaskAddParameter[], options?: Models.TaskAddCollectionOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let taskAddCollectionOptions = (options && options.taskAddCollectionOptions !== undefined) ? options.taskAddCollectionOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (value !== null && value !== undefined) {\n        if (value.length > 100)\n        {\n          throw new Error('\"value\" should satisfy the constraint - \"MaxItems\": 100');\n        }\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let taskCollection: any = {};\n    try {\n      if (taskAddCollectionOptions !== null && taskAddCollectionOptions !== undefined)\n      {\n        timeout = taskAddCollectionOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (taskAddCollectionOptions !== null && taskAddCollectionOptions !== undefined)\n      {\n        clientRequestId = taskAddCollectionOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (taskAddCollectionOptions !== null && taskAddCollectionOptions !== undefined)\n      {\n        returnClientRequestId = taskAddCollectionOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (taskAddCollectionOptions !== null && taskAddCollectionOptions !== undefined)\n      {\n        ocpDate = taskAddCollectionOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (value !== null && value !== undefined)\n      {\n        taskCollection.value = value;\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/addtaskcollection';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (taskCollection !== null && taskCollection !== undefined) {\n        let requestModelMapper = Mappers.TaskAddCollectionParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, taskCollection, 'taskCollection');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(taskCollection, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.TaskAddCollectionResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Deletes a task from the specified job.\n   *\n   * When a task is deleted, all of the files in its directory on the compute\n   * node where it ran are also deleted (regardless of the retention time). For\n   * multi-instance tasks, the delete task operation applies synchronously to the\n   * primary task; subtasks and their files are then deleted asynchronously in\n   * the background.\n   *\n   * @param {string} jobId The ID of the job from which to delete the task.\n   *\n   * @param {string} taskId The ID of the task to delete.\n   *\n   * @param {TaskDeleteMethodOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async deleteMethodWithHttpOperationResponse(jobId: string, taskId: string, options?: Models.TaskDeleteMethodOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let taskDeleteMethodOptions = (options && options.taskDeleteMethodOptions !== undefined) ? options.taskDeleteMethodOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (taskId === null || taskId === undefined || typeof taskId.valueOf() !== 'string') {\n        throw new Error('taskId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (taskDeleteMethodOptions !== null && taskDeleteMethodOptions !== undefined)\n      {\n        timeout = taskDeleteMethodOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (taskDeleteMethodOptions !== null && taskDeleteMethodOptions !== undefined)\n      {\n        clientRequestId = taskDeleteMethodOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (taskDeleteMethodOptions !== null && taskDeleteMethodOptions !== undefined)\n      {\n        returnClientRequestId = taskDeleteMethodOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (taskDeleteMethodOptions !== null && taskDeleteMethodOptions !== undefined)\n      {\n        ocpDate = taskDeleteMethodOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (taskDeleteMethodOptions !== null && taskDeleteMethodOptions !== undefined)\n      {\n        ifMatch = taskDeleteMethodOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (taskDeleteMethodOptions !== null && taskDeleteMethodOptions !== undefined)\n      {\n        ifNoneMatch = taskDeleteMethodOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (taskDeleteMethodOptions !== null && taskDeleteMethodOptions !== undefined)\n      {\n        ifModifiedSince = taskDeleteMethodOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (taskDeleteMethodOptions !== null && taskDeleteMethodOptions !== undefined)\n      {\n        ifUnmodifiedSince = taskDeleteMethodOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks/{taskId}';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    requestUrl = requestUrl.replace('{taskId}', encodeURIComponent(taskId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'DELETE';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Gets information about the specified task.\n   *\n   * For multi-instance tasks, information such as affinityId, executionInfo and\n   * nodeInfo refer to the primary task. Use the list subtasks API to retrieve\n   * information about subtasks.\n   *\n   * @param {string} jobId The ID of the job that contains the task.\n   *\n   * @param {string} taskId The ID of the task to get information about.\n   *\n   * @param {TaskGetOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getWithHttpOperationResponse(jobId: string, taskId: string, options?: Models.TaskGetOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let taskGetOptions = (options && options.taskGetOptions !== undefined) ? options.taskGetOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (taskId === null || taskId === undefined || typeof taskId.valueOf() !== 'string') {\n        throw new Error('taskId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let select: any;\n    let expand: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (taskGetOptions !== null && taskGetOptions !== undefined)\n      {\n        select = taskGetOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (taskGetOptions !== null && taskGetOptions !== undefined)\n      {\n        expand = taskGetOptions.expand;\n        if (expand !== null && expand !== undefined && typeof expand.valueOf() !== 'string') {\n          throw new Error('expand must be of type string.');\n        }\n      }\n      if (taskGetOptions !== null && taskGetOptions !== undefined)\n      {\n        timeout = taskGetOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (taskGetOptions !== null && taskGetOptions !== undefined)\n      {\n        clientRequestId = taskGetOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (taskGetOptions !== null && taskGetOptions !== undefined)\n      {\n        returnClientRequestId = taskGetOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (taskGetOptions !== null && taskGetOptions !== undefined)\n      {\n        ocpDate = taskGetOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (taskGetOptions !== null && taskGetOptions !== undefined)\n      {\n        ifMatch = taskGetOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (taskGetOptions !== null && taskGetOptions !== undefined)\n      {\n        ifNoneMatch = taskGetOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (taskGetOptions !== null && taskGetOptions !== undefined)\n      {\n        ifModifiedSince = taskGetOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (taskGetOptions !== null && taskGetOptions !== undefined)\n      {\n        ifUnmodifiedSince = taskGetOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks/{taskId}';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    requestUrl = requestUrl.replace('{taskId}', encodeURIComponent(taskId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (expand !== null && expand !== undefined) {\n      queryParamsArray.push('$expand=' + encodeURIComponent(expand));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudTask;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * Updates the properties of the specified task.\n   *\n   * @param {string} jobId The ID of the job containing the task.\n   *\n   * @param {string} taskId The ID of the task to update.\n   *\n   * @param {TaskUpdateOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async updateWithHttpOperationResponse(jobId: string, taskId: string, options?: Models.TaskUpdateOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let constraints = (options && options.constraints !== undefined) ? options.constraints : undefined;\n    let taskUpdateOptions = (options && options.taskUpdateOptions !== undefined) ? options.taskUpdateOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (taskId === null || taskId === undefined || typeof taskId.valueOf() !== 'string') {\n        throw new Error('taskId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    let taskUpdateParameter: any = {};\n    try {\n      if (taskUpdateOptions !== null && taskUpdateOptions !== undefined)\n      {\n        timeout = taskUpdateOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (taskUpdateOptions !== null && taskUpdateOptions !== undefined)\n      {\n        clientRequestId = taskUpdateOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (taskUpdateOptions !== null && taskUpdateOptions !== undefined)\n      {\n        returnClientRequestId = taskUpdateOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (taskUpdateOptions !== null && taskUpdateOptions !== undefined)\n      {\n        ocpDate = taskUpdateOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (taskUpdateOptions !== null && taskUpdateOptions !== undefined)\n      {\n        ifMatch = taskUpdateOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (taskUpdateOptions !== null && taskUpdateOptions !== undefined)\n      {\n        ifNoneMatch = taskUpdateOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (taskUpdateOptions !== null && taskUpdateOptions !== undefined)\n      {\n        ifModifiedSince = taskUpdateOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (taskUpdateOptions !== null && taskUpdateOptions !== undefined)\n      {\n        ifUnmodifiedSince = taskUpdateOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n      if (constraints !== null && constraints !== undefined)\n      {\n        taskUpdateParameter.constraints = constraints;\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks/{taskId}';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    requestUrl = requestUrl.replace('{taskId}', encodeURIComponent(taskId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'PUT';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (taskUpdateParameter !== null && taskUpdateParameter !== undefined) {\n        let requestModelMapper = Mappers.TaskUpdateParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, taskUpdateParameter, 'taskUpdateParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(taskUpdateParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the subtasks that are associated with the specified\n   * multi-instance task.\n   *\n   * If the task is not a multi-instance task then this returns an empty\n   * collection.\n   *\n   * @param {string} jobId The ID of the job.\n   *\n   * @param {string} taskId The ID of the task.\n   *\n   * @param {TaskListSubtasksOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listSubtasksWithHttpOperationResponse(jobId: string, taskId: string, options?: Models.TaskListSubtasksOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let taskListSubtasksOptions = (options && options.taskListSubtasksOptions !== undefined) ? options.taskListSubtasksOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (taskId === null || taskId === undefined || typeof taskId.valueOf() !== 'string') {\n        throw new Error('taskId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let select: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (taskListSubtasksOptions !== null && taskListSubtasksOptions !== undefined)\n      {\n        select = taskListSubtasksOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (taskListSubtasksOptions !== null && taskListSubtasksOptions !== undefined)\n      {\n        timeout = taskListSubtasksOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (taskListSubtasksOptions !== null && taskListSubtasksOptions !== undefined)\n      {\n        clientRequestId = taskListSubtasksOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (taskListSubtasksOptions !== null && taskListSubtasksOptions !== undefined)\n      {\n        returnClientRequestId = taskListSubtasksOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (taskListSubtasksOptions !== null && taskListSubtasksOptions !== undefined)\n      {\n        ocpDate = taskListSubtasksOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks/{taskId}/subtasksinfo';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    requestUrl = requestUrl.replace('{taskId}', encodeURIComponent(taskId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudTaskListSubtasksResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Terminates the specified task.\n   *\n   * When the task has been terminated, it moves to the completed state. For\n   * multi-instance tasks, the terminate task operation applies synchronously to\n   * the primary task; subtasks are then terminated asynchronously in the\n   * background.\n   *\n   * @param {string} jobId The ID of the job containing the task.\n   *\n   * @param {string} taskId The ID of the task to terminate.\n   *\n   * @param {TaskTerminateOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async terminateWithHttpOperationResponse(jobId: string, taskId: string, options?: Models.TaskTerminateOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let taskTerminateOptions = (options && options.taskTerminateOptions !== undefined) ? options.taskTerminateOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (taskId === null || taskId === undefined || typeof taskId.valueOf() !== 'string') {\n        throw new Error('taskId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (taskTerminateOptions !== null && taskTerminateOptions !== undefined)\n      {\n        timeout = taskTerminateOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (taskTerminateOptions !== null && taskTerminateOptions !== undefined)\n      {\n        clientRequestId = taskTerminateOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (taskTerminateOptions !== null && taskTerminateOptions !== undefined)\n      {\n        returnClientRequestId = taskTerminateOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (taskTerminateOptions !== null && taskTerminateOptions !== undefined)\n      {\n        ocpDate = taskTerminateOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (taskTerminateOptions !== null && taskTerminateOptions !== undefined)\n      {\n        ifMatch = taskTerminateOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (taskTerminateOptions !== null && taskTerminateOptions !== undefined)\n      {\n        ifNoneMatch = taskTerminateOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (taskTerminateOptions !== null && taskTerminateOptions !== undefined)\n      {\n        ifModifiedSince = taskTerminateOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (taskTerminateOptions !== null && taskTerminateOptions !== undefined)\n      {\n        ifUnmodifiedSince = taskTerminateOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks/{taskId}/terminate';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    requestUrl = requestUrl.replace('{taskId}', encodeURIComponent(taskId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 204) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Reactivates a task, allowing it to run again even if its retry\n   * count has been exhausted.\n   *\n   * Reactivation makes a task eligible to be retried again up to its maximum\n   * retry count. The task's state is changed to active. As the task is no longer\n   * in the completed state, any previous exit code or failure information is no\n   * longer available after reactivation. Each time a task is reactivated, its\n   * retry count is reset to 0. Reactivation will fail for tasks that are not\n   * completed or that previously completed successfully (with an exit code of\n   * 0). Additionally, it will fail if the job has completed (or is terminating\n   * or deleting).\n   *\n   * @param {string} jobId The ID of the job containing the task.\n   *\n   * @param {string} taskId The ID of the task to reactivate.\n   *\n   * @param {TaskReactivateOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async reactivateWithHttpOperationResponse(jobId: string, taskId: string, options?: Models.TaskReactivateOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let taskReactivateOptions = (options && options.taskReactivateOptions !== undefined) ? options.taskReactivateOptions : undefined;\n    // Validate\n    try {\n      if (jobId === null || jobId === undefined || typeof jobId.valueOf() !== 'string') {\n        throw new Error('jobId cannot be null or undefined and it must be of type string.');\n      }\n      if (taskId === null || taskId === undefined || typeof taskId.valueOf() !== 'string') {\n        throw new Error('taskId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let ifMatch: any;\n    let ifNoneMatch: any;\n    let ifModifiedSince: any;\n    let ifUnmodifiedSince: any;\n    try {\n      if (taskReactivateOptions !== null && taskReactivateOptions !== undefined)\n      {\n        timeout = taskReactivateOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (taskReactivateOptions !== null && taskReactivateOptions !== undefined)\n      {\n        clientRequestId = taskReactivateOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (taskReactivateOptions !== null && taskReactivateOptions !== undefined)\n      {\n        returnClientRequestId = taskReactivateOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (taskReactivateOptions !== null && taskReactivateOptions !== undefined)\n      {\n        ocpDate = taskReactivateOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (taskReactivateOptions !== null && taskReactivateOptions !== undefined)\n      {\n        ifMatch = taskReactivateOptions.ifMatch;\n        if (ifMatch !== null && ifMatch !== undefined && typeof ifMatch.valueOf() !== 'string') {\n          throw new Error('ifMatch must be of type string.');\n        }\n      }\n      if (taskReactivateOptions !== null && taskReactivateOptions !== undefined)\n      {\n        ifNoneMatch = taskReactivateOptions.ifNoneMatch;\n        if (ifNoneMatch !== null && ifNoneMatch !== undefined && typeof ifNoneMatch.valueOf() !== 'string') {\n          throw new Error('ifNoneMatch must be of type string.');\n        }\n      }\n      if (taskReactivateOptions !== null && taskReactivateOptions !== undefined)\n      {\n        ifModifiedSince = taskReactivateOptions.ifModifiedSince;\n        if (ifModifiedSince && !(ifModifiedSince instanceof Date ||\n            (typeof (ifModifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifModifiedSince as string))))) {\n              throw new Error('ifModifiedSince must be of type date.');\n            }\n      }\n      if (taskReactivateOptions !== null && taskReactivateOptions !== undefined)\n      {\n        ifUnmodifiedSince = taskReactivateOptions.ifUnmodifiedSince;\n        if (ifUnmodifiedSince && !(ifUnmodifiedSince instanceof Date ||\n            (typeof (ifUnmodifiedSince as string).valueOf() === 'string' && !isNaN(Date.parse(ifUnmodifiedSince as string))))) {\n              throw new Error('ifUnmodifiedSince must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'jobs/{jobId}/tasks/{taskId}/reactivate';\n    requestUrl = requestUrl.replace('{jobId}', encodeURIComponent(jobId));\n    requestUrl = requestUrl.replace('{taskId}', encodeURIComponent(taskId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if (ifMatch !== undefined && ifMatch !== null) {\n      httpRequest.headers['If-Match'] = ifMatch;\n    }\n    if (ifNoneMatch !== undefined && ifNoneMatch !== null) {\n      httpRequest.headers['If-None-Match'] = ifNoneMatch;\n    }\n    if (ifModifiedSince !== undefined && ifModifiedSince !== null) {\n      httpRequest.headers['If-Modified-Since'] = ifModifiedSince instanceof Date ? ifModifiedSince.toUTCString() : ifModifiedSince;\n    }\n    if (ifUnmodifiedSince !== undefined && ifUnmodifiedSince !== null) {\n      httpRequest.headers['If-Unmodified-Since'] = ifUnmodifiedSince instanceof Date ? ifUnmodifiedSince.toUTCString() : ifUnmodifiedSince;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 204) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists all of the tasks that are associated with the specified job.\n   *\n   * For multi-instance tasks, information such as affinityId, executionInfo and\n   * nodeInfo refer to the primary task. Use the list subtasks API to retrieve\n   * information about subtasks.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {TaskListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listNextWithHttpOperationResponse(nextPageLink: string, options?: Models.TaskListNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let taskListNextOptions = (options && options.taskListNextOptions !== undefined) ? options.taskListNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (taskListNextOptions !== null && taskListNextOptions !== undefined)\n      {\n        clientRequestId = taskListNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (taskListNextOptions !== null && taskListNextOptions !== undefined)\n      {\n        returnClientRequestId = taskListNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (taskListNextOptions !== null && taskListNextOptions !== undefined)\n      {\n        ocpDate = taskListNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.CloudTaskListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Adds a task to the specified job.\n   *\n   * The maximum lifetime of a task from addition to completion is 7 days. If a\n   * task has not completed within 7 days of being added it will be terminated by\n   * the Batch service and left in whatever state it was in at that time.\n   *\n   * @param {string} jobId The ID of the job to which the task is to be added.\n   *\n   * @param {TaskAddParameter} task The task to be added.\n   *\n   * @param {TaskAddOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  add(jobId: string, task: Models.TaskAddParameter): Promise<void>;\n  add(jobId: string, task: Models.TaskAddParameter, options: Models.TaskAddOptionalParams): Promise<void>;\n  add(jobId: string, task: Models.TaskAddParameter, callback: msRest.ServiceCallback<void>): void;\n  add(jobId: string, task: Models.TaskAddParameter, options: Models.TaskAddOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  add(jobId: string, task: Models.TaskAddParameter, options?: Models.TaskAddOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.addWithHttpOperationResponse(jobId, task, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.addWithHttpOperationResponse(jobId, task, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the tasks that are associated with the specified job.\n   *\n   * For multi-instance tasks, information such as affinityId, executionInfo and\n   * nodeInfo refer to the primary task. Use the list subtasks API to retrieve\n   * information about subtasks.\n   *\n   * @param {string} jobId The ID of the job.\n   *\n   * @param {TaskListOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudTaskListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudTaskListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  list(jobId: string): Promise<Models.CloudTaskListResult>;\n  list(jobId: string, options: Models.TaskListOptionalParams): Promise<Models.CloudTaskListResult>;\n  list(jobId: string, callback: msRest.ServiceCallback<Models.CloudTaskListResult>): void;\n  list(jobId: string, options: Models.TaskListOptionalParams, callback: msRest.ServiceCallback<Models.CloudTaskListResult>): void;\n  list(jobId: string, options?: Models.TaskListOptionalParams, callback?: msRest.ServiceCallback<Models.CloudTaskListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudTaskListResult>;\n    if (!callback) {\n      return this.listWithHttpOperationResponse(jobId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudTaskListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listWithHttpOperationResponse(jobId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudTaskListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Adds a collection of tasks to the specified job.\n   *\n   * Note that each task must have a unique ID. The Batch service may not return\n   * the results for each task in the same order the tasks were submitted in this\n   * request. If the server times out or the connection is closed during the\n   * request, the request may have been partially or fully processed, or not at\n   * all. In such cases, the user should re-issue the request. Note that it is up\n   * to the user to correctly handle failures when re-issuing a request. For\n   * example, you should use the same task IDs during a retry so that if the\n   * prior operation succeeded, the retry will not create extra tasks\n   * unexpectedly. If the response contains any tasks which failed to add, a\n   * client can retry the request. In a retry, it is most efficient to resubmit\n   * only tasks that failed to add, and to omit tasks that were successfully\n   * added on the first attempt. The maximum lifetime of a task from addition to\n   * completion is 7 days. If a task has not completed within 7 days of being\n   * added it will be terminated by the Batch service and left in whatever state\n   * it was in at that time.\n   *\n   * @param {string} jobId The ID of the job to which the task collection is to\n   * be added.\n   *\n   * @param {TaskAddParameter[]} value The collection of tasks to add. The total\n   * serialized size of this collection must be less than 4MB. If it is greater\n   * than 4MB (for example if each task has 100's of resource files or\n   * environment variables), the request will fail with code\n   * 'RequestBodyTooLarge' and should be retried again with fewer tasks.\n   *\n   * @param {TaskAddCollectionOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.TaskAddCollectionResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.TaskAddCollectionResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  addCollection(jobId: string, value: Models.TaskAddParameter[]): Promise<Models.TaskAddCollectionResult>;\n  addCollection(jobId: string, value: Models.TaskAddParameter[], options: Models.TaskAddCollectionOptionalParams): Promise<Models.TaskAddCollectionResult>;\n  addCollection(jobId: string, value: Models.TaskAddParameter[], callback: msRest.ServiceCallback<Models.TaskAddCollectionResult>): void;\n  addCollection(jobId: string, value: Models.TaskAddParameter[], options: Models.TaskAddCollectionOptionalParams, callback: msRest.ServiceCallback<Models.TaskAddCollectionResult>): void;\n  addCollection(jobId: string, value: Models.TaskAddParameter[], options?: Models.TaskAddCollectionOptionalParams, callback?: msRest.ServiceCallback<Models.TaskAddCollectionResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.TaskAddCollectionResult>;\n    if (!callback) {\n      return this.addCollectionWithHttpOperationResponse(jobId, value, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.TaskAddCollectionResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.addCollectionWithHttpOperationResponse(jobId, value, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.TaskAddCollectionResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Deletes a task from the specified job.\n   *\n   * When a task is deleted, all of the files in its directory on the compute\n   * node where it ran are also deleted (regardless of the retention time). For\n   * multi-instance tasks, the delete task operation applies synchronously to the\n   * primary task; subtasks and their files are then deleted asynchronously in\n   * the background.\n   *\n   * @param {string} jobId The ID of the job from which to delete the task.\n   *\n   * @param {string} taskId The ID of the task to delete.\n   *\n   * @param {TaskDeleteMethodOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  deleteMethod(jobId: string, taskId: string): Promise<void>;\n  deleteMethod(jobId: string, taskId: string, options: Models.TaskDeleteMethodOptionalParams): Promise<void>;\n  deleteMethod(jobId: string, taskId: string, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(jobId: string, taskId: string, options: Models.TaskDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(jobId: string, taskId: string, options?: Models.TaskDeleteMethodOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.deleteMethodWithHttpOperationResponse(jobId, taskId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.deleteMethodWithHttpOperationResponse(jobId, taskId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Gets information about the specified task.\n   *\n   * For multi-instance tasks, information such as affinityId, executionInfo and\n   * nodeInfo refer to the primary task. Use the list subtasks API to retrieve\n   * information about subtasks.\n   *\n   * @param {string} jobId The ID of the job that contains the task.\n   *\n   * @param {string} taskId The ID of the task to get information about.\n   *\n   * @param {TaskGetOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudTask} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudTask} for more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  get(jobId: string, taskId: string): Promise<Models.CloudTask>;\n  get(jobId: string, taskId: string, options: Models.TaskGetOptionalParams): Promise<Models.CloudTask>;\n  get(jobId: string, taskId: string, callback: msRest.ServiceCallback<Models.CloudTask>): void;\n  get(jobId: string, taskId: string, options: Models.TaskGetOptionalParams, callback: msRest.ServiceCallback<Models.CloudTask>): void;\n  get(jobId: string, taskId: string, options?: Models.TaskGetOptionalParams, callback?: msRest.ServiceCallback<Models.CloudTask>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudTask>;\n    if (!callback) {\n      return this.getWithHttpOperationResponse(jobId, taskId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudTask);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getWithHttpOperationResponse(jobId, taskId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudTask;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * Updates the properties of the specified task.\n   *\n   * @param {string} jobId The ID of the job containing the task.\n   *\n   * @param {string} taskId The ID of the task to update.\n   *\n   * @param {TaskUpdateOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  update(jobId: string, taskId: string): Promise<void>;\n  update(jobId: string, taskId: string, options: Models.TaskUpdateOptionalParams): Promise<void>;\n  update(jobId: string, taskId: string, callback: msRest.ServiceCallback<void>): void;\n  update(jobId: string, taskId: string, options: Models.TaskUpdateOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  update(jobId: string, taskId: string, options?: Models.TaskUpdateOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.updateWithHttpOperationResponse(jobId, taskId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.updateWithHttpOperationResponse(jobId, taskId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the subtasks that are associated with the specified\n   * multi-instance task.\n   *\n   * If the task is not a multi-instance task then this returns an empty\n   * collection.\n   *\n   * @param {string} jobId The ID of the job.\n   *\n   * @param {string} taskId The ID of the task.\n   *\n   * @param {TaskListSubtasksOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudTaskListSubtasksResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudTaskListSubtasksResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listSubtasks(jobId: string, taskId: string): Promise<Models.CloudTaskListSubtasksResult>;\n  listSubtasks(jobId: string, taskId: string, options: Models.TaskListSubtasksOptionalParams): Promise<Models.CloudTaskListSubtasksResult>;\n  listSubtasks(jobId: string, taskId: string, callback: msRest.ServiceCallback<Models.CloudTaskListSubtasksResult>): void;\n  listSubtasks(jobId: string, taskId: string, options: Models.TaskListSubtasksOptionalParams, callback: msRest.ServiceCallback<Models.CloudTaskListSubtasksResult>): void;\n  listSubtasks(jobId: string, taskId: string, options?: Models.TaskListSubtasksOptionalParams, callback?: msRest.ServiceCallback<Models.CloudTaskListSubtasksResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudTaskListSubtasksResult>;\n    if (!callback) {\n      return this.listSubtasksWithHttpOperationResponse(jobId, taskId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudTaskListSubtasksResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listSubtasksWithHttpOperationResponse(jobId, taskId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudTaskListSubtasksResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Terminates the specified task.\n   *\n   * When the task has been terminated, it moves to the completed state. For\n   * multi-instance tasks, the terminate task operation applies synchronously to\n   * the primary task; subtasks are then terminated asynchronously in the\n   * background.\n   *\n   * @param {string} jobId The ID of the job containing the task.\n   *\n   * @param {string} taskId The ID of the task to terminate.\n   *\n   * @param {TaskTerminateOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  terminate(jobId: string, taskId: string): Promise<void>;\n  terminate(jobId: string, taskId: string, options: Models.TaskTerminateOptionalParams): Promise<void>;\n  terminate(jobId: string, taskId: string, callback: msRest.ServiceCallback<void>): void;\n  terminate(jobId: string, taskId: string, options: Models.TaskTerminateOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  terminate(jobId: string, taskId: string, options?: Models.TaskTerminateOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.terminateWithHttpOperationResponse(jobId, taskId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.terminateWithHttpOperationResponse(jobId, taskId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Reactivates a task, allowing it to run again even if its retry\n   * count has been exhausted.\n   *\n   * Reactivation makes a task eligible to be retried again up to its maximum\n   * retry count. The task's state is changed to active. As the task is no longer\n   * in the completed state, any previous exit code or failure information is no\n   * longer available after reactivation. Each time a task is reactivated, its\n   * retry count is reset to 0. Reactivation will fail for tasks that are not\n   * completed or that previously completed successfully (with an exit code of\n   * 0). Additionally, it will fail if the job has completed (or is terminating\n   * or deleting).\n   *\n   * @param {string} jobId The ID of the job containing the task.\n   *\n   * @param {string} taskId The ID of the task to reactivate.\n   *\n   * @param {TaskReactivateOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  reactivate(jobId: string, taskId: string): Promise<void>;\n  reactivate(jobId: string, taskId: string, options: Models.TaskReactivateOptionalParams): Promise<void>;\n  reactivate(jobId: string, taskId: string, callback: msRest.ServiceCallback<void>): void;\n  reactivate(jobId: string, taskId: string, options: Models.TaskReactivateOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  reactivate(jobId: string, taskId: string, options?: Models.TaskReactivateOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.reactivateWithHttpOperationResponse(jobId, taskId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.reactivateWithHttpOperationResponse(jobId, taskId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists all of the tasks that are associated with the specified job.\n   *\n   * For multi-instance tasks, information such as affinityId, executionInfo and\n   * nodeInfo refer to the primary task. Use the list subtasks API to retrieve\n   * information about subtasks.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {TaskListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.CloudTaskListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.CloudTaskListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listNext(nextPageLink: string): Promise<Models.CloudTaskListResult>;\n  listNext(nextPageLink: string, options: Models.TaskListNextOptionalParams): Promise<Models.CloudTaskListResult>;\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CloudTaskListResult>): void;\n  listNext(nextPageLink: string, options: Models.TaskListNextOptionalParams, callback: msRest.ServiceCallback<Models.CloudTaskListResult>): void;\n  listNext(nextPageLink: string, options?: Models.TaskListNextOptionalParams, callback?: msRest.ServiceCallback<Models.CloudTaskListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.CloudTaskListResult>;\n    if (!callback) {\n      return this.listNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.CloudTaskListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.CloudTaskListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/operations/task.ts","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/mappers\";\nimport { BatchServiceClient } from \"../batchServiceClient\";\n\nconst WebResource = msRest.WebResource;\n\n/** Class representing a ComputeNodeOperations. */\nexport class ComputeNodeOperations {\n  private readonly client: BatchServiceClient;\n  /**\n   * Create a ComputeNodeOperations.\n   * @param {BatchServiceClient} client Reference to the service client.\n   */\n  constructor(client: BatchServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Adds a user account to the specified compute node.\n   *\n   * You can add a user account to a node only when it is in the idle or running\n   * state.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the machine on which you want to create a\n   * user account.\n   *\n   * @param {ComputeNodeUser} user The user account to be created.\n   *\n   * @param {ComputeNodeAddUserOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async addUserWithHttpOperationResponse(poolId: string, nodeId: string, user: Models.ComputeNodeUser, options?: Models.ComputeNodeAddUserOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let computeNodeAddUserOptions = (options && options.computeNodeAddUserOptions !== undefined) ? options.computeNodeAddUserOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (user === null || user === undefined) {\n        throw new Error('user cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (computeNodeAddUserOptions !== null && computeNodeAddUserOptions !== undefined)\n      {\n        timeout = computeNodeAddUserOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (computeNodeAddUserOptions !== null && computeNodeAddUserOptions !== undefined)\n      {\n        clientRequestId = computeNodeAddUserOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeAddUserOptions !== null && computeNodeAddUserOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeAddUserOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeAddUserOptions !== null && computeNodeAddUserOptions !== undefined)\n      {\n        ocpDate = computeNodeAddUserOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/users';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (user !== null && user !== undefined) {\n        let requestModelMapper = Mappers.ComputeNodeUser;\n        requestModel = client.serializer.serialize(requestModelMapper, user, 'user');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(user, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 201) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Deletes a user account from the specified compute node.\n   *\n   * You can delete a user account to a node only when it is in the idle or\n   * running state.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the machine on which you want to delete a\n   * user account.\n   *\n   * @param {string} userName The name of the user account to delete.\n   *\n   * @param {ComputeNodeDeleteUserOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async deleteUserWithHttpOperationResponse(poolId: string, nodeId: string, userName: string, options?: Models.ComputeNodeDeleteUserOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let computeNodeDeleteUserOptions = (options && options.computeNodeDeleteUserOptions !== undefined) ? options.computeNodeDeleteUserOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (userName === null || userName === undefined || typeof userName.valueOf() !== 'string') {\n        throw new Error('userName cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (computeNodeDeleteUserOptions !== null && computeNodeDeleteUserOptions !== undefined)\n      {\n        timeout = computeNodeDeleteUserOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (computeNodeDeleteUserOptions !== null && computeNodeDeleteUserOptions !== undefined)\n      {\n        clientRequestId = computeNodeDeleteUserOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeDeleteUserOptions !== null && computeNodeDeleteUserOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeDeleteUserOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeDeleteUserOptions !== null && computeNodeDeleteUserOptions !== undefined)\n      {\n        ocpDate = computeNodeDeleteUserOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/users/{userName}';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    requestUrl = requestUrl.replace('{userName}', encodeURIComponent(userName));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'DELETE';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Updates the password and expiration time of a user account on the\n   * specified compute node.\n   *\n   * This operation replaces of all the updateable properties of the account. For\n   * example, if the expiryTime element is not specified, the current value is\n   * replaced with the default value, not left unmodified. You can update a user\n   * account on a node only when it is in the idle or running state.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the machine on which you want to update a\n   * user account.\n   *\n   * @param {string} userName The name of the user account to update.\n   *\n   * @param {NodeUpdateUserParameter} nodeUpdateUserParameter The parameters for\n   * the request.\n   *\n   * @param {ComputeNodeUpdateUserOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async updateUserWithHttpOperationResponse(poolId: string, nodeId: string, userName: string, nodeUpdateUserParameter: Models.NodeUpdateUserParameter, options?: Models.ComputeNodeUpdateUserOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let computeNodeUpdateUserOptions = (options && options.computeNodeUpdateUserOptions !== undefined) ? options.computeNodeUpdateUserOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (userName === null || userName === undefined || typeof userName.valueOf() !== 'string') {\n        throw new Error('userName cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeUpdateUserParameter === null || nodeUpdateUserParameter === undefined) {\n        throw new Error('nodeUpdateUserParameter cannot be null or undefined.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (computeNodeUpdateUserOptions !== null && computeNodeUpdateUserOptions !== undefined)\n      {\n        timeout = computeNodeUpdateUserOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (computeNodeUpdateUserOptions !== null && computeNodeUpdateUserOptions !== undefined)\n      {\n        clientRequestId = computeNodeUpdateUserOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeUpdateUserOptions !== null && computeNodeUpdateUserOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeUpdateUserOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeUpdateUserOptions !== null && computeNodeUpdateUserOptions !== undefined)\n      {\n        ocpDate = computeNodeUpdateUserOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/users/{userName}';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    requestUrl = requestUrl.replace('{userName}', encodeURIComponent(userName));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'PUT';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (nodeUpdateUserParameter !== null && nodeUpdateUserParameter !== undefined) {\n        let requestModelMapper = Mappers.NodeUpdateUserParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, nodeUpdateUserParameter, 'nodeUpdateUserParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(nodeUpdateUserParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Gets information about the specified compute node.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node that you want to get\n   * information about.\n   *\n   * @param {ComputeNodeGetOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getWithHttpOperationResponse(poolId: string, nodeId: string, options?: Models.ComputeNodeGetOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let computeNodeGetOptions = (options && options.computeNodeGetOptions !== undefined) ? options.computeNodeGetOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let select: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (computeNodeGetOptions !== null && computeNodeGetOptions !== undefined)\n      {\n        select = computeNodeGetOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (computeNodeGetOptions !== null && computeNodeGetOptions !== undefined)\n      {\n        timeout = computeNodeGetOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (computeNodeGetOptions !== null && computeNodeGetOptions !== undefined)\n      {\n        clientRequestId = computeNodeGetOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeGetOptions !== null && computeNodeGetOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeGetOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeGetOptions !== null && computeNodeGetOptions !== undefined)\n      {\n        ocpDate = computeNodeGetOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.ComputeNode;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Restarts the specified compute node.\n   *\n   * You can restart a node only if it is in an idle or running state.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node that you want to restart.\n   *\n   * @param {ComputeNodeRebootOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async rebootWithHttpOperationResponse(poolId: string, nodeId: string, options?: Models.ComputeNodeRebootOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let nodeRebootOption = (options && options.nodeRebootOption !== undefined) ? options.nodeRebootOption : undefined;\n    let computeNodeRebootOptions = (options && options.computeNodeRebootOptions !== undefined) ? options.computeNodeRebootOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeRebootOption) {\n        let allowedValues = [ 'requeue', 'terminate', 'taskCompletion', 'retainedData' ];\n        if (!allowedValues.some( function(item) { return item === nodeRebootOption; })) {\n          throw new Error(nodeRebootOption + ' is not a valid value. The valid values are: ' + allowedValues);\n        }\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let nodeRebootParameter: any;\n    try {\n      if (computeNodeRebootOptions !== null && computeNodeRebootOptions !== undefined)\n      {\n        timeout = computeNodeRebootOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (computeNodeRebootOptions !== null && computeNodeRebootOptions !== undefined)\n      {\n        clientRequestId = computeNodeRebootOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeRebootOptions !== null && computeNodeRebootOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeRebootOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeRebootOptions !== null && computeNodeRebootOptions !== undefined)\n      {\n        ocpDate = computeNodeRebootOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (nodeRebootOption !== null && nodeRebootOption !== undefined)\n      {\n        nodeRebootParameter = {};\n        nodeRebootParameter.nodeRebootOption = nodeRebootOption;\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/reboot';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (nodeRebootParameter !== null && nodeRebootParameter !== undefined) {\n        let requestModelMapper = Mappers.NodeRebootParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, nodeRebootParameter, 'nodeRebootParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(nodeRebootParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Reinstalls the operating system on the specified compute node.\n   *\n   * You can reinstall the operating system on a node only if it is in an idle or\n   * running state. This API can be invoked only on pools created with the cloud\n   * service configuration property.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node that you want to restart.\n   *\n   * @param {ComputeNodeReimageOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async reimageWithHttpOperationResponse(poolId: string, nodeId: string, options?: Models.ComputeNodeReimageOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let nodeReimageOption = (options && options.nodeReimageOption !== undefined) ? options.nodeReimageOption : undefined;\n    let computeNodeReimageOptions = (options && options.computeNodeReimageOptions !== undefined) ? options.computeNodeReimageOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeReimageOption) {\n        let allowedValues = [ 'requeue', 'terminate', 'taskCompletion', 'retainedData' ];\n        if (!allowedValues.some( function(item) { return item === nodeReimageOption; })) {\n          throw new Error(nodeReimageOption + ' is not a valid value. The valid values are: ' + allowedValues);\n        }\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let nodeReimageParameter: any;\n    try {\n      if (computeNodeReimageOptions !== null && computeNodeReimageOptions !== undefined)\n      {\n        timeout = computeNodeReimageOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (computeNodeReimageOptions !== null && computeNodeReimageOptions !== undefined)\n      {\n        clientRequestId = computeNodeReimageOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeReimageOptions !== null && computeNodeReimageOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeReimageOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeReimageOptions !== null && computeNodeReimageOptions !== undefined)\n      {\n        ocpDate = computeNodeReimageOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (nodeReimageOption !== null && nodeReimageOption !== undefined)\n      {\n        nodeReimageParameter = {};\n        nodeReimageParameter.nodeReimageOption = nodeReimageOption;\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/reimage';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (nodeReimageParameter !== null && nodeReimageParameter !== undefined) {\n        let requestModelMapper = Mappers.NodeReimageParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, nodeReimageParameter, 'nodeReimageParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(nodeReimageParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 202) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Disables task scheduling on the specified compute node.\n   *\n   * You can disable task scheduling on a node only if its current scheduling\n   * state is enabled.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node on which you want to\n   * disable task scheduling.\n   *\n   * @param {ComputeNodeDisableSchedulingOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async disableSchedulingWithHttpOperationResponse(poolId: string, nodeId: string, options?: Models.ComputeNodeDisableSchedulingOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let nodeDisableSchedulingOption = (options && options.nodeDisableSchedulingOption !== undefined) ? options.nodeDisableSchedulingOption : undefined;\n    let computeNodeDisableSchedulingOptions = (options && options.computeNodeDisableSchedulingOptions !== undefined) ? options.computeNodeDisableSchedulingOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeDisableSchedulingOption) {\n        let allowedValues = [ 'requeue', 'terminate', 'taskCompletion' ];\n        if (!allowedValues.some( function(item) { return item === nodeDisableSchedulingOption; })) {\n          throw new Error(nodeDisableSchedulingOption + ' is not a valid value. The valid values are: ' + allowedValues);\n        }\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    let nodeDisableSchedulingParameter: any;\n    try {\n      if (computeNodeDisableSchedulingOptions !== null && computeNodeDisableSchedulingOptions !== undefined)\n      {\n        timeout = computeNodeDisableSchedulingOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (computeNodeDisableSchedulingOptions !== null && computeNodeDisableSchedulingOptions !== undefined)\n      {\n        clientRequestId = computeNodeDisableSchedulingOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeDisableSchedulingOptions !== null && computeNodeDisableSchedulingOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeDisableSchedulingOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeDisableSchedulingOptions !== null && computeNodeDisableSchedulingOptions !== undefined)\n      {\n        ocpDate = computeNodeDisableSchedulingOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n      if (nodeDisableSchedulingOption !== null && nodeDisableSchedulingOption !== undefined)\n      {\n        nodeDisableSchedulingParameter = {};\n        nodeDisableSchedulingParameter.nodeDisableSchedulingOption = nodeDisableSchedulingOption;\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/disablescheduling';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    // Serialize Request\n    let requestContent = null;\n    let requestModel = null;\n    try {\n      if (nodeDisableSchedulingParameter !== null && nodeDisableSchedulingParameter !== undefined) {\n        let requestModelMapper = Mappers.NodeDisableSchedulingParameter;\n        requestModel = client.serializer.serialize(requestModelMapper, nodeDisableSchedulingParameter, 'nodeDisableSchedulingParameter');\n        requestContent = JSON.stringify(requestModel);\n      }\n    } catch (error) {\n      let serializationError = new Error(`Error \"${error.message}\" occurred in serializing the ` +\n          `payload - ${JSON.stringify(nodeDisableSchedulingParameter, null, 2)}.`);\n      return Promise.reject(serializationError);\n    }\n    httpRequest.body = requestContent;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Enables task scheduling on the specified compute node.\n   *\n   * You can enable task scheduling on a node only if its current scheduling\n   * state is disabled\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node on which you want to\n   * enable task scheduling.\n   *\n   * @param {ComputeNodeEnableSchedulingOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async enableSchedulingWithHttpOperationResponse(poolId: string, nodeId: string, options?: Models.ComputeNodeEnableSchedulingOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let computeNodeEnableSchedulingOptions = (options && options.computeNodeEnableSchedulingOptions !== undefined) ? options.computeNodeEnableSchedulingOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (computeNodeEnableSchedulingOptions !== null && computeNodeEnableSchedulingOptions !== undefined)\n      {\n        timeout = computeNodeEnableSchedulingOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (computeNodeEnableSchedulingOptions !== null && computeNodeEnableSchedulingOptions !== undefined)\n      {\n        clientRequestId = computeNodeEnableSchedulingOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeEnableSchedulingOptions !== null && computeNodeEnableSchedulingOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeEnableSchedulingOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeEnableSchedulingOptions !== null && computeNodeEnableSchedulingOptions !== undefined)\n      {\n        ocpDate = computeNodeEnableSchedulingOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/enablescheduling';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'POST';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Gets the settings required for remote login to a compute node.\n   *\n   * Before you can remotely login to a node using the remote login settings, you\n   * must create a user account on the node. This API can be invoked only on\n   * pools created with the virtual machine configuration property. For pools\n   * created with a cloud service configuration, see the GetRemoteDesktop API.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node for which to obtain the\n   * remote login settings.\n   *\n   * @param {ComputeNodeGetRemoteLoginSettingsOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getRemoteLoginSettingsWithHttpOperationResponse(poolId: string, nodeId: string, options?: Models.ComputeNodeGetRemoteLoginSettingsOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let computeNodeGetRemoteLoginSettingsOptions = (options && options.computeNodeGetRemoteLoginSettingsOptions !== undefined) ? options.computeNodeGetRemoteLoginSettingsOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (computeNodeGetRemoteLoginSettingsOptions !== null && computeNodeGetRemoteLoginSettingsOptions !== undefined)\n      {\n        timeout = computeNodeGetRemoteLoginSettingsOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (computeNodeGetRemoteLoginSettingsOptions !== null && computeNodeGetRemoteLoginSettingsOptions !== undefined)\n      {\n        clientRequestId = computeNodeGetRemoteLoginSettingsOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeGetRemoteLoginSettingsOptions !== null && computeNodeGetRemoteLoginSettingsOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeGetRemoteLoginSettingsOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeGetRemoteLoginSettingsOptions !== null && computeNodeGetRemoteLoginSettingsOptions !== undefined)\n      {\n        ocpDate = computeNodeGetRemoteLoginSettingsOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/remoteloginsettings';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.ComputeNodeGetRemoteLoginSettingsResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Gets the Remote Desktop Protocol file for the specified compute\n   * node.\n   *\n   * Before you can access a node by using the RDP file, you must create a user\n   * account on the node. This API can only be invoked on pools created with a\n   * cloud service configuration. For pools created with a virtual machine\n   * configuration, see the GetRemoteLoginSettings API.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node for which you want to get\n   * the Remote Desktop Protocol file.\n   *\n   * @param {ComputeNodeGetRemoteDesktopOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async getRemoteDesktopWithHttpOperationResponse(poolId: string, nodeId: string, options?: Models.ComputeNodeGetRemoteDesktopOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let computeNodeGetRemoteDesktopOptions = (options && options.computeNodeGetRemoteDesktopOptions !== undefined) ? options.computeNodeGetRemoteDesktopOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (nodeId === null || nodeId === undefined || typeof nodeId.valueOf() !== 'string') {\n        throw new Error('nodeId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (computeNodeGetRemoteDesktopOptions !== null && computeNodeGetRemoteDesktopOptions !== undefined)\n      {\n        timeout = computeNodeGetRemoteDesktopOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (computeNodeGetRemoteDesktopOptions !== null && computeNodeGetRemoteDesktopOptions !== undefined)\n      {\n        clientRequestId = computeNodeGetRemoteDesktopOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeGetRemoteDesktopOptions !== null && computeNodeGetRemoteDesktopOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeGetRemoteDesktopOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeGetRemoteDesktopOptions !== null && computeNodeGetRemoteDesktopOptions !== undefined)\n      {\n        ocpDate = computeNodeGetRemoteDesktopOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes/{nodeId}/rdp';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    requestUrl = requestUrl.replace('{nodeId}', encodeURIComponent(nodeId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    httpRequest.rawResponse = true;\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(`Unexpected status code: ${statusCode}`);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n\n        return Promise.reject(error);\n      }\n\n    } catch(error) {\n      return Promise.reject(error);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists the compute nodes in the specified pool.\n   *\n   * @param {string} poolId The ID of the pool from which you want to list nodes.\n   *\n   * @param {ComputeNodeListOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listWithHttpOperationResponse(poolId: string, options?: Models.ComputeNodeListOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let computeNodeListOptions = (options && options.computeNodeListOptions !== undefined) ? options.computeNodeListOptions : undefined;\n    // Validate\n    try {\n      if (poolId === null || poolId === undefined || typeof poolId.valueOf() !== 'string') {\n        throw new Error('poolId cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.apiVersion === null || this.client.apiVersion === undefined || typeof this.client.apiVersion.valueOf() !== 'string') {\n        throw new Error('this.client.apiVersion cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let filter: any;\n    let select: any;\n    let maxResults: any;\n    let timeout: any;\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (computeNodeListOptions !== null && computeNodeListOptions !== undefined)\n      {\n        filter = computeNodeListOptions.filter;\n        if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {\n          throw new Error('filter must be of type string.');\n        }\n      }\n      if (computeNodeListOptions !== null && computeNodeListOptions !== undefined)\n      {\n        select = computeNodeListOptions.select;\n        if (select !== null && select !== undefined && typeof select.valueOf() !== 'string') {\n          throw new Error('select must be of type string.');\n        }\n      }\n      if (computeNodeListOptions !== null && computeNodeListOptions !== undefined)\n      {\n        maxResults = computeNodeListOptions.maxResults;\n        if (maxResults !== null && maxResults !== undefined && typeof maxResults !== 'number') {\n          throw new Error('maxResults must be of type number.');\n        }\n      }\n      if (computeNodeListOptions !== null && computeNodeListOptions !== undefined)\n      {\n        timeout = computeNodeListOptions.timeout;\n        if (timeout !== null && timeout !== undefined && typeof timeout !== 'number') {\n          throw new Error('timeout must be of type number.');\n        }\n      }\n      if (computeNodeListOptions !== null && computeNodeListOptions !== undefined)\n      {\n        clientRequestId = computeNodeListOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeListOptions !== null && computeNodeListOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeListOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeListOptions !== null && computeNodeListOptions !== undefined)\n      {\n        ocpDate = computeNodeListOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let baseUrl = this.client.baseUri;\n    let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'pools/{poolId}/nodes';\n    requestUrl = requestUrl.replace('{poolId}', encodeURIComponent(poolId));\n    let queryParamsArray: Array<any> = [];\n    queryParamsArray.push('api-version=' + encodeURIComponent(this.client.apiVersion));\n    if (filter !== null && filter !== undefined) {\n      queryParamsArray.push('$filter=' + encodeURIComponent(filter));\n    }\n    if (select !== null && select !== undefined) {\n      queryParamsArray.push('$select=' + encodeURIComponent(select));\n    }\n    if (maxResults !== null && maxResults !== undefined) {\n      queryParamsArray.push('maxresults=' + encodeURIComponent(maxResults.toString()));\n    }\n    if (timeout !== null && timeout !== undefined) {\n      queryParamsArray.push('timeout=' + encodeURIComponent(timeout.toString()));\n    }\n    if (queryParamsArray.length > 0) {\n      requestUrl += '?' + queryParamsArray.join('&');\n    }\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.ComputeNodeListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Lists the compute nodes in the specified pool.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {ComputeNodeListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} - The deserialized result object.\n   *\n   * @reject {Error|ServiceError} - The error object.\n   */\n  async listNextWithHttpOperationResponse(nextPageLink: string, options?: Models.ComputeNodeListNextOptionalParams): Promise<msRest.HttpOperationResponse> {\n    let client = this.client;\n    let computeNodeListNextOptions = (options && options.computeNodeListNextOptions !== undefined) ? options.computeNodeListNextOptions : undefined;\n    // Validate\n    try {\n      if (nextPageLink === null || nextPageLink === undefined || typeof nextPageLink.valueOf() !== 'string') {\n        throw new Error('nextPageLink cannot be null or undefined and it must be of type string.');\n      }\n      if (this.client.acceptLanguage !== null && this.client.acceptLanguage !== undefined && typeof this.client.acceptLanguage.valueOf() !== 'string') {\n        throw new Error('this.client.acceptLanguage must be of type string.');\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    let clientRequestId: any;\n    let returnClientRequestId: any;\n    let ocpDate: any;\n    try {\n      if (computeNodeListNextOptions !== null && computeNodeListNextOptions !== undefined)\n      {\n        clientRequestId = computeNodeListNextOptions.clientRequestId;\n        if (clientRequestId !== null && clientRequestId !== undefined && !(typeof clientRequestId.valueOf() === 'string' && msRest.isValidUuid(clientRequestId))) {\n          throw new Error('clientRequestId must be of type string and must be a valid string.');\n        }\n      }\n      if (computeNodeListNextOptions !== null && computeNodeListNextOptions !== undefined)\n      {\n        returnClientRequestId = computeNodeListNextOptions.returnClientRequestId;\n        if (returnClientRequestId !== null && returnClientRequestId !== undefined && typeof returnClientRequestId !== 'boolean') {\n          throw new Error('returnClientRequestId must be of type boolean.');\n        }\n      }\n      if (computeNodeListNextOptions !== null && computeNodeListNextOptions !== undefined)\n      {\n        ocpDate = computeNodeListNextOptions.ocpDate;\n        if (ocpDate && !(ocpDate instanceof Date ||\n            (typeof (ocpDate as string).valueOf() === 'string' && !isNaN(Date.parse(ocpDate as string))))) {\n              throw new Error('ocpDate must be of type date.');\n            }\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    // Construct URL\n    let requestUrl = '{nextLink}';\n    requestUrl = requestUrl.replace('{nextLink}', nextPageLink);\n\n    // Create HTTP transport objects\n    let httpRequest = new WebResource();\n    httpRequest.method = 'GET';\n    httpRequest.url = requestUrl;\n    httpRequest.headers = {};\n    // Set Headers\n    httpRequest.headers['Content-Type'] = 'application/json; odata=minimalmetadata; charset=utf-8';\n    if (this.client.generateClientRequestId) {\n        httpRequest.headers['client-request-id'] = msRest.generateUuid();\n    }\n    if (this.client.acceptLanguage !== undefined && this.client.acceptLanguage !== null) {\n      httpRequest.headers['accept-language'] = this.client.acceptLanguage;\n    }\n    if (clientRequestId !== undefined && clientRequestId !== null) {\n      httpRequest.headers['client-request-id'] = clientRequestId.toString();\n    }\n    if (returnClientRequestId !== undefined && returnClientRequestId !== null) {\n      httpRequest.headers['return-client-request-id'] = returnClientRequestId.toString();\n    }\n    if (ocpDate !== undefined && ocpDate !== null) {\n      httpRequest.headers['ocp-date'] = ocpDate instanceof Date ? ocpDate.toUTCString() : ocpDate;\n    }\n    if(options && options.customHeaders) {\n      for(let headerName in options.customHeaders) {\n        if (options.customHeaders.hasOwnProperty(headerName)) {\n          httpRequest.headers[headerName] = options.customHeaders[headerName];\n        }\n      }\n    }\n    httpRequest.body = null;\n    // Send Request\n    let operationRes: msRest.HttpOperationResponse;\n    try {\n      operationRes = await client.pipeline(httpRequest);\n      let response = operationRes.response;\n      let statusCode = response.status;\n      if (statusCode !== 200) {\n        let error = new msRest.RestError(operationRes.bodyAsText as string);\n        error.statusCode = response.status;\n        error.request = msRest.stripRequest(httpRequest);\n        error.response = msRest.stripResponse(response);\n        let parsedErrorResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedErrorResponse) {\n            let internalError = null;\n            if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;\n            error.code = internalError ? internalError.code : parsedErrorResponse.code;\n            error.message = internalError ? internalError.message : parsedErrorResponse.message;\n          }\n          if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {\n            let resultMapper = Mappers.BatchError;\n            error.body = client.serializer.deserialize(resultMapper, parsedErrorResponse, 'error.body');\n          }\n        } catch (defaultError) {\n          error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody ` +\n                           `- \"${operationRes.bodyAsText}\" for the default response.`;\n          return Promise.reject(error);\n        }\n        return Promise.reject(error);\n      }\n      // Deserialize Response\n      if (statusCode === 200) {\n        let parsedResponse = operationRes.bodyAsJson as { [key: string]: any };\n        try {\n          if (parsedResponse !== null && parsedResponse !== undefined) {\n            let resultMapper = Mappers.ComputeNodeListResult;\n            operationRes.bodyAsJson = client.serializer.deserialize(resultMapper, parsedResponse, 'operationRes.bodyAsJson');\n          }\n        } catch (error) {\n          let deserializationError = new msRest.RestError(`Error ${error} occurred in deserializing the responseBody - ${operationRes.bodyAsText}`);\n          deserializationError.request = msRest.stripRequest(httpRequest);\n          deserializationError.response = msRest.stripResponse(response);\n          return Promise.reject(deserializationError);\n        }\n      }\n\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(operationRes);\n  }\n\n  /**\n   * @summary Adds a user account to the specified compute node.\n   *\n   * You can add a user account to a node only when it is in the idle or running\n   * state.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the machine on which you want to create a\n   * user account.\n   *\n   * @param {ComputeNodeUser} user The user account to be created.\n   *\n   * @param {ComputeNodeAddUserOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  addUser(poolId: string, nodeId: string, user: Models.ComputeNodeUser): Promise<void>;\n  addUser(poolId: string, nodeId: string, user: Models.ComputeNodeUser, options: Models.ComputeNodeAddUserOptionalParams): Promise<void>;\n  addUser(poolId: string, nodeId: string, user: Models.ComputeNodeUser, callback: msRest.ServiceCallback<void>): void;\n  addUser(poolId: string, nodeId: string, user: Models.ComputeNodeUser, options: Models.ComputeNodeAddUserOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  addUser(poolId: string, nodeId: string, user: Models.ComputeNodeUser, options?: Models.ComputeNodeAddUserOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.addUserWithHttpOperationResponse(poolId, nodeId, user, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.addUserWithHttpOperationResponse(poolId, nodeId, user, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Deletes a user account from the specified compute node.\n   *\n   * You can delete a user account to a node only when it is in the idle or\n   * running state.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the machine on which you want to delete a\n   * user account.\n   *\n   * @param {string} userName The name of the user account to delete.\n   *\n   * @param {ComputeNodeDeleteUserOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  deleteUser(poolId: string, nodeId: string, userName: string): Promise<void>;\n  deleteUser(poolId: string, nodeId: string, userName: string, options: Models.ComputeNodeDeleteUserOptionalParams): Promise<void>;\n  deleteUser(poolId: string, nodeId: string, userName: string, callback: msRest.ServiceCallback<void>): void;\n  deleteUser(poolId: string, nodeId: string, userName: string, options: Models.ComputeNodeDeleteUserOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteUser(poolId: string, nodeId: string, userName: string, options?: Models.ComputeNodeDeleteUserOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.deleteUserWithHttpOperationResponse(poolId, nodeId, userName, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.deleteUserWithHttpOperationResponse(poolId, nodeId, userName, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Updates the password and expiration time of a user account on the\n   * specified compute node.\n   *\n   * This operation replaces of all the updateable properties of the account. For\n   * example, if the expiryTime element is not specified, the current value is\n   * replaced with the default value, not left unmodified. You can update a user\n   * account on a node only when it is in the idle or running state.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the machine on which you want to update a\n   * user account.\n   *\n   * @param {string} userName The name of the user account to update.\n   *\n   * @param {NodeUpdateUserParameter} nodeUpdateUserParameter The parameters for\n   * the request.\n   *\n   * @param {ComputeNodeUpdateUserOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  updateUser(poolId: string, nodeId: string, userName: string, nodeUpdateUserParameter: Models.NodeUpdateUserParameter): Promise<void>;\n  updateUser(poolId: string, nodeId: string, userName: string, nodeUpdateUserParameter: Models.NodeUpdateUserParameter, options: Models.ComputeNodeUpdateUserOptionalParams): Promise<void>;\n  updateUser(poolId: string, nodeId: string, userName: string, nodeUpdateUserParameter: Models.NodeUpdateUserParameter, callback: msRest.ServiceCallback<void>): void;\n  updateUser(poolId: string, nodeId: string, userName: string, nodeUpdateUserParameter: Models.NodeUpdateUserParameter, options: Models.ComputeNodeUpdateUserOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  updateUser(poolId: string, nodeId: string, userName: string, nodeUpdateUserParameter: Models.NodeUpdateUserParameter, options?: Models.ComputeNodeUpdateUserOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.updateUserWithHttpOperationResponse(poolId, nodeId, userName, nodeUpdateUserParameter, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.updateUserWithHttpOperationResponse(poolId, nodeId, userName, nodeUpdateUserParameter, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Gets information about the specified compute node.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node that you want to get\n   * information about.\n   *\n   * @param {ComputeNodeGetOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.ComputeNode} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.ComputeNode} for more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  get(poolId: string, nodeId: string): Promise<Models.ComputeNode>;\n  get(poolId: string, nodeId: string, options: Models.ComputeNodeGetOptionalParams): Promise<Models.ComputeNode>;\n  get(poolId: string, nodeId: string, callback: msRest.ServiceCallback<Models.ComputeNode>): void;\n  get(poolId: string, nodeId: string, options: Models.ComputeNodeGetOptionalParams, callback: msRest.ServiceCallback<Models.ComputeNode>): void;\n  get(poolId: string, nodeId: string, options?: Models.ComputeNodeGetOptionalParams, callback?: msRest.ServiceCallback<Models.ComputeNode>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.ComputeNode>;\n    if (!callback) {\n      return this.getWithHttpOperationResponse(poolId, nodeId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.ComputeNode);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getWithHttpOperationResponse(poolId, nodeId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.ComputeNode;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Restarts the specified compute node.\n   *\n   * You can restart a node only if it is in an idle or running state.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node that you want to restart.\n   *\n   * @param {ComputeNodeRebootOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  reboot(poolId: string, nodeId: string): Promise<void>;\n  reboot(poolId: string, nodeId: string, options: Models.ComputeNodeRebootOptionalParams): Promise<void>;\n  reboot(poolId: string, nodeId: string, callback: msRest.ServiceCallback<void>): void;\n  reboot(poolId: string, nodeId: string, options: Models.ComputeNodeRebootOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  reboot(poolId: string, nodeId: string, options?: Models.ComputeNodeRebootOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.rebootWithHttpOperationResponse(poolId, nodeId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.rebootWithHttpOperationResponse(poolId, nodeId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Reinstalls the operating system on the specified compute node.\n   *\n   * You can reinstall the operating system on a node only if it is in an idle or\n   * running state. This API can be invoked only on pools created with the cloud\n   * service configuration property.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node that you want to restart.\n   *\n   * @param {ComputeNodeReimageOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  reimage(poolId: string, nodeId: string): Promise<void>;\n  reimage(poolId: string, nodeId: string, options: Models.ComputeNodeReimageOptionalParams): Promise<void>;\n  reimage(poolId: string, nodeId: string, callback: msRest.ServiceCallback<void>): void;\n  reimage(poolId: string, nodeId: string, options: Models.ComputeNodeReimageOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  reimage(poolId: string, nodeId: string, options?: Models.ComputeNodeReimageOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.reimageWithHttpOperationResponse(poolId, nodeId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.reimageWithHttpOperationResponse(poolId, nodeId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Disables task scheduling on the specified compute node.\n   *\n   * You can disable task scheduling on a node only if its current scheduling\n   * state is enabled.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node on which you want to\n   * disable task scheduling.\n   *\n   * @param {ComputeNodeDisableSchedulingOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  disableScheduling(poolId: string, nodeId: string): Promise<void>;\n  disableScheduling(poolId: string, nodeId: string, options: Models.ComputeNodeDisableSchedulingOptionalParams): Promise<void>;\n  disableScheduling(poolId: string, nodeId: string, callback: msRest.ServiceCallback<void>): void;\n  disableScheduling(poolId: string, nodeId: string, options: Models.ComputeNodeDisableSchedulingOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  disableScheduling(poolId: string, nodeId: string, options?: Models.ComputeNodeDisableSchedulingOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.disableSchedulingWithHttpOperationResponse(poolId, nodeId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.disableSchedulingWithHttpOperationResponse(poolId, nodeId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Enables task scheduling on the specified compute node.\n   *\n   * You can enable task scheduling on a node only if its current scheduling\n   * state is disabled\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node on which you want to\n   * enable task scheduling.\n   *\n   * @param {ComputeNodeEnableSchedulingOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  enableScheduling(poolId: string, nodeId: string): Promise<void>;\n  enableScheduling(poolId: string, nodeId: string, options: Models.ComputeNodeEnableSchedulingOptionalParams): Promise<void>;\n  enableScheduling(poolId: string, nodeId: string, callback: msRest.ServiceCallback<void>): void;\n  enableScheduling(poolId: string, nodeId: string, options: Models.ComputeNodeEnableSchedulingOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  enableScheduling(poolId: string, nodeId: string, options?: Models.ComputeNodeEnableSchedulingOptionalParams, callback?: msRest.ServiceCallback<void>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<void>;\n    if (!callback) {\n      return this.enableSchedulingWithHttpOperationResponse(poolId, nodeId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as void);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.enableSchedulingWithHttpOperationResponse(poolId, nodeId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as void;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Gets the settings required for remote login to a compute node.\n   *\n   * Before you can remotely login to a node using the remote login settings, you\n   * must create a user account on the node. This API can be invoked only on\n   * pools created with the virtual machine configuration property. For pools\n   * created with a cloud service configuration, see the GetRemoteDesktop API.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node for which to obtain the\n   * remote login settings.\n   *\n   * @param {ComputeNodeGetRemoteLoginSettingsOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.ComputeNodeGetRemoteLoginSettingsResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link\n   *                      Models.ComputeNodeGetRemoteLoginSettingsResult} for\n   *                      more information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  getRemoteLoginSettings(poolId: string, nodeId: string): Promise<Models.ComputeNodeGetRemoteLoginSettingsResult>;\n  getRemoteLoginSettings(poolId: string, nodeId: string, options: Models.ComputeNodeGetRemoteLoginSettingsOptionalParams): Promise<Models.ComputeNodeGetRemoteLoginSettingsResult>;\n  getRemoteLoginSettings(poolId: string, nodeId: string, callback: msRest.ServiceCallback<Models.ComputeNodeGetRemoteLoginSettingsResult>): void;\n  getRemoteLoginSettings(poolId: string, nodeId: string, options: Models.ComputeNodeGetRemoteLoginSettingsOptionalParams, callback: msRest.ServiceCallback<Models.ComputeNodeGetRemoteLoginSettingsResult>): void;\n  getRemoteLoginSettings(poolId: string, nodeId: string, options?: Models.ComputeNodeGetRemoteLoginSettingsOptionalParams, callback?: msRest.ServiceCallback<Models.ComputeNodeGetRemoteLoginSettingsResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.ComputeNodeGetRemoteLoginSettingsResult>;\n    if (!callback) {\n      return this.getRemoteLoginSettingsWithHttpOperationResponse(poolId, nodeId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.ComputeNodeGetRemoteLoginSettingsResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getRemoteLoginSettingsWithHttpOperationResponse(poolId, nodeId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.ComputeNodeGetRemoteLoginSettingsResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Gets the Remote Desktop Protocol file for the specified compute\n   * node.\n   *\n   * Before you can access a node by using the RDP file, you must create a user\n   * account on the node. This API can only be invoked on pools created with a\n   * cloud service configuration. For pools created with a virtual machine\n   * configuration, see the GetRemoteLoginSettings API.\n   *\n   * @param {string} poolId The ID of the pool that contains the compute node.\n   *\n   * @param {string} nodeId The ID of the compute node for which you want to get\n   * the Remote Desktop Protocol file.\n   *\n   * @param {ComputeNodeGetRemoteDesktopOptionalParams} [options] Optional\n   * Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {ReadableStream} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  getRemoteDesktop(poolId: string, nodeId: string): Promise<ReadableStream>;\n  getRemoteDesktop(poolId: string, nodeId: string, options: Models.ComputeNodeGetRemoteDesktopOptionalParams): Promise<ReadableStream>;\n  getRemoteDesktop(poolId: string, nodeId: string, callback: msRest.ServiceCallback<ReadableStream>): void;\n  getRemoteDesktop(poolId: string, nodeId: string, options: Models.ComputeNodeGetRemoteDesktopOptionalParams, callback: msRest.ServiceCallback<ReadableStream>): void;\n  getRemoteDesktop(poolId: string, nodeId: string, options?: Models.ComputeNodeGetRemoteDesktopOptionalParams, callback?: msRest.ServiceCallback<ReadableStream>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<ReadableStream>;\n    if (!callback) {\n      return this.getRemoteDesktopWithHttpOperationResponse(poolId, nodeId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsStream as ReadableStream);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.getRemoteDesktopWithHttpOperationResponse(poolId, nodeId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsStream as ReadableStream;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists the compute nodes in the specified pool.\n   *\n   * @param {string} poolId The ID of the pool from which you want to list nodes.\n   *\n   * @param {ComputeNodeListOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.ComputeNodeListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.ComputeNodeListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  list(poolId: string): Promise<Models.ComputeNodeListResult>;\n  list(poolId: string, options: Models.ComputeNodeListOptionalParams): Promise<Models.ComputeNodeListResult>;\n  list(poolId: string, callback: msRest.ServiceCallback<Models.ComputeNodeListResult>): void;\n  list(poolId: string, options: Models.ComputeNodeListOptionalParams, callback: msRest.ServiceCallback<Models.ComputeNodeListResult>): void;\n  list(poolId: string, options?: Models.ComputeNodeListOptionalParams, callback?: msRest.ServiceCallback<Models.ComputeNodeListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.ComputeNodeListResult>;\n    if (!callback) {\n      return this.listWithHttpOperationResponse(poolId, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.ComputeNodeListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listWithHttpOperationResponse(poolId, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.ComputeNodeListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n  /**\n   * @summary Lists the compute nodes in the specified pool.\n   *\n   * @param {string} nextPageLink The NextLink from the previous successful call\n   * to List operation.\n   *\n   * @param {ComputeNodeListNextOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback - The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, response)\n   *\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *\n   *                      {Models.ComputeNodeListResult} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.ComputeNodeListResult} for more\n   *                      information.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *\n   *                      {Response} [response] - The HTTP Response stream if an error did not occur.\n   */\n  listNext(nextPageLink: string): Promise<Models.ComputeNodeListResult>;\n  listNext(nextPageLink: string, options: Models.ComputeNodeListNextOptionalParams): Promise<Models.ComputeNodeListResult>;\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ComputeNodeListResult>): void;\n  listNext(nextPageLink: string, options: Models.ComputeNodeListNextOptionalParams, callback: msRest.ServiceCallback<Models.ComputeNodeListResult>): void;\n  listNext(nextPageLink: string, options?: Models.ComputeNodeListNextOptionalParams, callback?: msRest.ServiceCallback<Models.ComputeNodeListResult>): any {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n    let cb = callback as msRest.ServiceCallback<Models.ComputeNodeListResult>;\n    if (!callback) {\n      return this.listNextWithHttpOperationResponse(nextPageLink, options).then((operationRes: msRest.HttpOperationResponse) => {\n        return Promise.resolve(operationRes.bodyAsJson as Models.ComputeNodeListResult);\n      }).catch((err: Error) => {\n        return Promise.reject(err);\n      });\n    } else {\n      msRest.promiseToCallback(this.listNextWithHttpOperationResponse(nextPageLink, options))((err: Error, data: msRest.HttpOperationResponse) => {\n        if (err) {\n          return cb(err);\n        }\n        let result = data.bodyAsJson as Models.ComputeNodeListResult;\n        return cb(err, result, data.request, data.response);\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/operations/computeNodeOperations.ts"],"sourceRoot":""}